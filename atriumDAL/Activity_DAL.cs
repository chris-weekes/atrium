using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on Activity table 
	/// in lawmate database
	/// on 5/2/2007
	/// </summary>
	public partial class ActivityDAL:atDAL.ObjectDAL
	{

    	internal ActivityDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Activity", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("ActivityId", "ActivityId"),
		  new System.Data.Common.DataColumnMapping("PreviousActivityId", "PreviousActivityId"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("DocId", "DocId"),
		  new System.Data.Common.DataColumnMapping("OfficeId", "OfficeId"),
		  new System.Data.Common.DataColumnMapping("LinkTable", "LinkTable"),
		  new System.Data.Common.DataColumnMapping("LinkID", "LinkID"),
		  new System.Data.Common.DataColumnMapping("ActivityCodeID", "ActivityCodeID"),
		  new System.Data.Common.DataColumnMapping("ACSeriesId", "ACSeriesId"),
		  new System.Data.Common.DataColumnMapping("ActivityDate", "ActivityDate"),
		  new System.Data.Common.DataColumnMapping("ActivityEntryDate", "ActivityEntryDate"),
		  new System.Data.Common.DataColumnMapping("ActivityComment", "ActivityComment"),
		  new System.Data.Common.DataColumnMapping("OfficerId", "OfficerId"),
		  new System.Data.Common.DataColumnMapping("FileStatusCode", "FileStatusCode"),
		  new System.Data.Common.DataColumnMapping("ConvIndexBase", "ConvIndexBase"),
		  new System.Data.Common.DataColumnMapping("ConversationIndex", "ConversationIndex"),
		  new System.Data.Common.DataColumnMapping("ProcessId", "ProcessId"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("FailedToSend", "FailedToSend"),
          new System.Data.Common.DataColumnMapping("SendType", "SendType"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[ActivitySelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[ActivityInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityId", SqlDbType.Int, 10, "ActivityId"));
			this.sqlInsert.Parameters["@ActivityId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PreviousActivityId", SqlDbType.Int, 10, "PreviousActivityId"));
			this.sqlInsert.Parameters["@PreviousActivityId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlInsert.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DocId", SqlDbType.Int, 10, "DocId"));
			this.sqlInsert.Parameters["@DocId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 10, "OfficeId"));
			this.sqlInsert.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LinkTable", SqlDbType.NVarChar, 25, "LinkTable"));
			this.sqlInsert.Parameters["@LinkTable"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LinkID", SqlDbType.Int, 10, "LinkID"));
			this.sqlInsert.Parameters["@LinkID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityCodeID", SqlDbType.Int, 10, "ActivityCodeID"));
			this.sqlInsert.Parameters["@ActivityCodeID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
			this.sqlInsert.Parameters["@ACSeriesId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityDate", SqlDbType.SmallDateTime, 24, "ActivityDate"));
			this.sqlInsert.Parameters["@ActivityDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityEntryDate", SqlDbType.SmallDateTime, 24, "ActivityEntryDate"));
			this.sqlInsert.Parameters["@ActivityEntryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityComment", SqlDbType.NVarChar, 255, "ActivityComment"));
			this.sqlInsert.Parameters["@ActivityComment"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficerId", SqlDbType.Int, 10, "OfficerId"));
			this.sqlInsert.Parameters["@OfficerId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileStatusCode", SqlDbType.NVarChar, 1, "FileStatusCode"));
			this.sqlInsert.Parameters["@FileStatusCode"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ConvIndexBase", SqlDbType.NVarChar, 44, "ConvIndexBase"));
            this.sqlInsert.Parameters["@ConvIndexBase"].SourceVersion = DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ConversationIndex", SqlDbType.NVarChar, 2147483647, "ConversationIndex"));
			this.sqlInsert.Parameters["@ConversationIndex"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ProcessId", SqlDbType.Int, 10, "ProcessId"));
			this.sqlInsert.Parameters["@ProcessId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FailedToSend", SqlDbType.Bit, 1, "FailedToSend"));
            this.sqlInsert.Parameters["@FailedToSend"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SendType", SqlDbType.NVarChar, 1, "SendType"));
            this.sqlInsert.Parameters["@SendType"].SourceVersion = DataRowVersion.Current;
			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[ActivityUpdateNew]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityId", SqlDbType.Int, 10, "ActivityId"));
			this.sqlUpdate.Parameters["@ActivityId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PreviousActivityId", SqlDbType.Int, 10, "PreviousActivityId"));
			this.sqlUpdate.Parameters["@PreviousActivityId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlUpdate.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DocId", SqlDbType.Int, 10, "DocId"));
			this.sqlUpdate.Parameters["@DocId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 10, "OfficeId"));
			this.sqlUpdate.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LinkTable", SqlDbType.NVarChar, 25, "LinkTable"));
			this.sqlUpdate.Parameters["@LinkTable"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LinkID", SqlDbType.Int, 10, "LinkID"));
			this.sqlUpdate.Parameters["@LinkID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityCodeID", SqlDbType.Int, 10, "ActivityCodeID"));
			this.sqlUpdate.Parameters["@ActivityCodeID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
			this.sqlUpdate.Parameters["@ACSeriesId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityDate", SqlDbType.SmallDateTime, 24, "ActivityDate"));
			this.sqlUpdate.Parameters["@ActivityDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityEntryDate", SqlDbType.SmallDateTime, 24, "ActivityEntryDate"));
			this.sqlUpdate.Parameters["@ActivityEntryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityComment", SqlDbType.NVarChar, 255, "ActivityComment"));
			this.sqlUpdate.Parameters["@ActivityComment"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficerId", SqlDbType.Int, 10, "OfficerId"));
			this.sqlUpdate.Parameters["@OfficerId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileStatusCode", SqlDbType.NVarChar, 1, "FileStatusCode"));
			this.sqlUpdate.Parameters["@FileStatusCode"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ConvIndexBase", SqlDbType.NVarChar, 44, "ConvIndexBase"));
            this.sqlUpdate.Parameters["@ConvIndexBase"].SourceVersion = DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ConversationIndex", SqlDbType.NVarChar, 2147483647, "ConversationIndex"));
			this.sqlUpdate.Parameters["@ConversationIndex"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ProcessId", SqlDbType.Int, 10, "ProcessId"));
			this.sqlUpdate.Parameters["@ProcessId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@xrefid", System.Data.SqlDbType.Int, 4, "XrefId"));
            this.sqlUpdate.Parameters["@xrefid"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FailedToSend", SqlDbType.Bit, 1, "FailedToSend"));
            this.sqlUpdate.Parameters["@FailedToSend"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SendType", SqlDbType.NVarChar, 1, "SendType"));
            this.sqlUpdate.Parameters["@SendType"].SourceVersion = DataRowVersion.Current;

            this.sqlUpdate.Parameters.Add(new SqlParameter("@origPreviousActivityId", SqlDbType.Int, 10, "PreviousActivityId"));
            this.sqlUpdate.Parameters["@origPreviousActivityId"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origFileId", SqlDbType.Int, 10, "FileId"));
            this.sqlUpdate.Parameters["@origFileId"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origDocId", SqlDbType.Int, 10, "DocId"));
            this.sqlUpdate.Parameters["@origDocId"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origOfficeId", SqlDbType.Int, 10, "OfficeId"));
            this.sqlUpdate.Parameters["@origOfficeId"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origLinkTable", SqlDbType.NVarChar, 25, "LinkTable"));
            this.sqlUpdate.Parameters["@origLinkTable"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origLinkID", SqlDbType.Int, 10, "LinkID"));
            this.sqlUpdate.Parameters["@origLinkID"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origActivityCodeID", SqlDbType.Int, 10, "ActivityCodeID"));
            this.sqlUpdate.Parameters["@origActivityCodeID"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
            this.sqlUpdate.Parameters["@origACSeriesId"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origActivityDate", SqlDbType.SmallDateTime, 24, "ActivityDate"));
            this.sqlUpdate.Parameters["@origActivityDate"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origActivityEntryDate", SqlDbType.SmallDateTime, 24, "ActivityEntryDate"));
            this.sqlUpdate.Parameters["@origActivityEntryDate"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origActivityComment", SqlDbType.NVarChar, 255, "ActivityComment"));
            this.sqlUpdate.Parameters["@origActivityComment"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origOfficerId", SqlDbType.Int, 10, "OfficerId"));
            this.sqlUpdate.Parameters["@origOfficerId"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origFileStatusCode", SqlDbType.NVarChar, 1, "FileStatusCode"));
            this.sqlUpdate.Parameters["@origFileStatusCode"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origConvIndexBase", SqlDbType.NVarChar, 44, "ConvIndexBase"));
            this.sqlUpdate.Parameters["@origConvIndexBase"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origConversationIndex", SqlDbType.NVarChar, 2147483647, "ConversationIndex"));
            this.sqlUpdate.Parameters["@origConversationIndex"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origProcessId", SqlDbType.Int, 10, "ProcessId"));
            this.sqlUpdate.Parameters["@origProcessId"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origFailedToSend", SqlDbType.Bit, 1, "FailedToSend"));
            this.sqlUpdate.Parameters["@origFailedToSend"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origSendType", SqlDbType.NVarChar, 1, "SendType"));
            this.sqlUpdate.Parameters["@origSendType"].SourceVersion = DataRowVersion.Original;
            // 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[ActivityDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityId", System.Data.SqlDbType.Int, 4, "ActivityId"));
		    this.sqlDelete.Parameters["@ActivityId"].SourceVersion=DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@xrefid", System.Data.SqlDbType.Int, 4, "XrefId"));
            this.sqlDelete.Parameters["@xrefid"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public atriumDB.ActivityDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            atriumDB.ActivityDataTable dt=new atriumDB.ActivityDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public atriumDB.ActivityDataTable Load(int ActivityId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ActivitySelectByActivityId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@ActivityId"].Value=ActivityId;

            atriumDB.ActivityDataTable dt=new atriumDB.ActivityDataTable();
			Fill(dt);
            return dt;
		}


		public atriumDB.ActivityDataTable LoadByActivityCodeID(int ActivityCodeID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ActivitySelectByActivityCodeID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityCodeID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@ActivityCodeID"].Value=ActivityCodeID;

            atriumDB.ActivityDataTable dt=new atriumDB.ActivityDataTable();
			Fill(dt);
            return dt;
		}



        public atriumDB.ActivityDataTable LoadByFileId(int FileId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ActivitySelectByFileIdM]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileId"].Value=FileId;
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@lstActivityEdit", System.Data.SqlDbType.SmallDateTime, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters["@lstActivityEdit"].Value = myLastEdit;

            atriumDB.ActivityDataTable dt=new atriumDB.ActivityDataTable();
			Fill(dt);
            return dt;
		}



		public atriumDB.ActivityDataTable LoadByOfficeId(int OfficeId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ActivitySelectByOfficeId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficeId"].Value=OfficeId;

            atriumDB.ActivityDataTable dt=new atriumDB.ActivityDataTable();
			Fill(dt);
            return dt;
		}



		public atriumDB.ActivityDataTable LoadByOfficerId(int OfficerId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ActivitySelectByOfficerId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficerId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficerId"].Value=OfficerId;

            atriumDB.ActivityDataTable dt=new atriumDB.ActivityDataTable();
			Fill(dt);
            return dt;
		}



		public atriumDB.ActivityDataTable LoadByProcessId(int ProcessId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ActivitySelectByProcessId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProcessId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@ProcessId"].Value=ProcessId;

            atriumDB.ActivityDataTable dt=new atriumDB.ActivityDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
