using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
    /// <summary>
    /// Class generated by sgen 
    /// based on Document table 
    /// in lawmate database
    /// on 2/20/2007
    /// </summary>
    public partial class DocumentDAL : atDAL.ObjectDAL
    {

        internal DocumentDAL(atriumDALManager pDALManager)
            : base(pDALManager)
        {
            Init();
        }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Document", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("DocId", "DocId"),
		  new System.Data.Common.DataColumnMapping("secOwnerId", "secOwnerId"),
		  new System.Data.Common.DataColumnMapping("OfficerId", "OfficerId"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  //new System.Data.Common.DataColumnMapping("Path", "Path"),
		  //new System.Data.Common.DataColumnMapping("Name", "Name"),
		  new System.Data.Common.DataColumnMapping("Source", "Source"),
		  new System.Data.Common.DataColumnMapping("TemplateId", "TemplateId"),
		  new System.Data.Common.DataColumnMapping("CommMode", "CommMode"),
		  new System.Data.Common.DataColumnMapping("efType", "efType"),
		  //new System.Data.Common.DataColumnMapping("efFrom", "efFrom"),
		  //new System.Data.Common.DataColumnMapping("efTo", "efTo"),
		  new System.Data.Common.DataColumnMapping("efDate", "efDate"),
		  new System.Data.Common.DataColumnMapping("efSubject", "efSubject"),
		  new System.Data.Common.DataColumnMapping("efSeq", "efSeq"),
		  new System.Data.Common.DataColumnMapping("efCodes", "efCodes"),
		  new System.Data.Common.DataColumnMapping("SentTime", "SentTime"),
		  new System.Data.Common.DataColumnMapping("ReceivedTime", "ReceivedTime"),
		  //new System.Data.Common.DataColumnMapping("Keywords", "Keywords"),
		  new System.Data.Common.DataColumnMapping("FiledBy", "FiledBy"),
		  new System.Data.Common.DataColumnMapping("Author", "Author"),
		  new System.Data.Common.DataColumnMapping("PV", "PV"),
		  new System.Data.Common.DataColumnMapping("Opinion", "Opinion"),
		  new System.Data.Common.DataColumnMapping("IsDraft", "IsDraft"),
		  new System.Data.Common.DataColumnMapping("DraftSecurity", "DraftSecurity"),
		  new System.Data.Common.DataColumnMapping("Security", "Security"),
		  new System.Data.Common.DataColumnMapping("isElectronic", "isElectronic"),
		  new System.Data.Common.DataColumnMapping("isPaper", "isPaper"),
		  new System.Data.Common.DataColumnMapping("isLawMail", "isLawMail"),
		  new System.Data.Common.DataColumnMapping("LanguageCode", "LanguageCode"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
				  new System.Data.Common.DataColumnMapping("CheckedOutBy", "CheckedOutBy"),
		  new System.Data.Common.DataColumnMapping("CheckedOutDate", "CheckedOutDate"),
		  new System.Data.Common.DataColumnMapping("CheckedOutPath", "CheckedOutPath"),
          new System.Data.Common.DataColumnMapping("PageCount", "PageCount"),
          new System.Data.Common.DataColumnMapping("CurrentVersion", "CurrentVersion"),
          new System.Data.Common.DataColumnMapping("DocRefId", "DocRefId"),
          new System.Data.Common.DataColumnMapping("SourceDivision", "SourceDivision"),
          new System.Data.Common.DataColumnMapping("SentToShareFolder", "SentToShareFolder"),
          new System.Data.Common.DataColumnMapping("DocDumpFullPath", "DocDumpFullPath"),
          new System.Data.Common.DataColumnMapping("DocDumpDate", "DocDumpDate"),
          new System.Data.Common.DataColumnMapping("DocDumpUser", "DocDumpUser"),
	})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[DocumentSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[DocumentInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@DocId", SqlDbType.Int, 10, "DocId"));
            this.sqlInsert.Parameters["@DocId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@secOwnerId", SqlDbType.Int, 10, "secOwnerId"));
            this.sqlInsert.Parameters["@secOwnerId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OfficerId", SqlDbType.Int, 10, "OfficerId"));
            this.sqlInsert.Parameters["@OfficerId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlInsert.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            //this.sqlInsert.Parameters.Add(new SqlParameter("@Path", SqlDbType.NVarChar, 300, "Path"));
            //this.sqlInsert.Parameters["@Path"].SourceVersion = DataRowVersion.Current;
            //this.sqlInsert.Parameters.Add(new SqlParameter("@Name", SqlDbType.NVarChar, 255, "Name"));
            //this.sqlInsert.Parameters["@Name"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Source", SqlDbType.NVarChar, 50, "Source"));
            this.sqlInsert.Parameters["@Source"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@TemplateId", SqlDbType.Int, 10, "TemplateId"));
            this.sqlInsert.Parameters["@TemplateId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CommMode", SqlDbType.NVarChar, 6, "CommMode"));
            this.sqlInsert.Parameters["@CommMode"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@efType", SqlDbType.NVarChar, 6, "efType"));
            this.sqlInsert.Parameters["@efType"].SourceVersion = DataRowVersion.Current;
            //this.sqlInsert.Parameters.Add(new SqlParameter("@efFrom", SqlDbType.NVarChar, 50, "efFrom"));
            //this.sqlInsert.Parameters["@efFrom"].SourceVersion = DataRowVersion.Current;
            //this.sqlInsert.Parameters.Add(new SqlParameter("@efTo", SqlDbType.NVarChar, 50, "efTo"));
            //this.sqlInsert.Parameters["@efTo"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@efDate", SqlDbType.SmallDateTime, 24, "efDate"));
            this.sqlInsert.Parameters["@efDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@efSubject", SqlDbType.NVarChar, 255, "efSubject"));
            this.sqlInsert.Parameters["@efSubject"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@efSeq", SqlDbType.NVarChar, 5, "efSeq"));
            this.sqlInsert.Parameters["@efSeq"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@efCodes", SqlDbType.NVarChar, 50, "efCodes"));
            this.sqlInsert.Parameters["@efCodes"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SentTime", SqlDbType.SmallDateTime, 24, "SentTime"));
            this.sqlInsert.Parameters["@SentTime"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ReceivedTime", SqlDbType.SmallDateTime, 24, "ReceivedTime"));
            this.sqlInsert.Parameters["@ReceivedTime"].SourceVersion = DataRowVersion.Current;
            //this.sqlInsert.Parameters.Add(new SqlParameter("@Keywords", SqlDbType.NVarChar, 512, "Keywords"));
            //this.sqlInsert.Parameters["@Keywords"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FiledBy", SqlDbType.NVarChar, 50, "FiledBy"));
            this.sqlInsert.Parameters["@FiledBy"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Author", SqlDbType.NVarChar, 50, "Author"));
            this.sqlInsert.Parameters["@Author"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@PV", SqlDbType.Bit, 1, "PV"));
            this.sqlInsert.Parameters["@PV"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Opinion", SqlDbType.Bit, 1, "Opinion"));
            this.sqlInsert.Parameters["@Opinion"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsDraft", SqlDbType.Bit, 1, "IsDraft"));
            this.sqlInsert.Parameters["@IsDraft"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DraftSecurity", SqlDbType.Int, 10, "DraftSecurity"));
            this.sqlInsert.Parameters["@DraftSecurity"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Security", SqlDbType.NVarChar, 6, "Security"));
            this.sqlInsert.Parameters["@Security"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@isElectronic", SqlDbType.Bit, 1, "isElectronic"));
            this.sqlInsert.Parameters["@isElectronic"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@isPaper", SqlDbType.Bit, 1, "isPaper"));
            this.sqlInsert.Parameters["@isPaper"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@isLawMail", SqlDbType.Bit, 1, "isLawMail"));
            this.sqlInsert.Parameters["@isLawMail"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LanguageCode", SqlDbType.NVarChar, 3, "LanguageCode"));
            this.sqlInsert.Parameters["@LanguageCode"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CheckedOutBy", SqlDbType.Int, 10, "CheckedOutBy"));
            this.sqlInsert.Parameters["@CheckedOutBy"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CheckedOutDate", SqlDbType.SmallDateTime, 24, "CheckedOutDate"));
            this.sqlInsert.Parameters["@CheckedOutDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CheckedOutPath", SqlDbType.NVarChar, 300, "CheckedOutPath"));
            this.sqlInsert.Parameters["@CheckedOutPath"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@PageCount", SqlDbType.Int, 10, "PageCount"));
            this.sqlInsert.Parameters["@PageCount"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CurrentVersion", SqlDbType.Char, 10, "CurrentVersion"));
            this.sqlInsert.Parameters["@CurrentVersion"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DocRefId", SqlDbType.Int, 10, "DocRefId"));
            this.sqlInsert.Parameters["@DocRefId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SourceDivision", SqlDbType.Int, 6, "SourceDivision"));
            this.sqlInsert.Parameters["@SourceDivision"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SentToShareFolder", SqlDbType.Int, 10, "SentToShareFolder"));
            this.sqlInsert.Parameters["@SentToShareFolder"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DocDumpFullPath", SqlDbType.NVarChar, 300, "DocDumpFullPath"));
            this.sqlInsert.Parameters["@DocDumpFullPath"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DocDumpDate", SqlDbType.SmallDateTime, 24, "DocDumpDate"));
            this.sqlInsert.Parameters["@DocDumpDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DocDumpUser", SqlDbType.NVarChar, 50, "DocDumpUser"));
            this.sqlInsert.Parameters["@DocDumpUser"].SourceVersion = DataRowVersion.Current;


            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[DocumentUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocId", SqlDbType.Int, 10, "DocId"));
            this.sqlUpdate.Parameters["@DocId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@secOwnerId", SqlDbType.Int, 10, "secOwnerId"));
            this.sqlUpdate.Parameters["@secOwnerId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficerId", SqlDbType.Int, 10, "OfficerId"));
            this.sqlUpdate.Parameters["@OfficerId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlUpdate.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@origFileId", SqlDbType.Int, 10, "FileId"));
            this.sqlUpdate.Parameters["@origFileId"].SourceVersion = DataRowVersion.Original;
            //this.sqlUpdate.Parameters.Add(new SqlParameter("@Path", SqlDbType.NVarChar, 300, "Path"));
            //this.sqlUpdate.Parameters["@Path"].SourceVersion = DataRowVersion.Current;
            //this.sqlUpdate.Parameters.Add(new SqlParameter("@Name", SqlDbType.NVarChar, 255, "Name"));
            //this.sqlUpdate.Parameters["@Name"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Source", SqlDbType.NVarChar, 50, "Source"));
            this.sqlUpdate.Parameters["@Source"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@TemplateId", SqlDbType.Int, 10, "TemplateId"));
            this.sqlUpdate.Parameters["@TemplateId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CommMode", SqlDbType.NVarChar, 6, "CommMode"));
            this.sqlUpdate.Parameters["@CommMode"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@efType", SqlDbType.NVarChar, 6, "efType"));
            this.sqlUpdate.Parameters["@efType"].SourceVersion = DataRowVersion.Current;
            //this.sqlUpdate.Parameters.Add(new SqlParameter("@efFrom", SqlDbType.NVarChar, 50, "efFrom"));
            //this.sqlUpdate.Parameters["@efFrom"].SourceVersion = DataRowVersion.Current;
            //this.sqlUpdate.Parameters.Add(new SqlParameter("@efTo", SqlDbType.NVarChar, 50, "efTo"));
            //this.sqlUpdate.Parameters["@efTo"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@efDate", SqlDbType.SmallDateTime, 24, "efDate"));
            this.sqlUpdate.Parameters["@efDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@efSubject", SqlDbType.NVarChar, 255, "efSubject"));
            this.sqlUpdate.Parameters["@efSubject"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@efSeq", SqlDbType.NVarChar, 5, "efSeq"));
            this.sqlUpdate.Parameters["@efSeq"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@efCodes", SqlDbType.NVarChar, 50, "efCodes"));
            this.sqlUpdate.Parameters["@efCodes"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SentTime", SqlDbType.SmallDateTime, 24, "SentTime"));
            this.sqlUpdate.Parameters["@SentTime"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ReceivedTime", SqlDbType.SmallDateTime, 24, "ReceivedTime"));
            this.sqlUpdate.Parameters["@ReceivedTime"].SourceVersion = DataRowVersion.Current;
            //this.sqlUpdate.Parameters.Add(new SqlParameter("@Keywords", SqlDbType.NVarChar, 512, "Keywords"));
            //this.sqlUpdate.Parameters["@Keywords"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FiledBy", SqlDbType.NVarChar, 50, "FiledBy"));
            this.sqlUpdate.Parameters["@FiledBy"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Author", SqlDbType.NVarChar, 50, "Author"));
            this.sqlUpdate.Parameters["@Author"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@PV", SqlDbType.Bit, 1, "PV"));
            this.sqlUpdate.Parameters["@PV"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Opinion", SqlDbType.Bit, 1, "Opinion"));
            this.sqlUpdate.Parameters["@Opinion"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsDraft", SqlDbType.Bit, 1, "IsDraft"));
            this.sqlUpdate.Parameters["@IsDraft"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DraftSecurity", SqlDbType.Int, 10, "DraftSecurity"));
            this.sqlUpdate.Parameters["@DraftSecurity"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Security", SqlDbType.NVarChar, 6, "Security"));
            this.sqlUpdate.Parameters["@Security"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@isElectronic", SqlDbType.Bit, 1, "isElectronic"));
            this.sqlUpdate.Parameters["@isElectronic"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@isPaper", SqlDbType.Bit, 1, "isPaper"));
            this.sqlUpdate.Parameters["@isPaper"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@isLawMail", SqlDbType.Bit, 1, "isLawMail"));
            this.sqlUpdate.Parameters["@isLawMail"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LanguageCode", SqlDbType.NVarChar, 3, "LanguageCode"));
            this.sqlUpdate.Parameters["@LanguageCode"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CheckedOutBy", SqlDbType.Int, 10, "CheckedOutBy"));
            this.sqlUpdate.Parameters["@CheckedOutBy"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CheckedOutDate", SqlDbType.SmallDateTime, 24, "CheckedOutDate"));
            this.sqlUpdate.Parameters["@CheckedOutDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CheckedOutPath", SqlDbType.NVarChar, 300, "CheckedOutPath"));
            this.sqlUpdate.Parameters["@CheckedOutPath"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@PageCount", SqlDbType.Int, 10, "PageCount"));
            this.sqlUpdate.Parameters["@PageCount"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CurrentVersion", SqlDbType.Char, 10, "CurrentVersion"));
            this.sqlUpdate.Parameters["@CurrentVersion"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocRefId", SqlDbType.Int, 10, "DocRefId"));
            this.sqlUpdate.Parameters["@DocRefId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SourceDivision", SqlDbType.Int, 6, "SourceDivision"));
            this.sqlUpdate.Parameters["@SourceDivision"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SentToShareFolder", SqlDbType.Int, 10, "SentToShareFolder"));
            this.sqlUpdate.Parameters["@SentToShareFolder"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocDumpFullPath", SqlDbType.NVarChar, 300, "DocDumpFullPath"));
            this.sqlUpdate.Parameters["@DocDumpFullPath"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocDumpDate", SqlDbType.SmallDateTime, 24, "DocDumpDate"));
            this.sqlUpdate.Parameters["@DocDumpDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocDumpUser", SqlDbType.NVarChar, 50, "DocDumpUser"));
            this.sqlUpdate.Parameters["@DocDumpUser"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[DocumentDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DocId", System.Data.SqlDbType.Int, 4, "DocId"));
            this.sqlDelete.Parameters["@DocId"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlDelete.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }

        public docDB.DocumentDataTable Load()
        {
            this.sqlDa.SelectCommand = sqlSelectAll;

            docDB.DocumentDataTable dt = new docDB.DocumentDataTable();
            Fill(dt);
            return dt;
        }


        public docDB.DocumentDataTable Load(int DocId)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[DocumentSelectByDocId]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DocId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlSelect.Parameters["@DocId"].Value = DocId;

            docDB.DocumentDataTable dt = new docDB.DocumentDataTable();
            Fill(dt);
            return dt;
        }


        public docDB.DocumentDataTable LoadByFileId(int FileId)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[DocumentSelectByFileId]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters["@FileId"].Value = FileId;

            docDB.DocumentDataTable dt = new docDB.DocumentDataTable();
            Fill(dt);
            return dt;
        }




    }


}
