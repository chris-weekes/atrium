using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on FormHearing table 
	/// in Lawmate_DEV  database
	/// on 2014-08-14
	/// </summary>
	public partial class FormHearingDAL:atDAL.ObjectDAL
	{

    	internal FormHearingDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "FormHearing", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("FormHearingId", "FormHearingId"),
		  new System.Data.Common.DataColumnMapping("SSTCaseId", "SSTCaseId"),
		  new System.Data.Common.DataColumnMapping("PrincipleHearing", "PrincipleHearing"),
		  new System.Data.Common.DataColumnMapping("OtherInPerson", "OtherInPerson"),
		  new System.Data.Common.DataColumnMapping("OtherTeleconference", "OtherTeleconference"),
		  new System.Data.Common.DataColumnMapping("OtherVideoconference", "OtherVideoconference"),
		  new System.Data.Common.DataColumnMapping("OtherQuestAnswers", "OtherQuestAnswers"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("ReadOnly", "ReadOnly"),
		  new System.Data.Common.DataColumnMapping("Obsolete", "Obsolete"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),

          new System.Data.Common.DataColumnMapping("isClaimantNoShow", "isClaimantNoShow"),
		  new System.Data.Common.DataColumnMapping("isMinisterNoShow", "isMinisterNoShow"),
		  new System.Data.Common.DataColumnMapping("isAddedPartyNoShow", "isAddedPartyNoShow"),

          new System.Data.Common.DataColumnMapping("isEmployerNoShow", "isEmployerNoShow"),
          new System.Data.Common.DataColumnMapping("isCommissionNoShow", "isCommissionNoShow"),




          

			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[FormHearingSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[FormHearingInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@FormHearingId", SqlDbType.Int, 10, "FormHearingId"));
			this.sqlInsert.Parameters["@FormHearingId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@SSTCaseId", SqlDbType.Int, 10, "SSTCaseId"));
			this.sqlInsert.Parameters["@SSTCaseId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PrincipleHearing", SqlDbType.Int, 10, "PrincipleHearing"));
			this.sqlInsert.Parameters["@PrincipleHearing"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OtherInPerson", SqlDbType.Bit, 1, "OtherInPerson"));
            this.sqlInsert.Parameters["@OtherInPerson"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OtherTeleconference", SqlDbType.Bit, 1, "OtherTeleconference"));
            this.sqlInsert.Parameters["@OtherTeleconference"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OtherVideoconference", SqlDbType.Bit, 1, "OtherVideoconference"));
            this.sqlInsert.Parameters["@OtherVideoconference"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OtherQuestAnswers", SqlDbType.Bit, 1, "OtherQuestAnswers"));
            this.sqlInsert.Parameters["@OtherQuestAnswers"].SourceVersion = DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
			this.sqlInsert.Parameters["@ReadOnly"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
			this.sqlInsert.Parameters["@Obsolete"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlInsert.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;


            this.sqlInsert.Parameters.Add(new SqlParameter("@isClaimantNoShow", SqlDbType.Bit, 1, "isClaimantNoShow"));
            this.sqlInsert.Parameters["@isClaimantNoShow"].SourceVersion = DataRowVersion.Current;

            this.sqlInsert.Parameters.Add(new SqlParameter("@isMinisterNoShow", SqlDbType.Bit, 1, "isMinisterNoShow"));
            this.sqlInsert.Parameters["@isMinisterNoShow"].SourceVersion = DataRowVersion.Current;


            this.sqlInsert.Parameters.Add(new SqlParameter("@isAddedPartyNoShow", SqlDbType.Bit, 1, "isAddedPartyNoShow"));
            this.sqlInsert.Parameters["@isAddedPartyNoShow"].SourceVersion = DataRowVersion.Current;


            this.sqlInsert.Parameters.Add(new SqlParameter("@isEmployerNoShow", SqlDbType.Bit, 1, "isEmployerNoShow"));
            this.sqlInsert.Parameters["@isEmployerNoShow"].SourceVersion = DataRowVersion.Current;

            this.sqlInsert.Parameters.Add(new SqlParameter("@isCommissionNoShow", SqlDbType.Bit, 1, "isCommissionNoShow"));
            this.sqlInsert.Parameters["@isCommissionNoShow"].SourceVersion = DataRowVersion.Current;



			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[FormHearingUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FormHearingId", SqlDbType.Int, 10, "FormHearingId"));
			this.sqlUpdate.Parameters["@FormHearingId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SSTCaseId", SqlDbType.Int, 10, "SSTCaseId"));
			this.sqlUpdate.Parameters["@SSTCaseId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PrincipleHearing", SqlDbType.Int, 10, "PrincipleHearing"));
			this.sqlUpdate.Parameters["@PrincipleHearing"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OtherInPerson", SqlDbType.Bit, 1, "OtherInPerson"));
            this.sqlUpdate.Parameters["@OtherInPerson"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OtherTeleconference", SqlDbType.Bit, 1, "OtherTeleconference"));
            this.sqlUpdate.Parameters["@OtherTeleconference"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OtherVideoconference", SqlDbType.Bit, 1, "OtherVideoconference"));
            this.sqlUpdate.Parameters["@OtherVideoconference"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OtherQuestAnswers", SqlDbType.Bit, 1, "OtherQuestAnswers"));
            this.sqlUpdate.Parameters["@OtherQuestAnswers"].SourceVersion = DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
			this.sqlUpdate.Parameters["@ReadOnly"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
			this.sqlUpdate.Parameters["@Obsolete"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlUpdate.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;


            this.sqlUpdate.Parameters.Add(new SqlParameter("@isClaimantNoShow", SqlDbType.Bit, 1, "isClaimantNoShow"));
            this.sqlUpdate.Parameters["@isClaimantNoShow"].SourceVersion = DataRowVersion.Current;

            this.sqlUpdate.Parameters.Add(new SqlParameter("@isMinisterNoShow", SqlDbType.Bit, 1, "isMinisterNoShow"));
            this.sqlUpdate.Parameters["@isMinisterNoShow"].SourceVersion = DataRowVersion.Current;

            this.sqlUpdate.Parameters.Add(new SqlParameter("@isAddedPartyNoShow", SqlDbType.Bit, 1, "isAddedPartyNoShow"));
            this.sqlUpdate.Parameters["@isAddedPartyNoShow"].SourceVersion = DataRowVersion.Current;



            this.sqlUpdate.Parameters.Add(new SqlParameter("@isCommissionNoShow", SqlDbType.Bit, 1, "isCommissionNoShow"));
            this.sqlUpdate.Parameters["@isCommissionNoShow"].SourceVersion = DataRowVersion.Current;


            this.sqlUpdate.Parameters.Add(new SqlParameter("@isEmployerNoShow", SqlDbType.Bit, 1, "isEmployerNoShow"));
            this.sqlUpdate.Parameters["@isEmployerNoShow"].SourceVersion = DataRowVersion.Current;




			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[FormHearingDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FormHearingId", System.Data.SqlDbType.Int, 4, "FormHearingId"));
		    this.sqlDelete.Parameters["@FormHearingId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public SST.FormHearingDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            SST.FormHearingDataTable dt=new SST.FormHearingDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public SST.FormHearingDataTable Load(int FormHearingId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FormHearingSelectByFormHearingId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FormHearingId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@FormHearingId"].Value=FormHearingId;

            SST.FormHearingDataTable dt=new SST.FormHearingDataTable();
			Fill(dt);
            return dt;
		}


		public SST.FormHearingDataTable LoadBySSTCaseId(int SSTCaseId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FormHearingSelectBySSTCaseId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTCaseId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@SSTCaseId"].Value=SSTCaseId;

            SST.FormHearingDataTable dt = new SST.FormHearingDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
