using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on ActivityField table 
	/// in lawmate database
	/// on 2/6/2007
	/// </summary>
	public partial class ActivityFieldDAL:atDAL.ObjectDAL
	{

    	internal ActivityFieldDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "ActivityField", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("ActivityFieldID", "ActivityFieldID"),
		  new System.Data.Common.DataColumnMapping("ACSeriesId", "ACSeriesId"),
		  new System.Data.Common.DataColumnMapping("TaskType", "TaskType"),
		  new System.Data.Common.DataColumnMapping("TaskName", "TaskName"),
		  new System.Data.Common.DataColumnMapping("Instance", "Instance"),
		  new System.Data.Common.DataColumnMapping("ObjectName", "ObjectName"),
		  new System.Data.Common.DataColumnMapping("FieldName", "FieldName"),
		  new System.Data.Common.DataColumnMapping("LookUp", "LookUp"),
		  new System.Data.Common.DataColumnMapping("FieldType", "FieldType"),
		  new System.Data.Common.DataColumnMapping("DefaultValue", "DefaultValue"),
		  new System.Data.Common.DataColumnMapping("DefaultObjectName", "DefaultObjectName"),
		  new System.Data.Common.DataColumnMapping("DefaultFieldName", "DefaultFieldName"),
		  new System.Data.Common.DataColumnMapping("LabelEng", "LabelEng"),
		  new System.Data.Common.DataColumnMapping("LabelFre", "LabelFre"),
		  new System.Data.Common.DataColumnMapping("Step", "Step"),
		  new System.Data.Common.DataColumnMapping("Seq", "Seq"),
          new System.Data.Common.DataColumnMapping("Visible", "Visible"),
          new System.Data.Common.DataColumnMapping("Required", "Required"),
          new System.Data.Common.DataColumnMapping("ReadOnly", "ReadOnly"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("SpecialParameter", "SpecialParameter"),
          new System.Data.Common.DataColumnMapping("ObjectAlias", "ObjectAlias"),
			})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[ActivityFieldSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[ActivityFieldInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityFieldID", SqlDbType.Int, 10, "ActivityFieldID"));
            this.sqlInsert.Parameters["@ActivityFieldID"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
            this.sqlInsert.Parameters["@ACSeriesId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Instance", SqlDbType.Int, 10, "Instance"));
            this.sqlInsert.Parameters["@Instance"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@TaskType", SqlDbType.NVarChar, 2, "TaskType"));
            this.sqlInsert.Parameters["@TaskType"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@TaskName", SqlDbType.NVarChar, 50, "TaskName"));
            this.sqlInsert.Parameters["@TaskName"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ObjectName", SqlDbType.NVarChar, 50, "ObjectName"));
            this.sqlInsert.Parameters["@ObjectName"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FieldName", SqlDbType.NVarChar, 50, "FieldName"));
            this.sqlInsert.Parameters["@FieldName"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LookUp", SqlDbType.NVarChar, 50, "LookUp"));
            this.sqlInsert.Parameters["@LookUp"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FieldType", SqlDbType.NVarChar, 2, "FieldType"));
            this.sqlInsert.Parameters["@FieldType"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DefaultValue", SqlDbType.NVarChar, 5000, "DefaultValue"));
            this.sqlInsert.Parameters["@DefaultValue"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DefaultObjectName", SqlDbType.NVarChar, 50, "DefaultObjectName"));
            this.sqlInsert.Parameters["@DefaultObjectName"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DefaultFieldName", SqlDbType.NVarChar, 50, "DefaultFieldName"));
            this.sqlInsert.Parameters["@DefaultFieldName"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LabelEng", SqlDbType.NVarChar, 512, "LabelEng"));
            this.sqlInsert.Parameters["@LabelEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LabelFre", SqlDbType.NVarChar, 512, "LabelFre"));
            this.sqlInsert.Parameters["@LabelFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Step", SqlDbType.SmallInt, 5, "Step"));
            this.sqlInsert.Parameters["@Step"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Seq", SqlDbType.SmallInt, 5, "Seq"));
            this.sqlInsert.Parameters["@Seq"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Required", SqlDbType.Bit, 1, "Required"));
            this.sqlInsert.Parameters["@Required"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Visible", SqlDbType.Bit, 1, "Visible"));
            this.sqlInsert.Parameters["@Visible"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Mask", SqlDbType.NVarChar, 50, "Mask"));
            this.sqlInsert.Parameters["@Mask"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Format", SqlDbType.NVarChar, 50, "Format"));
            this.sqlInsert.Parameters["@Format"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HelpE", SqlDbType.NVarChar, 255, "HelpE"));
            this.sqlInsert.Parameters["@HelpE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HelpF", SqlDbType.NVarChar, 255, "HelpF"));
            this.sqlInsert.Parameters["@HelpF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
            this.sqlInsert.Parameters["@ReadOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SpecialParameter", SqlDbType.NVarChar, 128, "SpecialParameter"));
            this.sqlInsert.Parameters["@SpecialParameter"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ObjectAlias", SqlDbType.NVarChar, 50, "ObjectAlias"));
            this.sqlInsert.Parameters["@ObjectAlias"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[ActivityFieldUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityFieldID", SqlDbType.Int, 10, "ActivityFieldID"));
            this.sqlUpdate.Parameters["@ActivityFieldID"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
            this.sqlUpdate.Parameters["@ACSeriesId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Instance", SqlDbType.Int, 10, "Instance"));
            this.sqlUpdate.Parameters["@Instance"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@TaskType", SqlDbType.NVarChar, 2, "TaskType"));
            this.sqlUpdate.Parameters["@TaskType"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@TaskName", SqlDbType.NVarChar, 50, "TaskName"));
            this.sqlUpdate.Parameters["@TaskName"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ObjectName", SqlDbType.NVarChar, 50, "ObjectName"));
            this.sqlUpdate.Parameters["@ObjectName"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FieldName", SqlDbType.NVarChar, 50, "FieldName"));
            this.sqlUpdate.Parameters["@FieldName"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LookUp", SqlDbType.NVarChar, 50, "LookUp"));
            this.sqlUpdate.Parameters["@LookUp"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FieldType", SqlDbType.NVarChar, 2, "FieldType"));
            this.sqlUpdate.Parameters["@FieldType"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DefaultValue", SqlDbType.NVarChar, 5000, "DefaultValue"));
            this.sqlUpdate.Parameters["@DefaultValue"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DefaultObjectName", SqlDbType.NVarChar, 50, "DefaultObjectName"));
            this.sqlUpdate.Parameters["@DefaultObjectName"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DefaultFieldName", SqlDbType.NVarChar, 50, "DefaultFieldName"));
            this.sqlUpdate.Parameters["@DefaultFieldName"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LabelEng", SqlDbType.NVarChar, 512, "LabelEng"));
            this.sqlUpdate.Parameters["@LabelEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LabelFre", SqlDbType.NVarChar, 512, "LabelFre"));
            this.sqlUpdate.Parameters["@LabelFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Step", SqlDbType.SmallInt, 5, "Step"));
            this.sqlUpdate.Parameters["@Step"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Seq", SqlDbType.SmallInt, 5, "Seq"));
            this.sqlUpdate.Parameters["@Seq"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Required", SqlDbType.Bit, 1, "Required"));
            this.sqlUpdate.Parameters["@Required"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Visible", SqlDbType.Bit, 1, "Visible"));
            this.sqlUpdate.Parameters["@Visible"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
            this.sqlUpdate.Parameters["@ReadOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Mask", SqlDbType.NVarChar, 50, "Mask"));
            this.sqlUpdate.Parameters["@Mask"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Format", SqlDbType.NVarChar, 50, "Format"));
            this.sqlUpdate.Parameters["@Format"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HelpE", SqlDbType.NVarChar, 255, "HelpE"));
            this.sqlUpdate.Parameters["@HelpE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HelpF", SqlDbType.NVarChar, 255, "HelpF"));
            this.sqlUpdate.Parameters["@HelpF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            //this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            //this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Original;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SpecialParameter", SqlDbType.NVarChar, 128, "SpecialParameter"));
            this.sqlUpdate.Parameters["@SpecialParameter"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ObjectAlias", SqlDbType.NVarChar, 50, "ObjectAlias"));
            this.sqlUpdate.Parameters["@ObjectAlias"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[ActivityFieldDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityFieldID", System.Data.SqlDbType.Int, 4, "ActivityFieldID"));
            this.sqlDelete.Parameters["@ActivityFieldID"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }


		 public ActivityConfig.ActivityFieldDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            ActivityConfig.ActivityFieldDataTable dt=new ActivityConfig.ActivityFieldDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public ActivityConfig.ActivityFieldDataTable Load(int ActivityFieldID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ActivityFieldSelectByActivityFieldID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityFieldID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@ActivityFieldID"].Value=ActivityFieldID;

            ActivityConfig.ActivityFieldDataTable dt=new ActivityConfig.ActivityFieldDataTable();
			Fill(dt);
            return dt;
		}


		public ActivityConfig.ActivityFieldDataTable LoadByActivityCodeID(int ActivityCodeID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ActivityFieldSelectByActivityCodeID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityCodeID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@ActivityCodeID"].Value=ActivityCodeID;

            ActivityConfig.ActivityFieldDataTable dt=new ActivityConfig.ActivityFieldDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
