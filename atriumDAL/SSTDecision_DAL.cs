using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on SSTDecision table 
	/// in lawmate_dev database
	/// on 2013-11-27
	/// </summary>
	public partial class SSTDecisionDAL:atDAL.ObjectDAL
	{

    	internal SSTDecisionDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "SSTDecision", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("SSTDecisionId", "SSTDecisionId"),
		  new System.Data.Common.DataColumnMapping("SSTCaseId", "SSTCaseId"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("RecDate", "RecDate"),
		  new System.Data.Common.DataColumnMapping("AssignedDate", "AssignedDate"),
		  new System.Data.Common.DataColumnMapping("DecisionType", "DecisionType"),
		  new System.Data.Common.DataColumnMapping("MemberId", "MemberId"),
		  new System.Data.Common.DataColumnMapping("OutcomeId", "OutcomeId"),
		  new System.Data.Common.DataColumnMapping("DecisionDate", "DecisionDate"),
		  new System.Data.Common.DataColumnMapping("DecisionSentDate", "DecisionSentDate"),
		  new System.Data.Common.DataColumnMapping("IsFinal", "IsFinal"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("ReadyToAssignDate", "ReadyToAssignDate"),
          new System.Data.Common.DataColumnMapping("TentativeMemberId", "TentativeMemberId"),
          new System.Data.Common.DataColumnMapping("RemovedMemberId", "RemovedMemberId"),
          new System.Data.Common.DataColumnMapping("IsCombined", "IsCombined"),

          
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[SSTDecisionSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[SSTDecisionInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@SSTDecisionId", SqlDbType.Int, 10, "SSTDecisionId"));
			this.sqlInsert.Parameters["@SSTDecisionId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@SSTCaseId", SqlDbType.Int, 10, "SSTCaseId"));
			this.sqlInsert.Parameters["@SSTCaseId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlInsert.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RecDate", SqlDbType.SmallDateTime, 24, "RecDate"));
			this.sqlInsert.Parameters["@RecDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AssignedDate", SqlDbType.SmallDateTime, 24, "AssignedDate"));
			this.sqlInsert.Parameters["@AssignedDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DecisionType", SqlDbType.Int, 10, "DecisionType"));
			this.sqlInsert.Parameters["@DecisionType"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@MemberId", SqlDbType.Int, 10, "MemberId"));
			this.sqlInsert.Parameters["@MemberId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OutcomeId", SqlDbType.Int, 10, "OutcomeId"));
			this.sqlInsert.Parameters["@OutcomeId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DecisionDate", SqlDbType.SmallDateTime, 24, "DecisionDate"));
			this.sqlInsert.Parameters["@DecisionDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DecisionSentDate", SqlDbType.SmallDateTime, 24, "DecisionSentDate"));
			this.sqlInsert.Parameters["@DecisionSentDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@IsFinal", SqlDbType.Bit, 1, "IsFinal"));
			this.sqlInsert.Parameters["@IsFinal"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ReadyToAssignDate", SqlDbType.SmallDateTime, 24, "ReadyToAssignDate"));
            this.sqlInsert.Parameters["@ReadyToAssignDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@TentativeMemberId", SqlDbType.Int, 10, "TentativeMemberId"));
            this.sqlInsert.Parameters["@TentativeMemberId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RemovedMemberId", SqlDbType.Int, 10, "RemovedMemberId"));
            this.sqlInsert.Parameters["@RemovedMemberId"].SourceVersion = DataRowVersion.Current;

            this.sqlInsert.Parameters.Add(new SqlParameter("@IsCombined", SqlDbType.Bit, 1, "IsCombined"));
            this.sqlInsert.Parameters["@IsCombined"].SourceVersion = DataRowVersion.Current;
            
			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[SSTDecisionUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SSTDecisionId", SqlDbType.Int, 10, "SSTDecisionId"));
			this.sqlUpdate.Parameters["@SSTDecisionId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SSTCaseId", SqlDbType.Int, 10, "SSTCaseId"));
			this.sqlUpdate.Parameters["@SSTCaseId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlUpdate.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@RecDate", SqlDbType.SmallDateTime, 24, "RecDate"));
			this.sqlUpdate.Parameters["@RecDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AssignedDate", SqlDbType.SmallDateTime, 24, "AssignedDate"));
			this.sqlUpdate.Parameters["@AssignedDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DecisionType", SqlDbType.Int, 10, "DecisionType"));
			this.sqlUpdate.Parameters["@DecisionType"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@MemberId", SqlDbType.Int, 10, "MemberId"));
			this.sqlUpdate.Parameters["@MemberId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OutcomeId", SqlDbType.Int, 10, "OutcomeId"));
			this.sqlUpdate.Parameters["@OutcomeId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DecisionDate", SqlDbType.SmallDateTime, 24, "DecisionDate"));
			this.sqlUpdate.Parameters["@DecisionDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DecisionSentDate", SqlDbType.SmallDateTime, 24, "DecisionSentDate"));
			this.sqlUpdate.Parameters["@DecisionSentDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IsFinal", SqlDbType.Bit, 1, "IsFinal"));
			this.sqlUpdate.Parameters["@IsFinal"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ReadyToAssignDate", SqlDbType.SmallDateTime, 24, "ReadyToAssignDate"));
            this.sqlUpdate.Parameters["@ReadyToAssignDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@TentativeMemberId", SqlDbType.Int, 10, "TentativeMemberId"));
            this.sqlUpdate.Parameters["@TentativeMemberId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RemovedMemberId", SqlDbType.Int, 10, "RemovedMemberId"));
            this.sqlUpdate.Parameters["@RemovedMemberId"].SourceVersion = DataRowVersion.Current;

            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsCombined", SqlDbType.Bit, 1, "IsCombined"));
            this.sqlUpdate.Parameters["@IsCombined"].SourceVersion = DataRowVersion.Current;
            
			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[SSTDecisionDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTDecisionId", System.Data.SqlDbType.Int, 4, "SSTDecisionId"));
		    this.sqlDelete.Parameters["@SSTDecisionId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public SST.SSTDecisionDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            SST.SSTDecisionDataTable dt=new SST.SSTDecisionDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public SST.SSTDecisionDataTable Load(int SSTDecisionId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTDecisionSelectBySSTDecisionId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTDecisionId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@SSTDecisionId"].Value=SSTDecisionId;

            SST.SSTDecisionDataTable dt=new SST.SSTDecisionDataTable();
			Fill(dt);
            return dt;
		}


		public SST.SSTDecisionDataTable LoadByFileId(int FileId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTDecisionSelectByFileId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileId"].Value=FileId;

            SST.SSTDecisionDataTable dt=new SST.SSTDecisionDataTable();
			Fill(dt);
            return dt;
		}



		public SST.SSTDecisionDataTable LoadByMemberId(int MemberId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTDecisionSelectByMemberId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@MemberId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@MemberId"].Value=MemberId;

            SST.SSTDecisionDataTable dt=new SST.SSTDecisionDataTable();
			Fill(dt);
            return dt;
		}



		public SST.SSTDecisionDataTable LoadByOutcomeId(int OutcomeId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTDecisionSelectByOutcomeId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OutcomeId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OutcomeId"].Value=OutcomeId;

            SST.SSTDecisionDataTable dt=new SST.SSTDecisionDataTable();
			Fill(dt);
            return dt;
		}



		public SST.SSTDecisionDataTable LoadBySSTCaseId(int SSTCaseId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTDecisionSelectBySSTCaseId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTCaseId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@SSTCaseId"].Value=SSTCaseId;

            SST.SSTDecisionDataTable dt=new SST.SSTDecisionDataTable();
			Fill(dt);
            return dt;
		}

	}
	
}
