using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on ACSeries table 
	/// in atrium database
	/// on 1/30/2008
	/// </summary>
	public partial class ACSeriesDAL:atDAL.ObjectDAL
	{

    	internal ACSeriesDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "ACSeries", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("ACSeriesId", "ACSeriesId"),
		  new System.Data.Common.DataColumnMapping("ActivityCodeID", "ActivityCodeID"),
		  new System.Data.Common.DataColumnMapping("SeriesId", "SeriesId"),
		  new System.Data.Common.DataColumnMapping("StepCode", "StepCode"),
		  new System.Data.Common.DataColumnMapping("DescEng", "DescEng"),
		  new System.Data.Common.DataColumnMapping("DescFre", "DescFre"),
		  new System.Data.Common.DataColumnMapping("InitialStep", "InitialStep"),
		  new System.Data.Common.DataColumnMapping("Seq", "Seq"),
		  new System.Data.Common.DataColumnMapping("OnceOnly", "OnceOnly"),
		  new System.Data.Common.DataColumnMapping("Start", "Start"),
		  new System.Data.Common.DataColumnMapping("Finish", "Finish"),
		  new System.Data.Common.DataColumnMapping("RoleCode", "RoleCode"),
		  new System.Data.Common.DataColumnMapping("ForOwner", "ForOwner"),
		  new System.Data.Common.DataColumnMapping("ForLead", "ForLead"),
		  new System.Data.Common.DataColumnMapping("ForAgent", "ForAgent"),
		  new System.Data.Common.DataColumnMapping("ForClient", "ForClient"),
		  new System.Data.Common.DataColumnMapping("HelpE", "HelpE"),
		  new System.Data.Common.DataColumnMapping("HelpF", "HelpF"),
		  new System.Data.Common.DataColumnMapping("StepType", "StepType"),
		  new System.Data.Common.DataColumnMapping("SubseriesId", "SubseriesId"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("Obsolete", "Obsolete"),
		  new System.Data.Common.DataColumnMapping("HelpTextE", "HelpTextE"),
		  new System.Data.Common.DataColumnMapping("HelpTextF", "HelpTextF"),
		  new System.Data.Common.DataColumnMapping("ACInfoE", "ACInfoE"),
		  new System.Data.Common.DataColumnMapping("ACInfoF", "ACInfoF"),
		  new System.Data.Common.DataColumnMapping("PromptE", "PromptE"),
		  new System.Data.Common.DataColumnMapping("PromptF", "PromptF"),
		  new System.Data.Common.DataColumnMapping("Rel0E", "Rel0E"),
		  new System.Data.Common.DataColumnMapping("Rel0F", "Rel0F"),
		  new System.Data.Common.DataColumnMapping("Rel1E", "Rel1E"),
		  new System.Data.Common.DataColumnMapping("Rel1F", "Rel1F"),
		  new System.Data.Common.DataColumnMapping("Rel2E", "Rel2E"),
		  new System.Data.Common.DataColumnMapping("Rel2F", "Rel2F"),
		  new System.Data.Common.DataColumnMapping("Rel3E", "Rel3E"),
		  new System.Data.Common.DataColumnMapping("Rel3F", "Rel3F"),
		  new System.Data.Common.DataColumnMapping("Rel4E", "Rel4E"),
		  new System.Data.Common.DataColumnMapping("Rel4F", "Rel4F"),
		  new System.Data.Common.DataColumnMapping("BFE", "BFE"),
		  new System.Data.Common.DataColumnMapping("BFF", "BFF"),
		  new System.Data.Common.DataColumnMapping("DisbE", "DisbE"),
		  new System.Data.Common.DataColumnMapping("DisbF", "DisbF"),
		  new System.Data.Common.DataColumnMapping("BillingE", "BillingE"),
		  new System.Data.Common.DataColumnMapping("BillingF", "BillingF"),
		  new System.Data.Common.DataColumnMapping("DocumentE", "DocumentE"),
		  new System.Data.Common.DataColumnMapping("DocumentF", "DocumentF"),
		  new System.Data.Common.DataColumnMapping("ConfirmE", "ConfirmE"),
		  new System.Data.Common.DataColumnMapping("ConfirmF", "ConfirmF"),
		  new System.Data.Common.DataColumnMapping("AutoChain", "AutoChain"),
		  new System.Data.Common.DataColumnMapping("IconResource", "IconResource"),
		  new System.Data.Common.DataColumnMapping("AllowFileType", "AllowFileType"),
		  new System.Data.Common.DataColumnMapping("HasBilling", "HasBilling"),
		  new System.Data.Common.DataColumnMapping("ShowBF", "ShowBF"),
		  new System.Data.Common.DataColumnMapping("DescPastTenseEng", "DescPastTenseEng"),
		  new System.Data.Common.DataColumnMapping("DescPastTenseFre", "DescPastTenseFre"),
		  new System.Data.Common.DataColumnMapping("NoResurface", "NoResurface"),
		  new System.Data.Common.DataColumnMapping("PauseParent", "PauseParent"),
		  new System.Data.Common.DataColumnMapping("StartParent", "StartParent"),
		  new System.Data.Common.DataColumnMapping("StopParent", "StopParent"),
		  new System.Data.Common.DataColumnMapping("CaseStatusId", "CaseStatusId"),
          new System.Data.Common.DataColumnMapping("ShowDisb", "ShowDisb"),
          new System.Data.Common.DataColumnMapping("ShowSkipDoc", "ShowSkipDoc"),
			})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[ACSeriesSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[ACSeriesInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@ACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
            this.sqlInsert.Parameters["@ACSeriesId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityCodeID", SqlDbType.Int, 10, "ActivityCodeID"));
            this.sqlInsert.Parameters["@ActivityCodeID"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SeriesId", SqlDbType.Int, 10, "SeriesId"));
            this.sqlInsert.Parameters["@SeriesId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@StepCode", SqlDbType.NVarChar, 12, "StepCode"));
            this.sqlInsert.Parameters["@StepCode"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DescEng", SqlDbType.NVarChar, 255, "DescEng"));
            this.sqlInsert.Parameters["@DescEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DescFre", SqlDbType.NVarChar, 255, "DescFre"));
            this.sqlInsert.Parameters["@DescFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@InitialStep", SqlDbType.Int, 10, "InitialStep"));
            this.sqlInsert.Parameters["@InitialStep"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Seq", SqlDbType.Int, 10, "Seq"));
            this.sqlInsert.Parameters["@Seq"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OnceOnly", SqlDbType.Bit, 1, "OnceOnly"));
            this.sqlInsert.Parameters["@OnceOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Start", SqlDbType.Bit, 1, "Start"));
            this.sqlInsert.Parameters["@Start"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Finish", SqlDbType.Bit, 1, "Finish"));
            this.sqlInsert.Parameters["@Finish"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RoleCode", SqlDbType.NVarChar, 4, "RoleCode"));
            this.sqlInsert.Parameters["@RoleCode"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ForOwner", SqlDbType.Bit, 1, "ForOwner"));
            this.sqlInsert.Parameters["@ForOwner"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ForLead", SqlDbType.Bit, 1, "ForLead"));
            this.sqlInsert.Parameters["@ForLead"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ForAgent", SqlDbType.Bit, 1, "ForAgent"));
            this.sqlInsert.Parameters["@ForAgent"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ForClient", SqlDbType.Bit, 1, "ForClient"));
            this.sqlInsert.Parameters["@ForClient"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HelpE", SqlDbType.NVarChar, 255, "HelpE"));
            this.sqlInsert.Parameters["@HelpE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HelpF", SqlDbType.NVarChar, 255, "HelpF"));
            this.sqlInsert.Parameters["@HelpF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@StepType", SqlDbType.Int, 10, "StepType"));
            this.sqlInsert.Parameters["@StepType"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SubseriesId", SqlDbType.Int, 10, "SubseriesId"));
            this.sqlInsert.Parameters["@SubseriesId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
            this.sqlInsert.Parameters["@Obsolete"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HelpTextE", SqlDbType.NVarChar, -1, "HelpTextE"));
            this.sqlInsert.Parameters["@HelpTextE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HelpTextF", SqlDbType.NVarChar, -1, "HelpTextF"));
            this.sqlInsert.Parameters["@HelpTextF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ACInfoE", SqlDbType.NVarChar, -1, "ACInfoE"));
            this.sqlInsert.Parameters["@ACInfoE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ACInfoF", SqlDbType.NVarChar, -1, "ACInfoF"));
            this.sqlInsert.Parameters["@ACInfoF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@PromptE", SqlDbType.NVarChar, -1, "PromptE"));
            this.sqlInsert.Parameters["@PromptE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@PromptF", SqlDbType.NVarChar, -1, "PromptF"));
            this.sqlInsert.Parameters["@PromptF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel0E", SqlDbType.NVarChar, -1, "Rel0E"));
            this.sqlInsert.Parameters["@Rel0E"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel0F", SqlDbType.NVarChar, -1, "Rel0F"));
            this.sqlInsert.Parameters["@Rel0F"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel1E", SqlDbType.NVarChar, -1, "Rel1E"));
            this.sqlInsert.Parameters["@Rel1E"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel1F", SqlDbType.NVarChar, -1, "Rel1F"));
            this.sqlInsert.Parameters["@Rel1F"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel2E", SqlDbType.NVarChar, -1, "Rel2E"));
            this.sqlInsert.Parameters["@Rel2E"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel2F", SqlDbType.NVarChar, -1, "Rel2F"));
            this.sqlInsert.Parameters["@Rel2F"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel3E", SqlDbType.NVarChar, -1, "Rel3E"));
            this.sqlInsert.Parameters["@Rel3E"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel3F", SqlDbType.NVarChar, -1, "Rel3F"));
            this.sqlInsert.Parameters["@Rel3F"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel4E", SqlDbType.NVarChar, -1, "Rel4E"));
            this.sqlInsert.Parameters["@Rel4E"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Rel4F", SqlDbType.NVarChar, -1, "Rel4F"));
            this.sqlInsert.Parameters["@Rel4F"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BFE", SqlDbType.NVarChar, -1, "BFE"));
            this.sqlInsert.Parameters["@BFE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BFF", SqlDbType.NVarChar, -1, "BFF"));
            this.sqlInsert.Parameters["@BFF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DisbE", SqlDbType.NVarChar, -1, "DisbE"));
            this.sqlInsert.Parameters["@DisbE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DisbF", SqlDbType.NVarChar, -1, "DisbF"));
            this.sqlInsert.Parameters["@DisbF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BillingE", SqlDbType.NVarChar, -1, "BillingE"));
            this.sqlInsert.Parameters["@BillingE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BillingF", SqlDbType.NVarChar, -1, "BillingF"));
            this.sqlInsert.Parameters["@BillingF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DocumentE", SqlDbType.NVarChar, -1, "DocumentE"));
            this.sqlInsert.Parameters["@DocumentE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DocumentF", SqlDbType.NVarChar, -1, "DocumentF"));
            this.sqlInsert.Parameters["@DocumentF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ConfirmE", SqlDbType.NVarChar, -1, "ConfirmE"));
            this.sqlInsert.Parameters["@ConfirmE"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ConfirmF", SqlDbType.NVarChar, -1, "ConfirmF"));
            this.sqlInsert.Parameters["@ConfirmF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AutoChain", SqlDbType.Bit, 1, "AutoChain"));
            this.sqlInsert.Parameters["@AutoChain"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IconResource", SqlDbType.NVarChar, 64, "IconResource"));
            this.sqlInsert.Parameters["@IconResource"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AllowFileType", SqlDbType.Bit, 1, "AllowFileType"));
            this.sqlInsert.Parameters["@AllowFileType"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HasBilling", SqlDbType.Bit, 1, "HasBilling"));
            this.sqlInsert.Parameters["@HasBilling"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ShowBF", SqlDbType.Bit, 1, "ShowBF"));
            this.sqlInsert.Parameters["@ShowBF"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DescPastTenseEng", SqlDbType.NVarChar, 255, "DescPastTenseEng"));
            this.sqlInsert.Parameters["@DescPastTenseEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DescPastTenseFre", SqlDbType.NVarChar, 255, "DescPastTenseFre"));
            this.sqlInsert.Parameters["@DescPastTenseFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@NoResurface", SqlDbType.Bit, 1, "NoResurface"));
            this.sqlInsert.Parameters["@NoResurface"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@PauseParent", SqlDbType.Bit, 1, "PauseParent"));
            this.sqlInsert.Parameters["@PauseParent"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@StartParent", SqlDbType.Bit, 1, "StartParent"));
            this.sqlInsert.Parameters["@StartParent"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@StopParent", SqlDbType.Bit, 1, "StopParent"));
            this.sqlInsert.Parameters["@StopParent"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CaseStatusId", SqlDbType.Int, 10, "CaseStatusId"));
            this.sqlInsert.Parameters["@CaseStatusId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ShowDisb", SqlDbType.Bit, 1, "ShowDisb"));
            this.sqlInsert.Parameters["@ShowDisb"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ShowSkipDoc", SqlDbType.Bit, 1, "ShowSkipDoc"));
            this.sqlInsert.Parameters["@ShowSkipDoc"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[ACSeriesUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@ACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
            this.sqlUpdate.Parameters["@ACSeriesId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityCodeID", SqlDbType.Int, 10, "ActivityCodeID"));
            this.sqlUpdate.Parameters["@ActivityCodeID"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SeriesId", SqlDbType.Int, 10, "SeriesId"));
            this.sqlUpdate.Parameters["@SeriesId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@StepCode", SqlDbType.NVarChar, 12, "StepCode"));
            this.sqlUpdate.Parameters["@StepCode"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DescEng", SqlDbType.NVarChar, 255, "DescEng"));
            this.sqlUpdate.Parameters["@DescEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DescFre", SqlDbType.NVarChar, 255, "DescFre"));
            this.sqlUpdate.Parameters["@DescFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@InitialStep", SqlDbType.Int, 10, "InitialStep"));
            this.sqlUpdate.Parameters["@InitialStep"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Seq", SqlDbType.Int, 10, "Seq"));
            this.sqlUpdate.Parameters["@Seq"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OnceOnly", SqlDbType.Bit, 1, "OnceOnly"));
            this.sqlUpdate.Parameters["@OnceOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Start", SqlDbType.Bit, 1, "Start"));
            this.sqlUpdate.Parameters["@Start"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Finish", SqlDbType.Bit, 1, "Finish"));
            this.sqlUpdate.Parameters["@Finish"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RoleCode", SqlDbType.NVarChar, 4, "RoleCode"));
            this.sqlUpdate.Parameters["@RoleCode"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ForOwner", SqlDbType.Bit, 1, "ForOwner"));
            this.sqlUpdate.Parameters["@ForOwner"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ForLead", SqlDbType.Bit, 1, "ForLead"));
            this.sqlUpdate.Parameters["@ForLead"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ForAgent", SqlDbType.Bit, 1, "ForAgent"));
            this.sqlUpdate.Parameters["@ForAgent"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ForClient", SqlDbType.Bit, 1, "ForClient"));
            this.sqlUpdate.Parameters["@ForClient"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HelpE", SqlDbType.NVarChar, 255, "HelpE"));
            this.sqlUpdate.Parameters["@HelpE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HelpF", SqlDbType.NVarChar, 255, "HelpF"));
            this.sqlUpdate.Parameters["@HelpF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@StepType", SqlDbType.Int, 10, "StepType"));
            this.sqlUpdate.Parameters["@StepType"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SubseriesId", SqlDbType.Int, 10, "SubseriesId"));
            this.sqlUpdate.Parameters["@SubseriesId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
            this.sqlUpdate.Parameters["@Obsolete"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HelpTextE", SqlDbType.NVarChar, -1, "HelpTextE"));
            this.sqlUpdate.Parameters["@HelpTextE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HelpTextF", SqlDbType.NVarChar, -1, "HelpTextF"));
            this.sqlUpdate.Parameters["@HelpTextF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ACInfoE", SqlDbType.NVarChar, -1, "ACInfoE"));
            this.sqlUpdate.Parameters["@ACInfoE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ACInfoF", SqlDbType.NVarChar, -1, "ACInfoF"));
            this.sqlUpdate.Parameters["@ACInfoF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@PromptE", SqlDbType.NVarChar, -1, "PromptE"));
            this.sqlUpdate.Parameters["@PromptE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@PromptF", SqlDbType.NVarChar, -1, "PromptF"));
            this.sqlUpdate.Parameters["@PromptF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel0E", SqlDbType.NVarChar, -1, "Rel0E"));
            this.sqlUpdate.Parameters["@Rel0E"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel0F", SqlDbType.NVarChar, -1, "Rel0F"));
            this.sqlUpdate.Parameters["@Rel0F"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel1E", SqlDbType.NVarChar, -1, "Rel1E"));
            this.sqlUpdate.Parameters["@Rel1E"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel1F", SqlDbType.NVarChar, -1, "Rel1F"));
            this.sqlUpdate.Parameters["@Rel1F"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel2E", SqlDbType.NVarChar, -1, "Rel2E"));
            this.sqlUpdate.Parameters["@Rel2E"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel2F", SqlDbType.NVarChar, -1, "Rel2F"));
            this.sqlUpdate.Parameters["@Rel2F"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel3E", SqlDbType.NVarChar, -1, "Rel3E"));
            this.sqlUpdate.Parameters["@Rel3E"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel3F", SqlDbType.NVarChar, -1, "Rel3F"));
            this.sqlUpdate.Parameters["@Rel3F"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel4E", SqlDbType.NVarChar, -1, "Rel4E"));
            this.sqlUpdate.Parameters["@Rel4E"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Rel4F", SqlDbType.NVarChar, -1, "Rel4F"));
            this.sqlUpdate.Parameters["@Rel4F"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BFE", SqlDbType.NVarChar, -1, "BFE"));
            this.sqlUpdate.Parameters["@BFE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BFF", SqlDbType.NVarChar, -1, "BFF"));
            this.sqlUpdate.Parameters["@BFF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbE", SqlDbType.NVarChar, -1, "DisbE"));
            this.sqlUpdate.Parameters["@DisbE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbF", SqlDbType.NVarChar, -1, "DisbF"));
            this.sqlUpdate.Parameters["@DisbF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BillingE", SqlDbType.NVarChar, -1, "BillingE"));
            this.sqlUpdate.Parameters["@BillingE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BillingF", SqlDbType.NVarChar, -1, "BillingF"));
            this.sqlUpdate.Parameters["@BillingF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocumentE", SqlDbType.NVarChar, -1, "DocumentE"));
            this.sqlUpdate.Parameters["@DocumentE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocumentF", SqlDbType.NVarChar, -1, "DocumentF"));
            this.sqlUpdate.Parameters["@DocumentF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ConfirmE", SqlDbType.NVarChar, -1, "ConfirmE"));
            this.sqlUpdate.Parameters["@ConfirmE"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ConfirmF", SqlDbType.NVarChar, -1, "ConfirmF"));
            this.sqlUpdate.Parameters["@ConfirmF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AutoChain", SqlDbType.Bit, 1, "AutoChain"));
            this.sqlUpdate.Parameters["@AutoChain"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IconResource", SqlDbType.NVarChar, 64, "IconResource"));
            this.sqlUpdate.Parameters["@IconResource"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AllowFileType", SqlDbType.Bit, 1, "AllowFileType"));
            this.sqlUpdate.Parameters["@AllowFileType"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HasBilling", SqlDbType.Bit, 1, "HasBilling"));
            this.sqlUpdate.Parameters["@HasBilling"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ShowBF", SqlDbType.Bit, 1, "ShowBF"));
            this.sqlUpdate.Parameters["@ShowBF"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DescPastTenseEng", SqlDbType.NVarChar, 255, "DescPastTenseEng"));
            this.sqlUpdate.Parameters["@DescPastTenseEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DescPastTenseFre", SqlDbType.NVarChar, 255, "DescPastTenseFre"));
            this.sqlUpdate.Parameters["@DescPastTenseFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@NoResurface", SqlDbType.Bit, 1, "NoResurface"));
            this.sqlUpdate.Parameters["@NoResurface"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@PauseParent", SqlDbType.Bit, 1, "PauseParent"));
            this.sqlUpdate.Parameters["@PauseParent"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@StartParent", SqlDbType.Bit, 1, "StartParent"));
            this.sqlUpdate.Parameters["@StartParent"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@StopParent", SqlDbType.Bit, 1, "StopParent"));
            this.sqlUpdate.Parameters["@StopParent"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CaseStatusId", SqlDbType.Int, 10, "CaseStatusId"));
            this.sqlUpdate.Parameters["@CaseStatusId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ShowDisb", SqlDbType.Bit, 1, "ShowDisb"));
            this.sqlUpdate.Parameters["@ShowDisb"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ShowSkipDoc", SqlDbType.Bit, 1, "ShowSkipDoc"));
            this.sqlUpdate.Parameters["@ShowSkipDoc"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[ACSeriesDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACSeriesId", System.Data.SqlDbType.Int, 4, "ACSeriesId"));
            this.sqlDelete.Parameters["@ACSeriesId"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }

		 public ActivityConfig.ACSeriesDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            ActivityConfig.ACSeriesDataTable dt=new ActivityConfig.ACSeriesDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public ActivityConfig.ACSeriesDataTable Load(int ACSeriesId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ACSeriesSelectByACSeriesId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACSeriesId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@ACSeriesId"].Value=ACSeriesId;

            ActivityConfig.ACSeriesDataTable dt=new ActivityConfig.ACSeriesDataTable();
			Fill(dt);
            return dt;
		}


		public ActivityConfig.ACSeriesDataTable LoadByActivityCodeID(int ActivityCodeID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ACSeriesSelectByActivityCodeID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityCodeID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@ActivityCodeID"].Value=ActivityCodeID;

            ActivityConfig.ACSeriesDataTable dt=new ActivityConfig.ACSeriesDataTable();
			Fill(dt);
            return dt;
		}



		public ActivityConfig.ACSeriesDataTable LoadBySeriesId(int SeriesId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ACSeriesSelectBySeriesId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SeriesId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@SeriesId"].Value=SeriesId;

            ActivityConfig.ACSeriesDataTable dt=new ActivityConfig.ACSeriesDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
