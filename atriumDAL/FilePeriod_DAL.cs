using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on FilePeriod table 
	/// in craLawmate database
	/// on 2010/11/08
	/// </summary>
	public partial class FilePeriodDAL:atDAL.ObjectDAL
	{

    	internal FilePeriodDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "FilePeriod", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("PeriodId", "PeriodId"),
		  new System.Data.Common.DataColumnMapping("PeriodCode", "PeriodCode"),
		  new System.Data.Common.DataColumnMapping("PeriodDescEng", "PeriodDescEng"),
		  new System.Data.Common.DataColumnMapping("PeriodDescFre", "PeriodDescFre"),
		  new System.Data.Common.DataColumnMapping("DatePart", "DatePart"),
		  new System.Data.Common.DataColumnMapping("NewFileNameFormat", "NewFileNameFormat"),
		  new System.Data.Common.DataColumnMapping("YearStartMonth", "YearStartMonth"),
		  new System.Data.Common.DataColumnMapping("YearStartDay", "YearStartDay"),
		  new System.Data.Common.DataColumnMapping("PeriodLength", "PeriodLength"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[FilePeriodSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[FilePeriodInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@PeriodId", SqlDbType.Int, 10, "PeriodId"));
			this.sqlInsert.Parameters["@PeriodId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PeriodCode", SqlDbType.NVarChar, 6, "PeriodCode"));
			this.sqlInsert.Parameters["@PeriodCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PeriodDescEng", SqlDbType.NVarChar, 50, "PeriodDescEng"));
			this.sqlInsert.Parameters["@PeriodDescEng"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PeriodDescFre", SqlDbType.NVarChar, 50, "PeriodDescFre"));
			this.sqlInsert.Parameters["@PeriodDescFre"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DatePart", SqlDbType.NVarChar, 4, "DatePart"));
			this.sqlInsert.Parameters["@DatePart"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@NewFileNameFormat", SqlDbType.NVarChar, 150, "NewFileNameFormat"));
			this.sqlInsert.Parameters["@NewFileNameFormat"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@YearStartMonth", SqlDbType.Int, 10, "YearStartMonth"));
			this.sqlInsert.Parameters["@YearStartMonth"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@YearStartDay", SqlDbType.Int, 10, "YearStartDay"));
			this.sqlInsert.Parameters["@YearStartDay"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PeriodLength", SqlDbType.Int, 10, "PeriodLength"));
			this.sqlInsert.Parameters["@PeriodLength"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[FilePeriodUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PeriodId", SqlDbType.Int, 10, "PeriodId"));
			this.sqlUpdate.Parameters["@PeriodId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PeriodCode", SqlDbType.NVarChar, 6, "PeriodCode"));
			this.sqlUpdate.Parameters["@PeriodCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PeriodDescEng", SqlDbType.NVarChar, 50, "PeriodDescEng"));
			this.sqlUpdate.Parameters["@PeriodDescEng"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PeriodDescFre", SqlDbType.NVarChar, 50, "PeriodDescFre"));
			this.sqlUpdate.Parameters["@PeriodDescFre"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DatePart", SqlDbType.NVarChar, 4, "DatePart"));
			this.sqlUpdate.Parameters["@DatePart"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@NewFileNameFormat", SqlDbType.NVarChar, 150, "NewFileNameFormat"));
			this.sqlUpdate.Parameters["@NewFileNameFormat"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@YearStartMonth", SqlDbType.Int, 10, "YearStartMonth"));
			this.sqlUpdate.Parameters["@YearStartMonth"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@YearStartDay", SqlDbType.Int, 10, "YearStartDay"));
			this.sqlUpdate.Parameters["@YearStartDay"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PeriodLength", SqlDbType.Int, 10, "PeriodLength"));
			this.sqlUpdate.Parameters["@PeriodLength"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[FilePeriodDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PeriodId", System.Data.SqlDbType.Int, 4, "PeriodId"));
		    this.sqlDelete.Parameters["@PeriodId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public CodesDB.FilePeriodDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            CodesDB.FilePeriodDataTable dt = new CodesDB.FilePeriodDataTable();
			Fill(dt);
            return dt;
        }



        public CodesDB.FilePeriodDataTable Load(int PeriodId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FilePeriodSelectByPeriodId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PeriodId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@PeriodId"].Value=PeriodId;

            CodesDB.FilePeriodDataTable dt = new CodesDB.FilePeriodDataTable();
			Fill(dt);
            return dt;
		}



	}
	

}
