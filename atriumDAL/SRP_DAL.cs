using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on SRP table 
	/// in lawmate database
	/// on 2006/06/16
	/// </summary>
	public partial class SRPDAL:atDAL.ObjectDAL
	{

    	internal SRPDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "SRP", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("SRPID", "SRPID"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("OfficeID", "OfficeID"),
		  new System.Data.Common.DataColumnMapping("SRPDate", "SRPDate"),
		  new System.Data.Common.DataColumnMapping("SRPSubmittedDate", "SRPSubmittedDate"),
		  new System.Data.Common.DataColumnMapping("SRPReceivedDate", "SRPReceivedDate"),
		  new System.Data.Common.DataColumnMapping("TaxationBegan", "TaxationBegan"),
		  new System.Data.Common.DataColumnMapping("TaxationCompleted", "TaxationCompleted"),
		  new System.Data.Common.DataColumnMapping("CountOfTaxation", "CountOfTaxation"),
		  new System.Data.Common.DataColumnMapping("FeesClaimed", "FeesClaimed"),
		  new System.Data.Common.DataColumnMapping("FeesClaimedTax", "FeesClaimedTax"),
		  new System.Data.Common.DataColumnMapping("DisbursementTaxExemptClaimed", "DisbursementTaxExemptClaimed"),
		  new System.Data.Common.DataColumnMapping("DisbursementClaimed", "DisbursementClaimed"),
		  new System.Data.Common.DataColumnMapping("DisbursementClaimedTax", "DisbursementClaimedTax"),
		  new System.Data.Common.DataColumnMapping("FeesTaxed", "FeesTaxed"),
		  new System.Data.Common.DataColumnMapping("FeesTaxedTax", "FeesTaxedTax"),
		  new System.Data.Common.DataColumnMapping("DisbursementTaxExemptTaxed", "DisbursementTaxExemptTaxed"),
		  new System.Data.Common.DataColumnMapping("DisbursementTaxed", "DisbursementTaxed"),
		  new System.Data.Common.DataColumnMapping("DisbursementTaxedTax", "DisbursementTaxedTax"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[SRPSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[SRPInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@SRPID", SqlDbType.Int, 4, "SRPID"));
			this.sqlInsert.Parameters["@SRPID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 4, "FileId"));
			this.sqlInsert.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeID", SqlDbType.Int, 4, "OfficeID"));
			this.sqlInsert.Parameters["@OfficeID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@SRPDate", SqlDbType.SmallDateTime, 24, "SRPDate"));
			this.sqlInsert.Parameters["@SRPDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@SRPSubmittedDate", SqlDbType.SmallDateTime, 24, "SRPSubmittedDate"));
			this.sqlInsert.Parameters["@SRPSubmittedDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@SRPReceivedDate", SqlDbType.SmallDateTime, 24, "SRPReceivedDate"));
			this.sqlInsert.Parameters["@SRPReceivedDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@TaxationBegan", SqlDbType.SmallDateTime, 24, "TaxationBegan"));
			this.sqlInsert.Parameters["@TaxationBegan"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@TaxationCompleted", SqlDbType.SmallDateTime, 24, "TaxationCompleted"));
			this.sqlInsert.Parameters["@TaxationCompleted"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CountOfTaxation", SqlDbType.Int, 4, "CountOfTaxation"));
			this.sqlInsert.Parameters["@CountOfTaxation"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FeesClaimed", SqlDbType.Money, 19, "FeesClaimed"));
			this.sqlInsert.Parameters["@FeesClaimed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FeesClaimedTax", SqlDbType.Money, 19, "FeesClaimedTax"));
			this.sqlInsert.Parameters["@FeesClaimedTax"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbursementTaxExemptClaimed", SqlDbType.Money, 19, "DisbursementTaxExemptClaimed"));
			this.sqlInsert.Parameters["@DisbursementTaxExemptClaimed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbursementClaimed", SqlDbType.Money, 19, "DisbursementClaimed"));
			this.sqlInsert.Parameters["@DisbursementClaimed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbursementClaimedTax", SqlDbType.Money, 19, "DisbursementClaimedTax"));
			this.sqlInsert.Parameters["@DisbursementClaimedTax"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FeesTaxed", SqlDbType.Money, 19, "FeesTaxed"));
			this.sqlInsert.Parameters["@FeesTaxed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FeesTaxedTax", SqlDbType.Money, 19, "FeesTaxedTax"));
			this.sqlInsert.Parameters["@FeesTaxedTax"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbursementTaxExemptTaxed", SqlDbType.Money, 19, "DisbursementTaxExemptTaxed"));
			this.sqlInsert.Parameters["@DisbursementTaxExemptTaxed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbursementTaxed", SqlDbType.Money, 19, "DisbursementTaxed"));
			this.sqlInsert.Parameters["@DisbursementTaxed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbursementTaxedTax", SqlDbType.Money, 19, "DisbursementTaxedTax"));
			this.sqlInsert.Parameters["@DisbursementTaxedTax"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			//this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			//this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[SRPUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SRPID", SqlDbType.Int, 4, "SRPID"));
			this.sqlUpdate.Parameters["@SRPID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 4, "FileId"));
			this.sqlUpdate.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeID", SqlDbType.Int, 4, "OfficeID"));
			this.sqlUpdate.Parameters["@OfficeID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SRPDate", SqlDbType.SmallDateTime, 24, "SRPDate"));
			this.sqlUpdate.Parameters["@SRPDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SRPSubmittedDate", SqlDbType.SmallDateTime, 24, "SRPSubmittedDate"));
			this.sqlUpdate.Parameters["@SRPSubmittedDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SRPReceivedDate", SqlDbType.SmallDateTime, 24, "SRPReceivedDate"));
			this.sqlUpdate.Parameters["@SRPReceivedDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@TaxationBegan", SqlDbType.SmallDateTime, 24, "TaxationBegan"));
			this.sqlUpdate.Parameters["@TaxationBegan"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@TaxationCompleted", SqlDbType.SmallDateTime, 24, "TaxationCompleted"));
			this.sqlUpdate.Parameters["@TaxationCompleted"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CountOfTaxation", SqlDbType.Int, 4, "CountOfTaxation"));
			this.sqlUpdate.Parameters["@CountOfTaxation"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FeesClaimed", SqlDbType.Money, 19, "FeesClaimed"));
			this.sqlUpdate.Parameters["@FeesClaimed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FeesClaimedTax", SqlDbType.Money, 19, "FeesClaimedTax"));
			this.sqlUpdate.Parameters["@FeesClaimedTax"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbursementTaxExemptClaimed", SqlDbType.Money, 19, "DisbursementTaxExemptClaimed"));
			this.sqlUpdate.Parameters["@DisbursementTaxExemptClaimed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbursementClaimed", SqlDbType.Money, 19, "DisbursementClaimed"));
			this.sqlUpdate.Parameters["@DisbursementClaimed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbursementClaimedTax", SqlDbType.Money, 19, "DisbursementClaimedTax"));
			this.sqlUpdate.Parameters["@DisbursementClaimedTax"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FeesTaxed", SqlDbType.Money, 19, "FeesTaxed"));
			this.sqlUpdate.Parameters["@FeesTaxed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FeesTaxedTax", SqlDbType.Money, 19, "FeesTaxedTax"));
			this.sqlUpdate.Parameters["@FeesTaxedTax"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbursementTaxExemptTaxed", SqlDbType.Money, 19, "DisbursementTaxExemptTaxed"));
			this.sqlUpdate.Parameters["@DisbursementTaxExemptTaxed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbursementTaxed", SqlDbType.Money, 19, "DisbursementTaxed"));
			this.sqlUpdate.Parameters["@DisbursementTaxed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbursementTaxedTax", SqlDbType.Money, 19, "DisbursementTaxedTax"));
			this.sqlUpdate.Parameters["@DisbursementTaxedTax"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[SRPDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SRPID", System.Data.SqlDbType.Int, 4, "SRPID"));
		    this.sqlDelete.Parameters["@SRPID"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

        public atriumDB.SRPDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            atriumDB.SRPDataTable dt = new atriumDB.SRPDataTable();
			Fill(dt);
            return dt;
        }



        public atriumDB.SRPDataTable Load(int SRPID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SRPSelectBySRPID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SRPID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@SRPID"].Value=SRPID;

            atriumDB.SRPDataTable dt = new atriumDB.SRPDataTable();
			Fill(dt);
            return dt;
		}


        public atriumDB.SRPDataTable LoadByOfficeID(int OfficeID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SRPSelectByOfficeID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficeID"].Value=OfficeID;

            atriumDB.SRPDataTable dt = new atriumDB.SRPDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
