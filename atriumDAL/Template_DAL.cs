using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
    /// <summary>
    /// Class generated by sgen 
    /// based on Template table 
    /// in lawmate database
    /// on 2006/06/16
    /// </summary>
    public partial class TemplateDAL : atDAL.ObjectDAL
    {

        internal TemplateDAL(atriumDALManager pDALManager)
            : base(pDALManager)
        {
            Init();
        }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Template", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("TemplateId", "TemplateId"),
          new System.Data.Common.DataColumnMapping("LetterName", "LetterName"),
		  new System.Data.Common.DataColumnMapping("LetterDescEng", "LetterDescEng"),
		  new System.Data.Common.DataColumnMapping("LetterDescFre", "LetterDescFre"),
          new System.Data.Common.DataColumnMapping("DocID", "DocID"),
		  new System.Data.Common.DataColumnMapping("Filename", "Filename"),
		  new System.Data.Common.DataColumnMapping("ReadOnly", "ReadOnly"),
		  new System.Data.Common.DataColumnMapping("Obsolete", "Obsolete"),
		  new System.Data.Common.DataColumnMapping("HQ", "HQ"),
		  new System.Data.Common.DataColumnMapping("Agent", "Agent"),
		  new System.Data.Common.DataColumnMapping("AboutDebtor", "AboutDebtor"),
		  new System.Data.Common.DataColumnMapping("AboutAgent", "AboutAgent"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("FlagForExport", "FlagForExport"),
          new System.Data.Common.DataColumnMapping("ExportedDate", "ExportedDate"),
          new System.Data.Common.DataColumnMapping("ImportedDate", "ImportedDate"),
          new System.Data.Common.DataColumnMapping("Tag", "Tag"),
          new System.Data.Common.DataColumnMapping("DocType", "DocType"),
          new System.Data.Common.DataColumnMapping("LetterHeadName", "LetterHeadName"),
          new System.Data.Common.DataColumnMapping("LayoutStyle", "LayoutStyle"),
            })});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[TemplateSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[TemplateInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@TemplateId", SqlDbType.Int, 4, "TemplateId"));
            this.sqlInsert.Parameters["@TemplateId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LetterName", SqlDbType.NVarChar, 50, "LetterName"));
            this.sqlInsert.Parameters["@LetterName"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LetterDescEng", SqlDbType.NVarChar, 255, "LetterDescEng"));
            this.sqlInsert.Parameters["@LetterDescEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LetterDescFre", SqlDbType.NVarChar, 255, "LetterDescFre"));
            this.sqlInsert.Parameters["@LetterDescFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DocID", SqlDbType.Int, 4, "DocID"));
            this.sqlInsert.Parameters["@DocID"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Filename", SqlDbType.NVarChar, 255, "Filename"));
            this.sqlInsert.Parameters["@Filename"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
            this.sqlInsert.Parameters["@ReadOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
            this.sqlInsert.Parameters["@Obsolete"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HQ", SqlDbType.Bit, 1, "HQ"));
            this.sqlInsert.Parameters["@HQ"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Agent", SqlDbType.Bit, 1, "Agent"));
            this.sqlInsert.Parameters["@Agent"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AboutDebtor", SqlDbType.Bit, 1, "AboutDebtor"));
            this.sqlInsert.Parameters["@AboutDebtor"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AboutAgent", SqlDbType.Bit, 1, "AboutAgent"));
            this.sqlInsert.Parameters["@AboutAgent"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            //this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            //this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FlagForExport", SqlDbType.Bit, 1, "FlagForExport"));
            this.sqlInsert.Parameters["@FlagForExport"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ExportedDate", SqlDbType.SmallDateTime, 24, "ExportedDate"));
            this.sqlInsert.Parameters["@ExportedDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ImportedDate", SqlDbType.SmallDateTime, 24, "ImportedDate"));
            this.sqlInsert.Parameters["@ImportedDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Tag", SqlDbType.NVarChar, 50, "Tag"));
            this.sqlInsert.Parameters["@Tag"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DocType", SqlDbType.NVarChar, 4, "DocType"));
            this.sqlInsert.Parameters["@DocType"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LetterHeadName", SqlDbType.NVarChar, 50, "LetterHeadName"));
            this.sqlInsert.Parameters["@LetterHeadName"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LayoutStyle", SqlDbType.Int, 4, "LayoutStyle"));
            this.sqlInsert.Parameters["@LayoutStyle"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[TemplateUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@TemplateId", SqlDbType.Int, 4, "TemplateId"));
            this.sqlUpdate.Parameters["@TemplateId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LetterName", SqlDbType.NVarChar, 50, "LetterName"));
            this.sqlUpdate.Parameters["@LetterName"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LetterDescEng", SqlDbType.NVarChar, 255, "LetterDescEng"));
            this.sqlUpdate.Parameters["@LetterDescEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LetterDescFre", SqlDbType.NVarChar, 255, "LetterDescFre"));
            this.sqlUpdate.Parameters["@LetterDescFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocID", SqlDbType.Int, 4, "DocID"));
            this.sqlUpdate.Parameters["@DocID"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Filename", SqlDbType.NVarChar, 255, "Filename"));
            this.sqlUpdate.Parameters["@Filename"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
            this.sqlUpdate.Parameters["@ReadOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
            this.sqlUpdate.Parameters["@Obsolete"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HQ", SqlDbType.Bit, 1, "HQ"));
            this.sqlUpdate.Parameters["@HQ"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Agent", SqlDbType.Bit, 1, "Agent"));
            this.sqlUpdate.Parameters["@Agent"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AboutDebtor", SqlDbType.Bit, 1, "AboutDebtor"));
            this.sqlUpdate.Parameters["@AboutDebtor"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AboutAgent", SqlDbType.Bit, 1, "AboutAgent"));
            this.sqlUpdate.Parameters["@AboutAgent"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FlagForExport", SqlDbType.Bit, 1, "FlagForExport"));
            this.sqlUpdate.Parameters["@FlagForExport"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ExportedDate", SqlDbType.SmallDateTime, 24, "ExportedDate"));
            this.sqlUpdate.Parameters["@ExportedDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ImportedDate", SqlDbType.SmallDateTime, 24, "ImportedDate"));
            this.sqlUpdate.Parameters["@ImportedDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Tag", SqlDbType.NVarChar, 50, "Tag"));
            this.sqlUpdate.Parameters["@Tag"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DocType", SqlDbType.NVarChar, 4, "DocType"));
            this.sqlUpdate.Parameters["@DocType"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LetterHeadName", SqlDbType.NVarChar, 50, "LetterHeadName"));
            this.sqlUpdate.Parameters["@LetterHeadName"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LayoutStyle", SqlDbType.Int, 4, "LayoutStyle"));
            this.sqlUpdate.Parameters["@LayoutStyle"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[TemplateDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LetterName", System.Data.SqlDbType.NVarChar, 50, "LetterName"));
            this.sqlDelete.Parameters["@LetterName"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }

        public appDB.TemplateDataTable Load()
        {
            this.sqlDa.SelectCommand = sqlSelectAll;

            appDB.TemplateDataTable dt = new appDB.TemplateDataTable();
            Fill(dt);
            return dt;
        }



        public appDB.TemplateDataTable Load(string LetterName)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[TemplateSelectByLetterName]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LetterName", System.Data.SqlDbType.NVarChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlSelect.Parameters["@LetterName"].Value = LetterName;

            appDB.TemplateDataTable dt = new appDB.TemplateDataTable();
            Fill(dt);
            return dt;
        }

        public appDB.TemplateDataTable Load(int TemplateID)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[TemplateSelectByTemplateID]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@TemplateID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlSelect.Parameters["@TemplateID"].Value = TemplateID;

            appDB.TemplateDataTable dt = new appDB.TemplateDataTable();
            Fill(dt);
            return dt;
        }


    }


}
