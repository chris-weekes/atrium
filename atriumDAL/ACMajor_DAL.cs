using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on ACMajor table 
	/// in lawmate database
	/// on 9/28/2007
	/// </summary>
	public partial class ACMajorDAL:atDAL.ObjectDAL
	{

    	internal ACMajorDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "ACMajor", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("ActivityCodeMajor", "ActivityCodeMajor"),
		  new System.Data.Common.DataColumnMapping("ACMajorDescEng", "ACMajorDescEng"),
		  new System.Data.Common.DataColumnMapping("ACMajorDescFre", "ACMajorDescFre"),
		  new System.Data.Common.DataColumnMapping("ReadOnly", "ReadOnly"),
		  new System.Data.Common.DataColumnMapping("Obsolete", "Obsolete"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("iCaseTaskId", "iCaseTaskId"),
		  new System.Data.Common.DataColumnMapping("MGADMEng", "MGADMEng"),
		  new System.Data.Common.DataColumnMapping("MGLITEng", "MGLITEng"),
		  new System.Data.Common.DataColumnMapping("MGADVEng", "MGADVEng"),
		  new System.Data.Common.DataColumnMapping("MGLEGEng", "MGLEGEng"),
		  new System.Data.Common.DataColumnMapping("OTADMEng", "OTADMEng"),
		  new System.Data.Common.DataColumnMapping("OTLITEng", "OTLITEng"),
		  new System.Data.Common.DataColumnMapping("OTADVEng", "OTADVEng"),
		  new System.Data.Common.DataColumnMapping("OTLEGEng", "OTLEGEng"),
		  new System.Data.Common.DataColumnMapping("MGADMFre", "MGADMFre"),
		  new System.Data.Common.DataColumnMapping("MGLITFre", "MGLITFre"),
		  new System.Data.Common.DataColumnMapping("MGADVFre", "MGADVFre"),
		  new System.Data.Common.DataColumnMapping("MGLEGFre", "MGLEGFre"),
		  new System.Data.Common.DataColumnMapping("OTADMFre", "OTADMFre"),
		  new System.Data.Common.DataColumnMapping("OTLITFre", "OTLITFre"),
		  new System.Data.Common.DataColumnMapping("OTADVFre", "OTADVFre"),
		  new System.Data.Common.DataColumnMapping("OTLEGFre", "OTLEGFre"),
			})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[ACMajorSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[ACMajorInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityCodeMajor", SqlDbType.NVarChar, 4, "ActivityCodeMajor"));
            this.sqlInsert.Parameters["@ActivityCodeMajor"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ACMajorDescEng", SqlDbType.NVarChar, 128, "ACMajorDescEng"));
            this.sqlInsert.Parameters["@ACMajorDescEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ACMajorDescFre", SqlDbType.NVarChar, 128, "ACMajorDescFre"));
            this.sqlInsert.Parameters["@ACMajorDescFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
            this.sqlInsert.Parameters["@ReadOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
            this.sqlInsert.Parameters["@Obsolete"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@iCaseTaskId", SqlDbType.Int, 10, "iCaseTaskId"));
            this.sqlInsert.Parameters["@iCaseTaskId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MGADMEng", SqlDbType.NVarChar, 128, "MGADMEng"));
            this.sqlInsert.Parameters["@MGADMEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MGLITEng", SqlDbType.NVarChar, 128, "MGLITEng"));
            this.sqlInsert.Parameters["@MGLITEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MGADVEng", SqlDbType.NVarChar, 128, "MGADVEng"));
            this.sqlInsert.Parameters["@MGADVEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MGLEGEng", SqlDbType.NVarChar, 128, "MGLEGEng"));
            this.sqlInsert.Parameters["@MGLEGEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OTADMEng", SqlDbType.NVarChar, 128, "OTADMEng"));
            this.sqlInsert.Parameters["@OTADMEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OTLITEng", SqlDbType.NVarChar, 128, "OTLITEng"));
            this.sqlInsert.Parameters["@OTLITEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OTADVEng", SqlDbType.NVarChar, 128, "OTADVEng"));
            this.sqlInsert.Parameters["@OTADVEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OTLEGEng", SqlDbType.NVarChar, 128, "OTLEGEng"));
            this.sqlInsert.Parameters["@OTLEGEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MGADMFre", SqlDbType.NVarChar, 128, "MGADMFre"));
            this.sqlInsert.Parameters["@MGADMFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MGLITFre", SqlDbType.NVarChar, 128, "MGLITFre"));
            this.sqlInsert.Parameters["@MGLITFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MGADVFre", SqlDbType.NVarChar, 128, "MGADVFre"));
            this.sqlInsert.Parameters["@MGADVFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MGLEGFre", SqlDbType.NVarChar, 128, "MGLEGFre"));
            this.sqlInsert.Parameters["@MGLEGFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OTADMFre", SqlDbType.NVarChar, 128, "OTADMFre"));
            this.sqlInsert.Parameters["@OTADMFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OTLITFre", SqlDbType.NVarChar, 128, "OTLITFre"));
            this.sqlInsert.Parameters["@OTLITFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OTADVFre", SqlDbType.NVarChar, 128, "OTADVFre"));
            this.sqlInsert.Parameters["@OTADVFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OTLEGFre", SqlDbType.NVarChar, 128, "OTLEGFre"));
            this.sqlInsert.Parameters["@OTLEGFre"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[ACMajorUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityCodeMajor", SqlDbType.NVarChar, 4, "ActivityCodeMajor"));
            this.sqlUpdate.Parameters["@ActivityCodeMajor"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ACMajorDescEng", SqlDbType.NVarChar, 128, "ACMajorDescEng"));
            this.sqlUpdate.Parameters["@ACMajorDescEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ACMajorDescFre", SqlDbType.NVarChar, 128, "ACMajorDescFre"));
            this.sqlUpdate.Parameters["@ACMajorDescFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
            this.sqlUpdate.Parameters["@ReadOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
            this.sqlUpdate.Parameters["@Obsolete"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@iCaseTaskId", SqlDbType.Int, 10, "iCaseTaskId"));
            this.sqlUpdate.Parameters["@iCaseTaskId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MGADMEng", SqlDbType.NVarChar, 128, "MGADMEng"));
            this.sqlUpdate.Parameters["@MGADMEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MGLITEng", SqlDbType.NVarChar, 128, "MGLITEng"));
            this.sqlUpdate.Parameters["@MGLITEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MGADVEng", SqlDbType.NVarChar, 128, "MGADVEng"));
            this.sqlUpdate.Parameters["@MGADVEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MGLEGEng", SqlDbType.NVarChar, 128, "MGLEGEng"));
            this.sqlUpdate.Parameters["@MGLEGEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OTADMEng", SqlDbType.NVarChar, 128, "OTADMEng"));
            this.sqlUpdate.Parameters["@OTADMEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OTLITEng", SqlDbType.NVarChar, 128, "OTLITEng"));
            this.sqlUpdate.Parameters["@OTLITEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OTADVEng", SqlDbType.NVarChar, 128, "OTADVEng"));
            this.sqlUpdate.Parameters["@OTADVEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OTLEGEng", SqlDbType.NVarChar, 128, "OTLEGEng"));
            this.sqlUpdate.Parameters["@OTLEGEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MGADMFre", SqlDbType.NVarChar, 128, "MGADMFre"));
            this.sqlUpdate.Parameters["@MGADMFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MGLITFre", SqlDbType.NVarChar, 128, "MGLITFre"));
            this.sqlUpdate.Parameters["@MGLITFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MGADVFre", SqlDbType.NVarChar, 128, "MGADVFre"));
            this.sqlUpdate.Parameters["@MGADVFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MGLEGFre", SqlDbType.NVarChar, 128, "MGLEGFre"));
            this.sqlUpdate.Parameters["@MGLEGFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OTADMFre", SqlDbType.NVarChar, 128, "OTADMFre"));
            this.sqlUpdate.Parameters["@OTADMFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OTLITFre", SqlDbType.NVarChar, 128, "OTLITFre"));
            this.sqlUpdate.Parameters["@OTLITFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OTADVFre", SqlDbType.NVarChar, 128, "OTADVFre"));
            this.sqlUpdate.Parameters["@OTADVFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OTLEGFre", SqlDbType.NVarChar, 128, "OTLEGFre"));
            this.sqlUpdate.Parameters["@OTLEGFre"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[ACMajorDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityCodeMajor", System.Data.SqlDbType.NVarChar, 4, "ActivityCodeMajor"));
            this.sqlDelete.Parameters["@ActivityCodeMajor"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }


		 public ActivityConfig.ACMajorDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            ActivityConfig.ACMajorDataTable dt = new ActivityConfig.ACMajorDataTable();
			Fill(dt);
            return dt;
        }



        public ActivityConfig.ACMajorDataTable Load(string ActivityCodeMajor)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ACMajorSelectByActivityCodeMajor]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityCodeMajor", System.Data.SqlDbType.NVarChar, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@ActivityCodeMajor"].Value=ActivityCodeMajor;

            ActivityConfig.ACMajorDataTable dt = new ActivityConfig.ACMajorDataTable();
			Fill(dt);
            return dt;
		}



	}
	

}
