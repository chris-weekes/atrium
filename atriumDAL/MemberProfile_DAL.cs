using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on MemberProfile table 
	/// in lawmate_DEV database
	/// on 2014-01-28
	/// </summary>
	public partial class MemberProfileDAL:atDAL.ObjectDAL
	{

    	internal MemberProfileDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "MemberProfile", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("OfficerId", "OfficerId"),
		  new System.Data.Common.DataColumnMapping("CanHearEng", "CanHearEng"),
		  new System.Data.Common.DataColumnMapping("CanHearFre", "CanHearFre"),
		  new System.Data.Common.DataColumnMapping("AppealLevelId", "AppealLevelId"),
		  new System.Data.Common.DataColumnMapping("CanHearEI", "CanHearEI"),
		  new System.Data.Common.DataColumnMapping("CanHearIS", "CanHearIS"),
		  new System.Data.Common.DataColumnMapping("TrainedCPP", "TrainedCPP"),
		  new System.Data.Common.DataColumnMapping("TrainedOAS", "TrainedOAS"),
		  new System.Data.Common.DataColumnMapping("TrainedEI", "TrainedEI"),
		  new System.Data.Common.DataColumnMapping("TrainedCharter", "TrainedCharter"),
		  
		  new System.Data.Common.DataColumnMapping("AppointmentStartDate", "AppointmentStartDate"),
		  new System.Data.Common.DataColumnMapping("AppointmentEndDate", "AppointmentEndDate"),
		  new System.Data.Common.DataColumnMapping("ConferenceID", "ConferenceID"),
		  new System.Data.Common.DataColumnMapping("ConferenceNumber", "ConferenceNumber"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[MemberProfileSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[MemberProfileInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficerId", SqlDbType.Int, 10, "OfficerId"));
			this.sqlInsert.Parameters["@OfficerId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CanHearEng", SqlDbType.Bit, 1, "CanHearEng"));
			this.sqlInsert.Parameters["@CanHearEng"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CanHearFre", SqlDbType.Bit, 1, "CanHearFre"));
			this.sqlInsert.Parameters["@CanHearFre"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AppealLevelId", SqlDbType.Int, 10, "AppealLevelId"));
			this.sqlInsert.Parameters["@AppealLevelId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CanHearEI", SqlDbType.Bit, 1, "CanHearEI"));
			this.sqlInsert.Parameters["@CanHearEI"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CanHearIS", SqlDbType.Bit, 1, "CanHearIS"));
			this.sqlInsert.Parameters["@CanHearIS"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@TrainedCPP", SqlDbType.Bit, 1, "TrainedCPP"));
			this.sqlInsert.Parameters["@TrainedCPP"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@TrainedOAS", SqlDbType.Bit, 1, "TrainedOAS"));
			this.sqlInsert.Parameters["@TrainedOAS"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@TrainedEI", SqlDbType.Bit, 1, "TrainedEI"));
			this.sqlInsert.Parameters["@TrainedEI"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@TrainedCharter", SqlDbType.Bit, 1, "TrainedCharter"));
			this.sqlInsert.Parameters["@TrainedCharter"].SourceVersion=DataRowVersion.Current;
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@AppointmentStartDate", SqlDbType.DateTime, 24, "AppointmentStartDate"));
			this.sqlInsert.Parameters["@AppointmentStartDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AppointmentEndDate", SqlDbType.DateTime, 24, "AppointmentEndDate"));
			this.sqlInsert.Parameters["@AppointmentEndDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ConferenceID", SqlDbType.NVarChar, 50, "ConferenceID"));
			this.sqlInsert.Parameters["@ConferenceID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ConferenceNumber", SqlDbType.NVarChar, 50, "ConferenceNumber"));
			this.sqlInsert.Parameters["@ConferenceNumber"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[MemberProfileUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficerId", SqlDbType.Int, 10, "OfficerId"));
			this.sqlUpdate.Parameters["@OfficerId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CanHearEng", SqlDbType.Bit, 1, "CanHearEng"));
			this.sqlUpdate.Parameters["@CanHearEng"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CanHearFre", SqlDbType.Bit, 1, "CanHearFre"));
			this.sqlUpdate.Parameters["@CanHearFre"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AppealLevelId", SqlDbType.Int, 10, "AppealLevelId"));
			this.sqlUpdate.Parameters["@AppealLevelId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CanHearEI", SqlDbType.Bit, 1, "CanHearEI"));
			this.sqlUpdate.Parameters["@CanHearEI"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CanHearIS", SqlDbType.Bit, 1, "CanHearIS"));
			this.sqlUpdate.Parameters["@CanHearIS"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@TrainedCPP", SqlDbType.Bit, 1, "TrainedCPP"));
			this.sqlUpdate.Parameters["@TrainedCPP"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@TrainedOAS", SqlDbType.Bit, 1, "TrainedOAS"));
			this.sqlUpdate.Parameters["@TrainedOAS"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@TrainedEI", SqlDbType.Bit, 1, "TrainedEI"));
			this.sqlUpdate.Parameters["@TrainedEI"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@TrainedCharter", SqlDbType.Bit, 1, "TrainedCharter"));
			this.sqlUpdate.Parameters["@TrainedCharter"].SourceVersion=DataRowVersion.Current;
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AppointmentStartDate", SqlDbType.DateTime, 24, "AppointmentStartDate"));
			this.sqlUpdate.Parameters["@AppointmentStartDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AppointmentEndDate", SqlDbType.DateTime, 24, "AppointmentEndDate"));
			this.sqlUpdate.Parameters["@AppointmentEndDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ConferenceID", SqlDbType.NVarChar, 50, "ConferenceID"));
			this.sqlUpdate.Parameters["@ConferenceID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ConferenceNumber", SqlDbType.NVarChar, 50, "ConferenceNumber"));
			this.sqlUpdate.Parameters["@ConferenceNumber"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[MemberProfileDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficerId", System.Data.SqlDbType.Int, 4, "OfficerId"));
		    this.sqlDelete.Parameters["@OfficerId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

        public officeDB.MemberProfileDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            officeDB.MemberProfileDataTable dt = new officeDB.MemberProfileDataTable();
			Fill(dt);
            return dt;
        }



        public officeDB.MemberProfileDataTable Load(int OfficerId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[MemberProfileSelectByOfficerId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficerId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@OfficerId"].Value=OfficerId;

            officeDB.MemberProfileDataTable dt = new officeDB.MemberProfileDataTable();
			Fill(dt);
            return dt;
		}



	}
	

}
