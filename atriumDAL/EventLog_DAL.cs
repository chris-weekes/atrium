using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on EventLog table 
	/// in craLawmate database
	/// on 2010/12/10
	/// </summary>
	public partial class EventLogDAL:atDAL.ObjectDAL
	{

    	internal EventLogDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "EventLog", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("EventId", "EventId"),
		  new System.Data.Common.DataColumnMapping("EventTime", "EventTime"),
		  new System.Data.Common.DataColumnMapping("EventType", "EventType"),
		  new System.Data.Common.DataColumnMapping("WindowsUser", "WindowsUser"),
		  new System.Data.Common.DataColumnMapping("LMUser", "LMUser"),
		  new System.Data.Common.DataColumnMapping("WorkAs", "WorkAs"),
		  new System.Data.Common.DataColumnMapping("ExType", "ExType"),
		  new System.Data.Common.DataColumnMapping("ExSource", "ExSource"),
		  new System.Data.Common.DataColumnMapping("ExMessage", "ExMessage"),
		  new System.Data.Common.DataColumnMapping("ExStack", "ExStack"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[EventLogSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[EventLogInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@EventId", SqlDbType.Int, 10, "EventId"));
			this.sqlInsert.Parameters["@EventId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EventTime", SqlDbType.SmallDateTime, 24, "EventTime"));
			this.sqlInsert.Parameters["@EventTime"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EventType", SqlDbType.NVarChar, 50, "EventType"));
			this.sqlInsert.Parameters["@EventType"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@WindowsUser", SqlDbType.NVarChar, 50, "WindowsUser"));
			this.sqlInsert.Parameters["@WindowsUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LMUser", SqlDbType.NVarChar, 50, "LMUser"));
			this.sqlInsert.Parameters["@LMUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@WorkAs", SqlDbType.NVarChar, 50, "WorkAs"));
			this.sqlInsert.Parameters["@WorkAs"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ExType", SqlDbType.NVarChar, 50, "ExType"));
			this.sqlInsert.Parameters["@ExType"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ExSource", SqlDbType.NVarChar, 50, "ExSource"));
			this.sqlInsert.Parameters["@ExSource"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ExMessage", SqlDbType.NVarChar, 512, "ExMessage"));
			this.sqlInsert.Parameters["@ExMessage"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ExStack", SqlDbType.NVarChar, 2147483647, "ExStack"));
			this.sqlInsert.Parameters["@ExStack"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[EventLogUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EventId", SqlDbType.Int, 10, "EventId"));
			this.sqlUpdate.Parameters["@EventId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EventTime", SqlDbType.SmallDateTime, 24, "EventTime"));
			this.sqlUpdate.Parameters["@EventTime"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EventType", SqlDbType.NVarChar, 50, "EventType"));
			this.sqlUpdate.Parameters["@EventType"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@WindowsUser", SqlDbType.NVarChar, 50, "WindowsUser"));
			this.sqlUpdate.Parameters["@WindowsUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LMUser", SqlDbType.NVarChar, 50, "LMUser"));
			this.sqlUpdate.Parameters["@LMUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@WorkAs", SqlDbType.NVarChar, 50, "WorkAs"));
			this.sqlUpdate.Parameters["@WorkAs"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ExType", SqlDbType.NVarChar, 50, "ExType"));
			this.sqlUpdate.Parameters["@ExType"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ExSource", SqlDbType.NVarChar, 50, "ExSource"));
			this.sqlUpdate.Parameters["@ExSource"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ExMessage", SqlDbType.NVarChar, 512, "ExMessage"));
			this.sqlUpdate.Parameters["@ExMessage"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ExStack", SqlDbType.NVarChar, 2147483647, "ExStack"));
			this.sqlUpdate.Parameters["@ExStack"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[EventLogDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EventId", System.Data.SqlDbType.Int, 4, "EventId"));
		    this.sqlDelete.Parameters["@EventId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public appDB.EventLogDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            appDB.EventLogDataTable dt = new appDB.EventLogDataTable();
			Fill(dt);
            return dt;
        }



        public appDB.EventLogDataTable Load(int EventId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[EventLogSelectByEventId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@EventId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@EventId"].Value=EventId;

            appDB.EventLogDataTable dt = new appDB.EventLogDataTable();
			Fill(dt);
            return dt;
		}



	}
	

}
