using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;

namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on ServiceCentre table 
	/// in Lawmate_DEV database
	/// on 2014-02-06
	/// </summary>
	public partial class ServiceCentreDAL:atDAL.ObjectDAL
	{

    	internal ServiceCentreDAL(atriumDALManager pDALManager) :base(pDALManager)
		{
			  Init();
		}

        private void Init()
		{


		    this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		    new System.Data.Common.DataTableMapping("Table", "ServiceCentre", new System.Data.Common.DataColumnMapping[] {
		  
            new System.Data.Common.DataColumnMapping("OfficeId", "OfficeId"),
            new System.Data.Common.DataColumnMapping("HoursOfServiceStart", "HoursOfServiceStart"),
            new System.Data.Common.DataColumnMapping("HoursOfServiceEnd", "HoursOfServiceEnd"),
            new System.Data.Common.DataColumnMapping("NumOfBoardRoomsPZ", "NumOfBoardRoomsPZ"),
            new System.Data.Common.DataColumnMapping("NumOfBoardRoomsVC", "NumOfBoardRoomsVC"),
            new System.Data.Common.DataColumnMapping("Longitude", "Longitude"),
            new System.Data.Common.DataColumnMapping("Latitude", "Latitude"),
            new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
            new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
            new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
            new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
            new System.Data.Common.DataColumnMapping("ts", "ts"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[ServiceCentreSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[ServiceCentreInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 10, "OfficeId"));
			this.sqlInsert.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@HoursOfServiceStart", SqlDbType.NVarChar, 30, "HoursOfServiceStart"));
			this.sqlInsert.Parameters["@HoursOfServiceStart"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@HoursOfServiceEnd", SqlDbType.NVarChar, 30, "HoursOfServiceEnd"));
			this.sqlInsert.Parameters["@HoursOfServiceEnd"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@NumOfBoardRoomsPZ", SqlDbType.Int, 10, "NumOfBoardRoomsPZ"));
			this.sqlInsert.Parameters["@NumOfBoardRoomsPZ"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@NumOfBoardRoomsVC", SqlDbType.Int, 10, "NumOfBoardRoomsVC"));
			this.sqlInsert.Parameters["@NumOfBoardRoomsVC"].SourceVersion=DataRowVersion.Current;


			this.sqlInsert.Parameters.Add(new SqlParameter("@Longitude", SqlDbType.Decimal, 30, "Longitude"));
            this.sqlInsert.Parameters["@Longitude"].Precision = 18;
            this.sqlInsert.Parameters["@Longitude"].Scale = 6;
            this.sqlInsert.Parameters["@Longitude"].SourceVersion=DataRowVersion.Current;

			
            this.sqlInsert.Parameters.Add(new SqlParameter("@Latitude", SqlDbType.Decimal, 30, "Latitude"));
            this.sqlInsert.Parameters["@Latitude"].Precision = 18;
            this.sqlInsert.Parameters["@Latitude"].Scale = 6;
			this.sqlInsert.Parameters["@Latitude"].SourceVersion=DataRowVersion.Current;
			
            
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[ServiceCentreUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 10, "OfficeId"));
			this.sqlUpdate.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@HoursOfServiceStart", SqlDbType.NVarChar, 30, "HoursOfServiceStart"));
			this.sqlUpdate.Parameters["@HoursOfServiceStart"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@HoursOfServiceEnd", SqlDbType.NVarChar, 30, "HoursOfServiceEnd"));
			this.sqlUpdate.Parameters["@HoursOfServiceEnd"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@NumOfBoardRoomsPZ", SqlDbType.Int, 10, "NumOfBoardRoomsPZ"));
			this.sqlUpdate.Parameters["@NumOfBoardRoomsPZ"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@NumOfBoardRoomsVC", SqlDbType.Int, 10, "NumOfBoardRoomsVC"));
			this.sqlUpdate.Parameters["@NumOfBoardRoomsVC"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Longitude", SqlDbType.Decimal, 30, "Longitude"));
            this.sqlInsert.Parameters["@Longitude"].Precision = 18;
            this.sqlInsert.Parameters["@Longitude"].Scale = 6;
			this.sqlUpdate.Parameters["@Longitude"].SourceVersion=DataRowVersion.Current;

			this.sqlUpdate.Parameters.Add(new SqlParameter("@Latitude", SqlDbType.Decimal, 30, "Latitude"));
            this.sqlInsert.Parameters["@Latitude"].Precision = 18;
            this.sqlInsert.Parameters["@Latitude"].Scale = 6;
			this.sqlUpdate.Parameters["@Latitude"].SourceVersion=DataRowVersion.Current;

			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[ServiceCentreDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeId", System.Data.SqlDbType.Int, 4, "OfficeId"));
		    this.sqlDelete.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;

		}

		public officeDB.ServiceCentreDataTable Load()
		{
		    this.sqlDa.SelectCommand=sqlSelectAll;

            officeDB.ServiceCentreDataTable dt = new officeDB.ServiceCentreDataTable();
			Fill(dt);
            return dt;
        }

        public officeDB.ServiceCentreDataTable Load(int OfficeId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ServiceCentreSelectByOfficeId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@OfficeId"].Value=OfficeId;

            officeDB.ServiceCentreDataTable dt = new officeDB.ServiceCentreDataTable();
			Fill(dt);
            return dt;
		}

	}

}