using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on ddEntity table 
	/// in lawmate_dev database
	/// on 2015-03-04
	/// </summary>
	public partial class ddEntityDAL:atDAL.ObjectDAL
	{

    	internal ddEntityDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "ddEntity", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("Id", "Id"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("TableId", "TableId"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("AId", "AId"),
		  new System.Data.Common.DataColumnMapping("BId", "BId"),
		  new System.Data.Common.DataColumnMapping("CId", "CId"),
		  new System.Data.Common.DataColumnMapping("DId", "DId"),
		  new System.Data.Common.DataColumnMapping("EId", "EId"),
		  new System.Data.Common.DataColumnMapping("FId", "FId"),
		  new System.Data.Common.DataColumnMapping("GId", "GId"),
		  new System.Data.Common.DataColumnMapping("HId", "HId"),
		  new System.Data.Common.DataColumnMapping("IId", "IId"),
		  new System.Data.Common.DataColumnMapping("JId", "JId"),
		  new System.Data.Common.DataColumnMapping("AFlag", "AFlag"),
		  new System.Data.Common.DataColumnMapping("BFlag", "BFlag"),
		  new System.Data.Common.DataColumnMapping("CFlag", "CFlag"),
		  new System.Data.Common.DataColumnMapping("DFlag", "DFlag"),
		  new System.Data.Common.DataColumnMapping("EFlag", "EFlag"),
		  new System.Data.Common.DataColumnMapping("FFlag", "FFlag"),
		  new System.Data.Common.DataColumnMapping("GFlag", "GFlag"),
		  new System.Data.Common.DataColumnMapping("HFlag", "HFlag"),
		  new System.Data.Common.DataColumnMapping("IFlag", "IFlag"),
		  new System.Data.Common.DataColumnMapping("JFlag", "JFlag"),
		  new System.Data.Common.DataColumnMapping("ADate", "ADate"),
		  new System.Data.Common.DataColumnMapping("BDate", "BDate"),
		  new System.Data.Common.DataColumnMapping("CDate", "CDate"),
		  new System.Data.Common.DataColumnMapping("DDate", "DDate"),
		  new System.Data.Common.DataColumnMapping("EDate", "EDate"),
		  new System.Data.Common.DataColumnMapping("FDate", "FDate"),
		  new System.Data.Common.DataColumnMapping("GDate", "GDate"),
		  new System.Data.Common.DataColumnMapping("HDate", "HDate"),
		  new System.Data.Common.DataColumnMapping("IDate", "IDate"),
		  new System.Data.Common.DataColumnMapping("JDate", "JDate"),
		  new System.Data.Common.DataColumnMapping("AText", "AText"),
		  new System.Data.Common.DataColumnMapping("BText", "BText"),
		  new System.Data.Common.DataColumnMapping("CText", "CText"),
		  new System.Data.Common.DataColumnMapping("DText", "DText"),
		  new System.Data.Common.DataColumnMapping("EText", "EText"),
		  new System.Data.Common.DataColumnMapping("FText", "FText"),
		  new System.Data.Common.DataColumnMapping("GText", "GText"),
		  new System.Data.Common.DataColumnMapping("HText", "HText"),
		  new System.Data.Common.DataColumnMapping("ACode", "ACode"),
		  new System.Data.Common.DataColumnMapping("BCode", "BCode"),
		  new System.Data.Common.DataColumnMapping("CCode", "CCode"),
		  new System.Data.Common.DataColumnMapping("DCode", "DCode"),
		  new System.Data.Common.DataColumnMapping("AMax", "AMax"),
		  new System.Data.Common.DataColumnMapping("BMax", "BMax"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[ddEntitySelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[ddEntityInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@Id", SqlDbType.Int, 10, "Id"));
			this.sqlInsert.Parameters["@Id"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlInsert.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@TableId", SqlDbType.Int, 10, "TableId"));
			this.sqlInsert.Parameters["@TableId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AId", SqlDbType.Int, 10, "AId"));
			this.sqlInsert.Parameters["@AId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BId", SqlDbType.Int, 10, "BId"));
			this.sqlInsert.Parameters["@BId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CId", SqlDbType.Int, 10, "CId"));
			this.sqlInsert.Parameters["@CId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DId", SqlDbType.Int, 10, "DId"));
			this.sqlInsert.Parameters["@DId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EId", SqlDbType.Int, 10, "EId"));
			this.sqlInsert.Parameters["@EId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FId", SqlDbType.Int, 10, "FId"));
			this.sqlInsert.Parameters["@FId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@GId", SqlDbType.Int, 10, "GId"));
			this.sqlInsert.Parameters["@GId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@HId", SqlDbType.Int, 10, "HId"));
			this.sqlInsert.Parameters["@HId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@IId", SqlDbType.Int, 10, "IId"));
			this.sqlInsert.Parameters["@IId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@JId", SqlDbType.Int, 10, "JId"));
			this.sqlInsert.Parameters["@JId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AFlag", SqlDbType.Bit, 1, "AFlag"));
			this.sqlInsert.Parameters["@AFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BFlag", SqlDbType.Bit, 1, "BFlag"));
			this.sqlInsert.Parameters["@BFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CFlag", SqlDbType.Bit, 1, "CFlag"));
			this.sqlInsert.Parameters["@CFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DFlag", SqlDbType.Bit, 1, "DFlag"));
			this.sqlInsert.Parameters["@DFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EFlag", SqlDbType.Bit, 1, "EFlag"));
			this.sqlInsert.Parameters["@EFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FFlag", SqlDbType.Bit, 1, "FFlag"));
			this.sqlInsert.Parameters["@FFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@GFlag", SqlDbType.Bit, 1, "GFlag"));
			this.sqlInsert.Parameters["@GFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@HFlag", SqlDbType.Bit, 1, "HFlag"));
			this.sqlInsert.Parameters["@HFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@IFlag", SqlDbType.Bit, 1, "IFlag"));
			this.sqlInsert.Parameters["@IFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@JFlag", SqlDbType.Bit, 1, "JFlag"));
			this.sqlInsert.Parameters["@JFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ADate", SqlDbType.DateTime, 24, "ADate"));
			this.sqlInsert.Parameters["@ADate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BDate", SqlDbType.DateTime, 24, "BDate"));
			this.sqlInsert.Parameters["@BDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CDate", SqlDbType.DateTime, 24, "CDate"));
			this.sqlInsert.Parameters["@CDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DDate", SqlDbType.DateTime, 24, "DDate"));
			this.sqlInsert.Parameters["@DDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EDate", SqlDbType.DateTime, 24, "EDate"));
			this.sqlInsert.Parameters["@EDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FDate", SqlDbType.DateTime, 24, "FDate"));
			this.sqlInsert.Parameters["@FDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@GDate", SqlDbType.DateTime, 24, "GDate"));
			this.sqlInsert.Parameters["@GDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@HDate", SqlDbType.DateTime, 24, "HDate"));
			this.sqlInsert.Parameters["@HDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@IDate", SqlDbType.DateTime, 24, "IDate"));
			this.sqlInsert.Parameters["@IDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@JDate", SqlDbType.DateTime, 24, "JDate"));
			this.sqlInsert.Parameters["@JDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AText", SqlDbType.NVarChar, 255, "AText"));
			this.sqlInsert.Parameters["@AText"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BText", SqlDbType.NVarChar, 255, "BText"));
			this.sqlInsert.Parameters["@BText"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CText", SqlDbType.NVarChar, 255, "CText"));
			this.sqlInsert.Parameters["@CText"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DText", SqlDbType.NVarChar, 255, "DText"));
			this.sqlInsert.Parameters["@DText"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EText", SqlDbType.NVarChar, 255, "EText"));
			this.sqlInsert.Parameters["@EText"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FText", SqlDbType.NVarChar, 255, "FText"));
			this.sqlInsert.Parameters["@FText"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@GText", SqlDbType.NVarChar, 255, "GText"));
			this.sqlInsert.Parameters["@GText"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@HText", SqlDbType.NVarChar, 255, "HText"));
			this.sqlInsert.Parameters["@HText"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ACode", SqlDbType.NVarChar, 6, "ACode"));
			this.sqlInsert.Parameters["@ACode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BCode", SqlDbType.NVarChar, 6, "BCode"));
			this.sqlInsert.Parameters["@BCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CCode", SqlDbType.NVarChar, 6, "CCode"));
			this.sqlInsert.Parameters["@CCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DCode", SqlDbType.NVarChar, 6, "DCode"));
			this.sqlInsert.Parameters["@DCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AMax", SqlDbType.NVarChar, -1, "AMax"));
			this.sqlInsert.Parameters["@AMax"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BMax", SqlDbType.NVarChar, -1, "BMax"));
			this.sqlInsert.Parameters["@BMax"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[ddEntityUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Id", SqlDbType.Int, 10, "Id"));
			this.sqlUpdate.Parameters["@Id"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlUpdate.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@TableId", SqlDbType.Int, 10, "TableId"));
			this.sqlUpdate.Parameters["@TableId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AId", SqlDbType.Int, 10, "AId"));
			this.sqlUpdate.Parameters["@AId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BId", SqlDbType.Int, 10, "BId"));
			this.sqlUpdate.Parameters["@BId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CId", SqlDbType.Int, 10, "CId"));
			this.sqlUpdate.Parameters["@CId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DId", SqlDbType.Int, 10, "DId"));
			this.sqlUpdate.Parameters["@DId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EId", SqlDbType.Int, 10, "EId"));
			this.sqlUpdate.Parameters["@EId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FId", SqlDbType.Int, 10, "FId"));
			this.sqlUpdate.Parameters["@FId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@GId", SqlDbType.Int, 10, "GId"));
			this.sqlUpdate.Parameters["@GId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@HId", SqlDbType.Int, 10, "HId"));
			this.sqlUpdate.Parameters["@HId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IId", SqlDbType.Int, 10, "IId"));
			this.sqlUpdate.Parameters["@IId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@JId", SqlDbType.Int, 10, "JId"));
			this.sqlUpdate.Parameters["@JId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AFlag", SqlDbType.Bit, 1, "AFlag"));
			this.sqlUpdate.Parameters["@AFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BFlag", SqlDbType.Bit, 1, "BFlag"));
			this.sqlUpdate.Parameters["@BFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CFlag", SqlDbType.Bit, 1, "CFlag"));
			this.sqlUpdate.Parameters["@CFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DFlag", SqlDbType.Bit, 1, "DFlag"));
			this.sqlUpdate.Parameters["@DFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EFlag", SqlDbType.Bit, 1, "EFlag"));
			this.sqlUpdate.Parameters["@EFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FFlag", SqlDbType.Bit, 1, "FFlag"));
			this.sqlUpdate.Parameters["@FFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@GFlag", SqlDbType.Bit, 1, "GFlag"));
			this.sqlUpdate.Parameters["@GFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@HFlag", SqlDbType.Bit, 1, "HFlag"));
			this.sqlUpdate.Parameters["@HFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IFlag", SqlDbType.Bit, 1, "IFlag"));
			this.sqlUpdate.Parameters["@IFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@JFlag", SqlDbType.Bit, 1, "JFlag"));
			this.sqlUpdate.Parameters["@JFlag"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ADate", SqlDbType.DateTime, 24, "ADate"));
			this.sqlUpdate.Parameters["@ADate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BDate", SqlDbType.DateTime, 24, "BDate"));
			this.sqlUpdate.Parameters["@BDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CDate", SqlDbType.DateTime, 24, "CDate"));
			this.sqlUpdate.Parameters["@CDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DDate", SqlDbType.DateTime, 24, "DDate"));
			this.sqlUpdate.Parameters["@DDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EDate", SqlDbType.DateTime, 24, "EDate"));
			this.sqlUpdate.Parameters["@EDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FDate", SqlDbType.DateTime, 24, "FDate"));
			this.sqlUpdate.Parameters["@FDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@GDate", SqlDbType.DateTime, 24, "GDate"));
			this.sqlUpdate.Parameters["@GDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@HDate", SqlDbType.DateTime, 24, "HDate"));
			this.sqlUpdate.Parameters["@HDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IDate", SqlDbType.DateTime, 24, "IDate"));
			this.sqlUpdate.Parameters["@IDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@JDate", SqlDbType.DateTime, 24, "JDate"));
			this.sqlUpdate.Parameters["@JDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AText", SqlDbType.NVarChar, 255, "AText"));
			this.sqlUpdate.Parameters["@AText"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BText", SqlDbType.NVarChar, 255, "BText"));
			this.sqlUpdate.Parameters["@BText"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CText", SqlDbType.NVarChar, 255, "CText"));
			this.sqlUpdate.Parameters["@CText"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DText", SqlDbType.NVarChar, 255, "DText"));
			this.sqlUpdate.Parameters["@DText"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EText", SqlDbType.NVarChar, 255, "EText"));
			this.sqlUpdate.Parameters["@EText"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FText", SqlDbType.NVarChar, 255, "FText"));
			this.sqlUpdate.Parameters["@FText"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@GText", SqlDbType.NVarChar, 255, "GText"));
			this.sqlUpdate.Parameters["@GText"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@HText", SqlDbType.NVarChar, 255, "HText"));
			this.sqlUpdate.Parameters["@HText"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ACode", SqlDbType.NVarChar, 6, "ACode"));
			this.sqlUpdate.Parameters["@ACode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BCode", SqlDbType.NVarChar, 6, "BCode"));
			this.sqlUpdate.Parameters["@BCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CCode", SqlDbType.NVarChar, 6, "CCode"));
			this.sqlUpdate.Parameters["@CCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DCode", SqlDbType.NVarChar, 6, "DCode"));
			this.sqlUpdate.Parameters["@DCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AMax", SqlDbType.NVarChar, -1, "AMax"));
			this.sqlUpdate.Parameters["@AMax"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BMax", SqlDbType.NVarChar, -1, "BMax"));
			this.sqlUpdate.Parameters["@BMax"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[ddEntityDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Id", System.Data.SqlDbType.Int, 4, "Id"));
		    this.sqlDelete.Parameters["@Id"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public atriumDB.ddEntityDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            atriumDB.ddEntityDataTable dt=new atriumDB.ddEntityDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public atriumDB.ddEntityDataTable Load(int Id)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ddEntitySelectById]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@Id"].Value=Id;

            atriumDB.ddEntityDataTable dt=new atriumDB.ddEntityDataTable();
			Fill(dt);
            return dt;
		}


		public atriumDB.ddEntityDataTable LoadByFileId(int FileId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ddEntitySelectByFileId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileId"].Value=FileId;

            atriumDB.ddEntityDataTable dt=new atriumDB.ddEntityDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
