using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on SSTCase table 
	/// in lawmatedev database
	/// on 09/24/2012
	/// </summary>
	public partial class SSTCaseDAL:atDAL.ObjectDAL
	{

    	internal SSTCaseDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "SSTCase", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("SSTCaseId", "SSTCaseId"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("AppealLevelID", "AppealLevelID"),
		  new System.Data.Common.DataColumnMapping("ProgramId", "ProgramId"),
		  new System.Data.Common.DataColumnMapping("OrigDecisionDate", "OrigDecisionDate"),
		  new System.Data.Common.DataColumnMapping("AppealDate", "AppealDate"),
		  new System.Data.Common.DataColumnMapping("ReceivedDate", "ReceivedDate"),
		  new System.Data.Common.DataColumnMapping("IsLate", "IsLate"),
		  new System.Data.Common.DataColumnMapping("IgnoreLate", "IgnoreLate"),
		  new System.Data.Common.DataColumnMapping("IgnoreReasonId", "IgnoreReasonId"),
		  new System.Data.Common.DataColumnMapping("FileCompleteDate", "FileCompleteDate"),
		  new System.Data.Common.DataColumnMapping("OutcomeId", "OutcomeId"),
		  new System.Data.Common.DataColumnMapping("DecisionDate", "DecisionDate"),
		  new System.Data.Common.DataColumnMapping("DecisionSentDate", "DecisionSentDate"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("FileComplete", "FileComplete"),
		  new System.Data.Common.DataColumnMapping("ReconsiderationID", "ReconsiderationID"),
		  new System.Data.Common.DataColumnMapping("AppelantSourceId", "AppelantSourceId"),
		  new System.Data.Common.DataColumnMapping("CaseStatus", "CaseStatus"),
		  new System.Data.Common.DataColumnMapping("ApplicationDate", "ApplicationDate"),
		  new System.Data.Common.DataColumnMapping("OnsetDate", "OnsetDate"),
		  new System.Data.Common.DataColumnMapping("DeemedDisabilityDate", "DeemedDisabilityDate"),
		  new System.Data.Common.DataColumnMapping("PaymentDate", "PaymentDate"),
		  new System.Data.Common.DataColumnMapping("MaxRetroactivity", "MaxRetroactivity"),
		  new System.Data.Common.DataColumnMapping("TerminationDate", "TerminationDate"),
		  new System.Data.Common.DataColumnMapping("Voluntary", "Voluntary"),
		  new System.Data.Common.DataColumnMapping("MQPDate", "MQPDate"),
		  new System.Data.Common.DataColumnMapping("BenefitStartDate", "BenefitStartDate"),
		  new System.Data.Common.DataColumnMapping("MQPAgreed", "MQPAgreed"),
		  new System.Data.Common.DataColumnMapping("NewFacts", "NewFacts"),
		  new System.Data.Common.DataColumnMapping("Disabled", "Disabled"),
		  new System.Data.Common.DataColumnMapping("CaseStatusDate", "CaseStatusDate"),
		  new System.Data.Common.DataColumnMapping("WithdrawalDate", "WithdrawalDate"),
		  new System.Data.Common.DataColumnMapping("LowerFileId", "LowerFileId"),
		  new System.Data.Common.DataColumnMapping("LeaveToAppealRecDate", "LeaveToAppealRecDate"),
		  new System.Data.Common.DataColumnMapping("LeaveToAppealDate", "LeaveToAppealDate"),
		  new System.Data.Common.DataColumnMapping("LeaveToAppealDecisionId", "LeaveToAppealDecisionId"),
		  new System.Data.Common.DataColumnMapping("AccountId", "AccountId"),
		  new System.Data.Common.DataColumnMapping("LeaveToAppealNotRequired", "LeaveToAppealNotRequired"),
		  new System.Data.Common.DataColumnMapping("HasMultipleApps", "HasMultipleApps"),
		  new System.Data.Common.DataColumnMapping("IsCharter", "IsCharter"),
		  new System.Data.Common.DataColumnMapping("IsDeceased", "IsDeceased"),
		  new System.Data.Common.DataColumnMapping("IsIncapacitated", "IsIncapacitated"),
		  new System.Data.Common.DataColumnMapping("Received365Date", "Received365Date"),
		  new System.Data.Common.DataColumnMapping("OrigDecisionNum", "OrigDecisionNum"),
		  new System.Data.Common.DataColumnMapping("OrigCourtId", "OrigCourtId"),
		  new System.Data.Common.DataColumnMapping("DecisionType", "DecisionType"),
		  new System.Data.Common.DataColumnMapping("SSTGroupId", "SSTGroupId"),
          new System.Data.Common.DataColumnMapping("CrisisId", "CrisisId"),
          new System.Data.Common.DataColumnMapping("LateOverride", "LateOverride"),
          new System.Data.Common.DataColumnMapping("LateOverrideDate", "LateOverrideDate"),
          new System.Data.Common.DataColumnMapping("LateOverrideUser", "LateOverrideUser"),
          new System.Data.Common.DataColumnMapping("ADReturnToGD", "ADReturnToGD"),
			})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[SSTCaseSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[SSTCaseInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@SSTCaseId", SqlDbType.Int, 10, "SSTCaseId"));
            this.sqlInsert.Parameters["@SSTCaseId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlInsert.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AppealLevelID", SqlDbType.Int, 10, "AppealLevelID"));
            this.sqlInsert.Parameters["@AppealLevelID"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ProgramId", SqlDbType.Int, 10, "ProgramId"));
            this.sqlInsert.Parameters["@ProgramId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OrigDecisionDate", SqlDbType.SmallDateTime, 24, "OrigDecisionDate"));
            this.sqlInsert.Parameters["@OrigDecisionDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AppealDate", SqlDbType.SmallDateTime, 24, "AppealDate"));
            this.sqlInsert.Parameters["@AppealDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ReceivedDate", SqlDbType.SmallDateTime, 24, "ReceivedDate"));
            this.sqlInsert.Parameters["@ReceivedDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsLate", SqlDbType.Bit, 1, "IsLate"));
            this.sqlInsert.Parameters["@IsLate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IgnoreLate", SqlDbType.Bit, 1, "IgnoreLate"));
            this.sqlInsert.Parameters["@IgnoreLate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IgnoreReasonId", SqlDbType.Int, 10, "IgnoreReasonId"));
            this.sqlInsert.Parameters["@IgnoreReasonId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileCompleteDate", SqlDbType.SmallDateTime, 24, "FileCompleteDate"));
            this.sqlInsert.Parameters["@FileCompleteDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OutcomeId", SqlDbType.Int, 10, "OutcomeId"));
            this.sqlInsert.Parameters["@OutcomeId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DecisionDate", SqlDbType.SmallDateTime, 24, "DecisionDate"));
            this.sqlInsert.Parameters["@DecisionDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DecisionSentDate", SqlDbType.SmallDateTime, 24, "DecisionSentDate"));
            this.sqlInsert.Parameters["@DecisionSentDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileComplete", SqlDbType.Bit, 1, "FileComplete"));
            this.sqlInsert.Parameters["@FileComplete"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ReconsiderationID", SqlDbType.Int, 10, "ReconsiderationID"));
            this.sqlInsert.Parameters["@ReconsiderationID"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AppelantSourceId", SqlDbType.Int, 10, "AppelantSourceId"));
            this.sqlInsert.Parameters["@AppelantSourceId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CaseStatus", SqlDbType.Int, 10, "CaseStatus"));
            this.sqlInsert.Parameters["@CaseStatus"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ApplicationDate", SqlDbType.SmallDateTime, 24, "ApplicationDate"));
            this.sqlInsert.Parameters["@ApplicationDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OnsetDate", SqlDbType.SmallDateTime, 24, "OnsetDate"));
            this.sqlInsert.Parameters["@OnsetDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DeemedDisabilityDate", SqlDbType.SmallDateTime, 24, "DeemedDisabilityDate"));
            this.sqlInsert.Parameters["@DeemedDisabilityDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@PaymentDate", SqlDbType.SmallDateTime, 24, "PaymentDate"));
            this.sqlInsert.Parameters["@PaymentDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MaxRetroactivity", SqlDbType.Bit, 1, "MaxRetroactivity"));
            this.sqlInsert.Parameters["@MaxRetroactivity"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@TerminationDate", SqlDbType.SmallDateTime, 24, "TerminationDate"));
            this.sqlInsert.Parameters["@TerminationDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Voluntary", SqlDbType.Bit, 1, "Voluntary"));
            this.sqlInsert.Parameters["@Voluntary"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MQPDate", SqlDbType.SmallDateTime, 24, "MQPDate"));
            this.sqlInsert.Parameters["@MQPDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BenefitStartDate", SqlDbType.SmallDateTime, 24, "BenefitStartDate"));
            this.sqlInsert.Parameters["@BenefitStartDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MQPAgreed", SqlDbType.Bit, 1, "MQPAgreed"));
            this.sqlInsert.Parameters["@MQPAgreed"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@NewFacts", SqlDbType.Bit, 1, "NewFacts"));
            this.sqlInsert.Parameters["@NewFacts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Disabled", SqlDbType.Bit, 1, "Disabled"));
            this.sqlInsert.Parameters["@Disabled"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CaseStatusDate", SqlDbType.SmallDateTime, 24, "CaseStatusDate"));
            this.sqlInsert.Parameters["@CaseStatusDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@WithdrawalDate", SqlDbType.SmallDateTime, 24, "WithdrawalDate"));
            this.sqlInsert.Parameters["@WithdrawalDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LowerFileId", SqlDbType.Int, 10, "LowerFileId"));
            this.sqlInsert.Parameters["@LowerFileId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LeaveToAppealRecDate", SqlDbType.SmallDateTime, 24, "LeaveToAppealRecDate"));
            this.sqlInsert.Parameters["@LeaveToAppealRecDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LeaveToAppealDate", SqlDbType.SmallDateTime, 24, "LeaveToAppealDate"));
            this.sqlInsert.Parameters["@LeaveToAppealDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LeaveToAppealDecisionId", SqlDbType.Int, 10, "LeaveToAppealDecisionId"));
            this.sqlInsert.Parameters["@LeaveToAppealDecisionId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AccountId", SqlDbType.Int, 10, "AccountId"));
            this.sqlInsert.Parameters["@AccountId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LeaveToAppealNotRequired", SqlDbType.Bit, 1, "LeaveToAppealNotRequired"));
            this.sqlInsert.Parameters["@LeaveToAppealNotRequired"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HasMultipleApps", SqlDbType.Bit, 1, "HasMultipleApps"));
            this.sqlInsert.Parameters["@HasMultipleApps"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsCharter", SqlDbType.Bit, 1, "IsCharter"));
            this.sqlInsert.Parameters["@IsCharter"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsDeceased", SqlDbType.Bit, 1, "IsDeceased"));
            this.sqlInsert.Parameters["@IsDeceased"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsIncapacitated", SqlDbType.Bit, 1, "IsIncapacitated"));
            this.sqlInsert.Parameters["@IsIncapacitated"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Received365Date", SqlDbType.SmallDateTime, 24, "Received365Date"));
            this.sqlInsert.Parameters["@Received365Date"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OrigDecisionNum", SqlDbType.NVarChar, 50, "OrigDecisionNum"));
            this.sqlInsert.Parameters["@OrigDecisionNum"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OrigCourtId", SqlDbType.Int, 10, "OrigCourtId"));
            this.sqlInsert.Parameters["@OrigCourtId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DecisionType", SqlDbType.Int, 10, "DecisionType"));
            this.sqlInsert.Parameters["@DecisionType"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SSTGroupId", SqlDbType.Int, 10, "SSTGroupId"));
            this.sqlInsert.Parameters["@SSTGroupId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CrisisId", SqlDbType.Int, 10, "CrisisId"));
            this.sqlInsert.Parameters["@CrisisId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LateOverride", SqlDbType.Bit, 1, "LateOverride"));
            this.sqlInsert.Parameters["@LateOverride"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LateOverrideDate", SqlDbType.SmallDateTime, 24, "LateOverrideDate"));
            this.sqlInsert.Parameters["@LateOverrideDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LateOverrideUser", SqlDbType.NVarChar, 50, "LateOverrideUser"));
            this.sqlInsert.Parameters["@LateOverrideUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ADReturnToGD", SqlDbType.Bit, 1, "ADReturnToGD"));
            this.sqlInsert.Parameters["@ADReturnToGD"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[SSTCaseUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@SSTCaseId", SqlDbType.Int, 10, "SSTCaseId"));
            this.sqlUpdate.Parameters["@SSTCaseId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlUpdate.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AppealLevelID", SqlDbType.Int, 10, "AppealLevelID"));
            this.sqlUpdate.Parameters["@AppealLevelID"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ProgramId", SqlDbType.Int, 10, "ProgramId"));
            this.sqlUpdate.Parameters["@ProgramId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OrigDecisionDate", SqlDbType.SmallDateTime, 24, "OrigDecisionDate"));
            this.sqlUpdate.Parameters["@OrigDecisionDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AppealDate", SqlDbType.SmallDateTime, 24, "AppealDate"));
            this.sqlUpdate.Parameters["@AppealDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ReceivedDate", SqlDbType.SmallDateTime, 24, "ReceivedDate"));
            this.sqlUpdate.Parameters["@ReceivedDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsLate", SqlDbType.Bit, 1, "IsLate"));
            this.sqlUpdate.Parameters["@IsLate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IgnoreLate", SqlDbType.Bit, 1, "IgnoreLate"));
            this.sqlUpdate.Parameters["@IgnoreLate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IgnoreReasonId", SqlDbType.Int, 10, "IgnoreReasonId"));
            this.sqlUpdate.Parameters["@IgnoreReasonId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileCompleteDate", SqlDbType.SmallDateTime, 24, "FileCompleteDate"));
            this.sqlUpdate.Parameters["@FileCompleteDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OutcomeId", SqlDbType.Int, 10, "OutcomeId"));
            this.sqlUpdate.Parameters["@OutcomeId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DecisionDate", SqlDbType.SmallDateTime, 24, "DecisionDate"));
            this.sqlUpdate.Parameters["@DecisionDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DecisionSentDate", SqlDbType.SmallDateTime, 24, "DecisionSentDate"));
            this.sqlUpdate.Parameters["@DecisionSentDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileComplete", SqlDbType.Bit, 1, "FileComplete"));
            this.sqlUpdate.Parameters["@FileComplete"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ReconsiderationID", SqlDbType.Int, 10, "ReconsiderationID"));
            this.sqlUpdate.Parameters["@ReconsiderationID"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AppelantSourceId", SqlDbType.Int, 10, "AppelantSourceId"));
            this.sqlUpdate.Parameters["@AppelantSourceId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CaseStatus", SqlDbType.Int, 10, "CaseStatus"));
            this.sqlUpdate.Parameters["@CaseStatus"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ApplicationDate", SqlDbType.SmallDateTime, 24, "ApplicationDate"));
            this.sqlUpdate.Parameters["@ApplicationDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OnsetDate", SqlDbType.SmallDateTime, 24, "OnsetDate"));
            this.sqlUpdate.Parameters["@OnsetDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DeemedDisabilityDate", SqlDbType.SmallDateTime, 24, "DeemedDisabilityDate"));
            this.sqlUpdate.Parameters["@DeemedDisabilityDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@PaymentDate", SqlDbType.SmallDateTime, 24, "PaymentDate"));
            this.sqlUpdate.Parameters["@PaymentDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MaxRetroactivity", SqlDbType.Bit, 1, "MaxRetroactivity"));
            this.sqlUpdate.Parameters["@MaxRetroactivity"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@TerminationDate", SqlDbType.SmallDateTime, 24, "TerminationDate"));
            this.sqlUpdate.Parameters["@TerminationDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Voluntary", SqlDbType.Bit, 1, "Voluntary"));
            this.sqlUpdate.Parameters["@Voluntary"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MQPDate", SqlDbType.SmallDateTime, 24, "MQPDate"));
            this.sqlUpdate.Parameters["@MQPDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BenefitStartDate", SqlDbType.SmallDateTime, 24, "BenefitStartDate"));
            this.sqlUpdate.Parameters["@BenefitStartDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MQPAgreed", SqlDbType.Bit, 1, "MQPAgreed"));
            this.sqlUpdate.Parameters["@MQPAgreed"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@NewFacts", SqlDbType.Bit, 1, "NewFacts"));
            this.sqlUpdate.Parameters["@NewFacts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Disabled", SqlDbType.Bit, 1, "Disabled"));
            this.sqlUpdate.Parameters["@Disabled"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CaseStatusDate", SqlDbType.SmallDateTime, 24, "CaseStatusDate"));
            this.sqlUpdate.Parameters["@CaseStatusDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@WithdrawalDate", SqlDbType.SmallDateTime, 24, "WithdrawalDate"));
            this.sqlUpdate.Parameters["@WithdrawalDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LowerFileId", SqlDbType.Int, 10, "LowerFileId"));
            this.sqlUpdate.Parameters["@LowerFileId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LeaveToAppealRecDate", SqlDbType.SmallDateTime, 24, "LeaveToAppealRecDate"));
            this.sqlUpdate.Parameters["@LeaveToAppealRecDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LeaveToAppealDate", SqlDbType.SmallDateTime, 24, "LeaveToAppealDate"));
            this.sqlUpdate.Parameters["@LeaveToAppealDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LeaveToAppealDecisionId", SqlDbType.Int, 10, "LeaveToAppealDecisionId"));
            this.sqlUpdate.Parameters["@LeaveToAppealDecisionId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AccountId", SqlDbType.Int, 10, "AccountId"));
            this.sqlUpdate.Parameters["@AccountId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LeaveToAppealNotRequired", SqlDbType.Bit, 1, "LeaveToAppealNotRequired"));
            this.sqlUpdate.Parameters["@LeaveToAppealNotRequired"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HasMultipleApps", SqlDbType.Bit, 1, "HasMultipleApps"));
            this.sqlUpdate.Parameters["@HasMultipleApps"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsCharter", SqlDbType.Bit, 1, "IsCharter"));
            this.sqlUpdate.Parameters["@IsCharter"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsDeceased", SqlDbType.Bit, 1, "IsDeceased"));
            this.sqlUpdate.Parameters["@IsDeceased"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsIncapacitated", SqlDbType.Bit, 1, "IsIncapacitated"));
            this.sqlUpdate.Parameters["@IsIncapacitated"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Received365Date", SqlDbType.SmallDateTime, 24, "Received365Date"));
            this.sqlUpdate.Parameters["@Received365Date"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OrigDecisionNum", SqlDbType.NVarChar, 50, "OrigDecisionNum"));
            this.sqlUpdate.Parameters["@OrigDecisionNum"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OrigCourtId", SqlDbType.Int, 10, "OrigCourtId"));
            this.sqlUpdate.Parameters["@OrigCourtId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DecisionType", SqlDbType.Int, 10, "DecisionType"));
            this.sqlUpdate.Parameters["@DecisionType"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SSTGroupId", SqlDbType.Int, 10, "SSTGroupId"));
            this.sqlUpdate.Parameters["@SSTGroupId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CrisisId", SqlDbType.Int, 10, "CrisisId"));
            this.sqlUpdate.Parameters["@CrisisId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LateOverride", SqlDbType.Bit, 1, "LateOverride"));
            this.sqlUpdate.Parameters["@LateOverride"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LateOverrideDate", SqlDbType.SmallDateTime, 24, "LateOverrideDate"));
            this.sqlUpdate.Parameters["@LateOverrideDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LateOverrideUser", SqlDbType.NVarChar, 50, "LateOverrideUser"));
            this.sqlUpdate.Parameters["@LateOverrideUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ADReturnToGD", SqlDbType.Bit, 1, "ADReturnToGD"));
            this.sqlUpdate.Parameters["@ADReturnToGD"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[SSTCaseDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTCaseId", System.Data.SqlDbType.Int, 4, "SSTCaseId"));
            this.sqlDelete.Parameters["@SSTCaseId"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }

        public SST.SSTCaseDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            SST.SSTCaseDataTable dt=new SST.SSTCaseDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public SST.SSTCaseDataTable Load(int SSTCaseId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTCaseSelectBySSTCaseId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTCaseId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@SSTCaseId"].Value=SSTCaseId;

            SST.SSTCaseDataTable dt=new SST.SSTCaseDataTable();
			Fill(dt);
            return dt;
		}


		public SST.SSTCaseDataTable LoadByFileId(int FileId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTCaseSelectByFileId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileId"].Value=FileId;

            SST.SSTCaseDataTable dt=new SST.SSTCaseDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
