using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on PLOffice table 
	/// in lawmate database
	/// on 2006/06/16
	/// </summary>
	public partial class PLOfficeDAL:atDAL.ObjectDAL
	{

    	internal PLOfficeDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "PLOffice", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("PLOfficeID", "PLOfficeID"),
		  new System.Data.Common.DataColumnMapping("OfficerID", "OfficerID"),
		  new System.Data.Common.DataColumnMapping("OfficeID", "OfficeID"),
		  new System.Data.Common.DataColumnMapping("OwnerOfficeID", "OwnerOfficeID"),
          new System.Data.Common.DataColumnMapping("ContactType", "ContactType"),
		  new System.Data.Common.DataColumnMapping("FileTypeCode", "FileTypeCode"),
		  new System.Data.Common.DataColumnMapping("OfficeTypeCode", "OfficeTypeCode"),
		  new System.Data.Common.DataColumnMapping("FileStatus", "FileStatus"),
		  new System.Data.Common.DataColumnMapping("StartLetter", "StartLetter"),
		  new System.Data.Common.DataColumnMapping("EndLetter", "EndLetter"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("Mod", "Mod"),
          new System.Data.Common.DataColumnMapping("ModResult", "ModResult"),
          new System.Data.Common.DataColumnMapping("Language", "Language"),
          new System.Data.Common.DataColumnMapping("DistributionParameter", "DistributionParameter"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[PLOfficeSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 10,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[PLOfficeInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@PLOfficeID", SqlDbType.Int, 10, "PLOfficeID"));
			this.sqlInsert.Parameters["@PLOfficeID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficerID", SqlDbType.Int, 10, "OfficerID"));
			this.sqlInsert.Parameters["@OfficerID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeID", SqlDbType.Int, 10, "OfficeID"));
			this.sqlInsert.Parameters["@OfficeID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OwnerOfficeID", SqlDbType.Int, 10, "OwnerOfficeID"));
			this.sqlInsert.Parameters["@OwnerOfficeID"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ContactType", SqlDbType.NVarChar, 4, "ContactType"));
            this.sqlInsert.Parameters["@ContactType"].SourceVersion = DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileTypeCode", SqlDbType.NVarChar, 6, "FileTypeCode"));
			this.sqlInsert.Parameters["@FileTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeTypeCode", SqlDbType.NVarChar, 4, "OfficeTypeCode"));
			this.sqlInsert.Parameters["@OfficeTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileStatus", SqlDbType.NVarChar, 1, "FileStatus"));
			this.sqlInsert.Parameters["@FileStatus"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@StartLetter", SqlDbType.NVarChar, 2, "StartLetter"));
			this.sqlInsert.Parameters["@StartLetter"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EndLetter", SqlDbType.NVarChar, 2, "EndLetter"));
			this.sqlInsert.Parameters["@EndLetter"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Mod", SqlDbType.TinyInt, 50, "Mod"));
            this.sqlInsert.Parameters["@Mod"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ModResult", SqlDbType.TinyInt, 50, "ModResult"));
            this.sqlInsert.Parameters["@ModResult"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Language", SqlDbType.Char, 1, "Language"));
            this.sqlInsert.Parameters["@Language"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DistributionParameter", SqlDbType.NVarChar, 8, "DistributionParameter"));
            this.sqlInsert.Parameters["@DistributionParameter"].SourceVersion = DataRowVersion.Current;
			

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[PLOfficeUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PLOfficeID", SqlDbType.Int, 10, "PLOfficeID"));
			this.sqlUpdate.Parameters["@PLOfficeID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficerID", SqlDbType.Int, 10, "OfficerID"));
			this.sqlUpdate.Parameters["@OfficerID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeID", SqlDbType.Int, 10, "OfficeID"));
			this.sqlUpdate.Parameters["@OfficeID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OwnerOfficeID", SqlDbType.Int, 10, "OwnerOfficeID"));
			this.sqlUpdate.Parameters["@OwnerOfficeID"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ContactType", SqlDbType.NVarChar, 4, "ContactType"));
            this.sqlUpdate.Parameters["@ContactType"].SourceVersion = DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileTypeCode", SqlDbType.NVarChar, 6, "FileTypeCode"));
			this.sqlUpdate.Parameters["@FileTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeTypeCode", SqlDbType.NVarChar, 4, "OfficeTypeCode"));
			this.sqlUpdate.Parameters["@OfficeTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileStatus", SqlDbType.NVarChar, 1, "FileStatus"));
			this.sqlUpdate.Parameters["@FileStatus"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@StartLetter", SqlDbType.NVarChar, 2, "StartLetter"));
			this.sqlUpdate.Parameters["@StartLetter"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EndLetter", SqlDbType.NVarChar, 2, "EndLetter"));
			this.sqlUpdate.Parameters["@EndLetter"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Mod", SqlDbType.TinyInt, 50, "Mod"));
            this.sqlUpdate.Parameters["@Mod"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ModResult", SqlDbType.TinyInt, 50, "ModResult"));
            this.sqlUpdate.Parameters["@ModResult"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Language", SqlDbType.Char, 1, "Language"));
            this.sqlUpdate.Parameters["@Language"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DistributionParameter", SqlDbType.NVarChar, 8, "DistributionParameter"));
            this.sqlUpdate.Parameters["@DistributionParameter"].SourceVersion = DataRowVersion.Current;
            
            // 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[PLOfficeDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PLOfficeID", System.Data.SqlDbType.Int, 10, "PLOfficeID"));
		    this.sqlDelete.Parameters["@PLOfficeID"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		public appDB.PLOfficeDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            appDB.PLOfficeDataTable dt=new appDB.PLOfficeDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public appDB.PLOfficeDataTable Load(int PLOfficeID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[PLOfficeSelectByPLOfficeID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@PLOfficeID", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@PLOfficeID"].Value=PLOfficeID;

            appDB.PLOfficeDataTable dt=new appDB.PLOfficeDataTable();
			Fill(dt);
            return dt;
		}


		public appDB.PLOfficeDataTable LoadByOfficeID(int OfficeID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[PLOfficeSelectByOfficeID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeID", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficeID"].Value=OfficeID;

            appDB.PLOfficeDataTable dt=new appDB.PLOfficeDataTable();
			Fill(dt);
            return dt;
		}



		public appDB.PLOfficeDataTable LoadByOfficerID(int OfficerID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[PLOfficeSelectByOfficerID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficerID", System.Data.SqlDbType.Int, 10, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficerID"].Value=OfficerID;

            appDB.PLOfficeDataTable dt=new appDB.PLOfficeDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
