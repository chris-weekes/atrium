using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on FileParty table 
	/// in lawmatedev database
	/// on 09/24/2012
	/// </summary>
	public partial class FilePartyDAL:atDAL.ObjectDAL
	{

    	internal FilePartyDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "FileParty", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("FilePartyId", "FilePartyId"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("HearingMethodRequested", "HearingMethodRequested"),
		  new System.Data.Common.DataColumnMapping("NotifiedOfAppealDate", "NotifiedOfAppealDate"),
		  new System.Data.Common.DataColumnMapping("AdvisedOfHearingDate", "AdvisedOfHearingDate"),
		  new System.Data.Common.DataColumnMapping("SentNoticeOfHearingDate", "SentNoticeOfHearingDate"),
		  new System.Data.Common.DataColumnMapping("CertifiedReadyDate", "CertifiedReadyDate"),
		  new System.Data.Common.DataColumnMapping("NotifiedOfDecisionDate", "NotifiedOfDecisionDate"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("IsAppellant", "IsAppellant"),
		  new System.Data.Common.DataColumnMapping("IsPending", "IsPending"),
		  new System.Data.Common.DataColumnMapping("FileContactId", "FileContactId"),
		  new System.Data.Common.DataColumnMapping("RepsSentDate", "RepsSentDate"),
		  new System.Data.Common.DataColumnMapping("RepsRecDate", "RepsRecDate"),
		  new System.Data.Common.DataColumnMapping("NoRepsReqDate", "NoRepsReqDate"),
          new System.Data.Common.DataColumnMapping("IsRespondent", "IsRespondent"),

          new System.Data.Common.DataColumnMapping("IsAddedParty", "IsAddedParty"),
          
			})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[FilePartySelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[FilePartyInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@FilePartyId", SqlDbType.Int, 10, "FilePartyId"));
            this.sqlInsert.Parameters["@FilePartyId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlInsert.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HearingMethodRequested", SqlDbType.Int, 10, "HearingMethodRequested"));
            this.sqlInsert.Parameters["@HearingMethodRequested"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@NotifiedOfAppealDate", SqlDbType.SmallDateTime, 24, "NotifiedOfAppealDate"));
            this.sqlInsert.Parameters["@NotifiedOfAppealDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AdvisedOfHearingDate", SqlDbType.SmallDateTime, 24, "AdvisedOfHearingDate"));
            this.sqlInsert.Parameters["@AdvisedOfHearingDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SentNoticeOfHearingDate", SqlDbType.SmallDateTime, 24, "SentNoticeOfHearingDate"));
            this.sqlInsert.Parameters["@SentNoticeOfHearingDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CertifiedReadyDate", SqlDbType.SmallDateTime, 24, "CertifiedReadyDate"));
            this.sqlInsert.Parameters["@CertifiedReadyDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@NotifiedOfDecisionDate", SqlDbType.SmallDateTime, 24, "NotifiedOfDecisionDate"));
            this.sqlInsert.Parameters["@NotifiedOfDecisionDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsAppellant", SqlDbType.Bit, 1, "IsAppellant"));
            this.sqlInsert.Parameters["@IsAppellant"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsPending", SqlDbType.Bit, 1, "IsPending"));
            this.sqlInsert.Parameters["@IsPending"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileContactId", SqlDbType.Int, 10, "FileContactId"));
            this.sqlInsert.Parameters["@FileContactId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RepsSentDate", SqlDbType.SmallDateTime, 24, "RepsSentDate"));
            this.sqlInsert.Parameters["@RepsSentDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RepsRecDate", SqlDbType.SmallDateTime, 24, "RepsRecDate"));
            this.sqlInsert.Parameters["@RepsRecDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@NoRepsReqDate", SqlDbType.SmallDateTime, 24, "NoRepsReqDate"));
            this.sqlInsert.Parameters["@NoRepsReqDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsRespondent", SqlDbType.Bit, 1, "IsRespondent"));
            this.sqlInsert.Parameters["@IsRespondent"].SourceVersion = DataRowVersion.Current;

            this.sqlInsert.Parameters.Add(new SqlParameter("@IsAddedParty", SqlDbType.Bit, 1, "IsAddedParty"));
            this.sqlInsert.Parameters["@IsAddedParty"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[FilePartyUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@FilePartyId", SqlDbType.Int, 10, "FilePartyId"));
            this.sqlUpdate.Parameters["@FilePartyId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlUpdate.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HearingMethodRequested", SqlDbType.Int, 10, "HearingMethodRequested"));
            this.sqlUpdate.Parameters["@HearingMethodRequested"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@NotifiedOfAppealDate", SqlDbType.SmallDateTime, 24, "NotifiedOfAppealDate"));
            this.sqlUpdate.Parameters["@NotifiedOfAppealDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AdvisedOfHearingDate", SqlDbType.SmallDateTime, 24, "AdvisedOfHearingDate"));
            this.sqlUpdate.Parameters["@AdvisedOfHearingDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SentNoticeOfHearingDate", SqlDbType.SmallDateTime, 24, "SentNoticeOfHearingDate"));
            this.sqlUpdate.Parameters["@SentNoticeOfHearingDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CertifiedReadyDate", SqlDbType.SmallDateTime, 24, "CertifiedReadyDate"));
            this.sqlUpdate.Parameters["@CertifiedReadyDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@NotifiedOfDecisionDate", SqlDbType.SmallDateTime, 24, "NotifiedOfDecisionDate"));
            this.sqlUpdate.Parameters["@NotifiedOfDecisionDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsAppellant", SqlDbType.Bit, 1, "IsAppellant"));
            this.sqlUpdate.Parameters["@IsAppellant"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsPending", SqlDbType.Bit, 1, "IsPending"));
            this.sqlUpdate.Parameters["@IsPending"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileContactId", SqlDbType.Int, 10, "FileContactId"));
            this.sqlUpdate.Parameters["@FileContactId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RepsSentDate", SqlDbType.SmallDateTime, 24, "RepsSentDate"));
            this.sqlUpdate.Parameters["@RepsSentDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RepsRecDate", SqlDbType.SmallDateTime, 24, "RepsRecDate"));
            this.sqlUpdate.Parameters["@RepsRecDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@NoRepsReqDate", SqlDbType.SmallDateTime, 24, "NoRepsReqDate"));
            this.sqlUpdate.Parameters["@NoRepsReqDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsRespondent", SqlDbType.Bit, 1, "IsRespondent"));
            this.sqlUpdate.Parameters["@IsRespondent"].SourceVersion = DataRowVersion.Current;

            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsAddedParty", SqlDbType.Bit, 1, "IsAddedParty"));
            this.sqlUpdate.Parameters["@IsAddedParty"].SourceVersion = DataRowVersion.Current;

            
            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[FilePartyDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FilePartyId", System.Data.SqlDbType.Int, 4, "FilePartyId"));
            this.sqlDelete.Parameters["@FilePartyId"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }



        public SST.FilePartyDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            SST.FilePartyDataTable dt=new SST.FilePartyDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public SST.FilePartyDataTable Load(int FilePartyId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FilePartySelectByFilePartyId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FilePartyId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@FilePartyId"].Value=FilePartyId;

            SST.FilePartyDataTable dt=new SST.FilePartyDataTable();
			Fill(dt);
            return dt;
		}


		public SST.FilePartyDataTable LoadByFileId(int FileId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FilePartySelectByFileId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileId"].Value=FileId;

            SST.FilePartyDataTable dt=new SST.FilePartyDataTable();
			Fill(dt);
            return dt;
		}



		public SST.FilePartyDataTable LoadByFilePartyId(int FilePartyId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FilePartySelectByFilePartyId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FilePartyId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FilePartyId"].Value=FilePartyId;

            SST.FilePartyDataTable dt=new SST.FilePartyDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
