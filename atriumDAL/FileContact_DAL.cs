using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on FileContact table 
	/// in lawmate database
	/// on 2006/06/16
	/// </summary>
	public partial class FileContactDAL:atDAL.ObjectDAL
	{

    	internal FileContactDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "FileContact", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("FileContactid", "FileContactid"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("ContactId", "ContactId"),
		  new System.Data.Common.DataColumnMapping("ContactType", "ContactType"),
		  new System.Data.Common.DataColumnMapping("StartDate", "StartDate"),
		  new System.Data.Common.DataColumnMapping("EndDate", "EndDate"),
		  new System.Data.Common.DataColumnMapping("Active", "Active"),
		  new System.Data.Common.DataColumnMapping("NoReassign", "NoReassign"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("AllowAdministrativeEmail", "AllowAdministrativeEmail"),
		  new System.Data.Common.DataColumnMapping("HideInToc", "HideInToc"),
		  new System.Data.Common.DataColumnMapping("CallCount", "CallCount"),

          new System.Data.Common.DataColumnMapping("NativeLangId", "NativeLangId"),
		  new System.Data.Common.DataColumnMapping("InterpreterBooked", "InterpreterBooked"),
			})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[FileContactSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[FileContactInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@FileContactid", SqlDbType.Int, 10, "FileContactid"));
            this.sqlInsert.Parameters["@FileContactid"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlInsert.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ContactId", SqlDbType.Int, 10, "ContactId"));
            this.sqlInsert.Parameters["@ContactId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ContactType", SqlDbType.NVarChar, 4, "ContactType"));
            this.sqlInsert.Parameters["@ContactType"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@StartDate", SqlDbType.SmallDateTime, 24, "StartDate"));
            this.sqlInsert.Parameters["@StartDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@EndDate", SqlDbType.SmallDateTime, 24, "EndDate"));
            this.sqlInsert.Parameters["@EndDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Active", SqlDbType.Bit, 1, "Active"));
            this.sqlInsert.Parameters["@Active"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@NoReassign", SqlDbType.Bit, 1, "NoReassign"));
            this.sqlInsert.Parameters["@NoReassign"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AllowAdministrativeEmail", SqlDbType.Bit, 1, "AllowAdministrativeEmail"));
            this.sqlInsert.Parameters["@AllowAdministrativeEmail"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@HideInToc", SqlDbType.Bit, 1, "HideInToc"));
            this.sqlInsert.Parameters["@HideInToc"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CallCount", SqlDbType.Int, 10, "CallCount"));
            this.sqlInsert.Parameters["@CallCount"].SourceVersion = DataRowVersion.Current;


            this.sqlInsert.Parameters.Add(new SqlParameter("@NativeLangId", SqlDbType.Int, 10, "NativeLangId"));
            this.sqlInsert.Parameters["@NativeLangId"].SourceVersion = DataRowVersion.Current;


            this.sqlInsert.Parameters.Add(new SqlParameter("@InterpreterBooked", SqlDbType.Bit, 1, "InterpreterBooked"));
            this.sqlInsert.Parameters["@InterpreterBooked"].SourceVersion = DataRowVersion.Current;



            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[FileContactUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileContactid", SqlDbType.Int, 10, "FileContactid"));
            this.sqlUpdate.Parameters["@FileContactid"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlUpdate.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ContactId", SqlDbType.Int, 10, "ContactId"));
            this.sqlUpdate.Parameters["@ContactId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ContactType", SqlDbType.NVarChar, 4, "ContactType"));
            this.sqlUpdate.Parameters["@ContactType"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@StartDate", SqlDbType.SmallDateTime, 24, "StartDate"));
            this.sqlUpdate.Parameters["@StartDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@EndDate", SqlDbType.SmallDateTime, 24, "EndDate"));
            this.sqlUpdate.Parameters["@EndDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Active", SqlDbType.Bit, 1, "Active"));
            this.sqlUpdate.Parameters["@Active"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@NoReassign", SqlDbType.Bit, 1, "NoReassign"));
            this.sqlUpdate.Parameters["@NoReassign"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AllowAdministrativeEmail", SqlDbType.Bit, 1, "AllowAdministrativeEmail"));
            this.sqlUpdate.Parameters["@AllowAdministrativeEmail"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@HideInToc", SqlDbType.Bit, 1, "HideInToc"));
            this.sqlUpdate.Parameters["@HideInToc"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CallCount", SqlDbType.Int, 10, "CallCount"));
            this.sqlUpdate.Parameters["@CallCount"].SourceVersion = DataRowVersion.Current;



            this.sqlUpdate.Parameters.Add(new SqlParameter("@NativeLangId", SqlDbType.Int, 10, "NativeLangId"));
            this.sqlUpdate.Parameters["@NativeLangId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@InterpreterBooked", SqlDbType.Bit, 1, "InterpreterBooked"));
            this.sqlUpdate.Parameters["@InterpreterBooked"].SourceVersion = DataRowVersion.Current;


            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[FileContactDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileContactid", System.Data.SqlDbType.Int, 4, "FileContactid"));
            this.sqlDelete.Parameters["@FileContactid"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }

		public atriumDB.FileContactDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            atriumDB.FileContactDataTable dt=new atriumDB.FileContactDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public atriumDB.FileContactDataTable Load(int FileContactid)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FileContactSelectByFileContactid]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileContactid", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@FileContactid"].Value=FileContactid;

            atriumDB.FileContactDataTable dt=new atriumDB.FileContactDataTable();
			Fill(dt);
            return dt;
		}


		public atriumDB.FileContactDataTable LoadByContactId(int ContactId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FileContactSelectByContactId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ContactId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@ContactId"].Value=ContactId;

            atriumDB.FileContactDataTable dt=new atriumDB.FileContactDataTable();
			Fill(dt);
            return dt;
		}



		public atriumDB.FileContactDataTable LoadByFileId(int FileId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[FileContactSelectByFileId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileId"].Value=FileId;

            atriumDB.FileContactDataTable dt=new atriumDB.FileContactDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
