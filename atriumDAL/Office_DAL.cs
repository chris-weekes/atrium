using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on Office table 
	/// in lawmate database
	/// on 2/21/2007
	/// </summary>
	public partial class OfficeDAL:atDAL.ObjectDAL
	{

    	internal OfficeDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Office", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("OfficeId", "OfficeId"),
		  new System.Data.Common.DataColumnMapping("OfficeFileId", "OfficeFileId"),
		  new System.Data.Common.DataColumnMapping("ParentOfficeId", "ParentOfficeId"),
		  new System.Data.Common.DataColumnMapping("AddressId", "AddressId"),
		  new System.Data.Common.DataColumnMapping("OfficeCode", "OfficeCode"),
		  new System.Data.Common.DataColumnMapping("DARSOfficeCode", "DARSOfficeCode"),
		  new System.Data.Common.DataColumnMapping("OfficeName", "OfficeName"),
		  new System.Data.Common.DataColumnMapping("OfficeNameFre", "OfficeNameFre"),
		  new System.Data.Common.DataColumnMapping("Retainer", "Retainer"),
		  new System.Data.Common.DataColumnMapping("LetterSignatory", "LetterSignatory"),
		  new System.Data.Common.DataColumnMapping("AttentionAdministrator", "AttentionAdministrator"),
		  new System.Data.Common.DataColumnMapping("AttentionBilling", "AttentionBilling"),
		  new System.Data.Common.DataColumnMapping("OfficeTypeCode", "OfficeTypeCode"),
		  new System.Data.Common.DataColumnMapping("ReappointedDate", "ReappointedDate"),
		  new System.Data.Common.DataColumnMapping("AppointmentTypeCode", "AppointmentTypeCode"),
		  new System.Data.Common.DataColumnMapping("HourlyRate", "HourlyRate"),
		  new System.Data.Common.DataColumnMapping("CurrencyCode", "CurrencyCode"),
		  new System.Data.Common.DataColumnMapping("Active", "Active"),
		  new System.Data.Common.DataColumnMapping("Even", "Even"),
		  new System.Data.Common.DataColumnMapping("DefaultGroup", "DefaultGroup"),
		  new System.Data.Common.DataColumnMapping("IsOnLine", "IsOnLine"),
		  new System.Data.Common.DataColumnMapping("UsesBilling", "UsesBilling"),
		  new System.Data.Common.DataColumnMapping("LastMail", "LastMail"),
		  new System.Data.Common.DataColumnMapping("IsMail", "IsMail"),
		  new System.Data.Common.DataColumnMapping("DepartmentID", "DepartmentID"),
		  new System.Data.Common.DataColumnMapping("islrmOffice", "islrmOffice"),
		  new System.Data.Common.DataColumnMapping("GSTNumber", "GSTNumber"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("UploadsDisb", "UploadsDisb"),
          new System.Data.Common.DataColumnMapping("OfficeFriendlyNameEng", "OfficeFriendlyNameEng"),
          new System.Data.Common.DataColumnMapping("OfficeFriendlyNameFre", "OfficeFriendlyNameFre"),
          new System.Data.Common.DataColumnMapping("IsBranch", "IsBranch"),
          new System.Data.Common.DataColumnMapping("BranchID", "BranchID"),
          new System.Data.Common.DataColumnMapping("IsClientOffice", "IsClientOffice"),
          new System.Data.Common.DataColumnMapping("DefaultTaxRate", "DefaultTaxRate"),

            })});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[OfficeSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[OfficeInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 10, "OfficeId"));
			this.sqlInsert.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeFileId", SqlDbType.Int, 10, "OfficeFileId"));
			this.sqlInsert.Parameters["@OfficeFileId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ParentOfficeId", SqlDbType.Int, 10, "ParentOfficeId"));
			this.sqlInsert.Parameters["@ParentOfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AddressId", SqlDbType.Int, 10, "AddressId"));
			this.sqlInsert.Parameters["@AddressId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeCode", SqlDbType.NVarChar, 6, "OfficeCode"));
			this.sqlInsert.Parameters["@OfficeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DARSOfficeCode", SqlDbType.NVarChar, 50, "DARSOfficeCode"));
			this.sqlInsert.Parameters["@DARSOfficeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeName", SqlDbType.NVarChar, 255, "OfficeName"));
			this.sqlInsert.Parameters["@OfficeName"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeNameFre", SqlDbType.NVarChar, 255, "OfficeNameFre"));
			this.sqlInsert.Parameters["@OfficeNameFre"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Retainer", SqlDbType.Bit, 1, "Retainer"));
			this.sqlInsert.Parameters["@Retainer"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LetterSignatory", SqlDbType.NVarChar, 50, "LetterSignatory"));
			this.sqlInsert.Parameters["@LetterSignatory"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AttentionAdministrator", SqlDbType.NVarChar, 50, "AttentionAdministrator"));
			this.sqlInsert.Parameters["@AttentionAdministrator"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AttentionBilling", SqlDbType.NVarChar, 50, "AttentionBilling"));
			this.sqlInsert.Parameters["@AttentionBilling"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeTypeCode", SqlDbType.NVarChar, 4, "OfficeTypeCode"));
			this.sqlInsert.Parameters["@OfficeTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ReappointedDate", SqlDbType.SmallDateTime, 24, "ReappointedDate"));
			this.sqlInsert.Parameters["@ReappointedDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AppointmentTypeCode", SqlDbType.NVarChar, 4, "AppointmentTypeCode"));
			this.sqlInsert.Parameters["@AppointmentTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@HourlyRate", SqlDbType.Money, 19, "HourlyRate"));
			this.sqlInsert.Parameters["@HourlyRate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CurrencyCode", SqlDbType.NVarChar, 2, "CurrencyCode"));
			this.sqlInsert.Parameters["@CurrencyCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Active", SqlDbType.Bit, 1, "Active"));
			this.sqlInsert.Parameters["@Active"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Even", SqlDbType.Bit, 1, "Even"));
			this.sqlInsert.Parameters["@Even"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DefaultGroup", SqlDbType.Int, 10, "DefaultGroup"));
			this.sqlInsert.Parameters["@DefaultGroup"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@IsOnLine", SqlDbType.Bit, 1, "IsOnLine"));
			this.sqlInsert.Parameters["@IsOnLine"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@UsesBilling", SqlDbType.Bit, 1, "UsesBilling"));
			this.sqlInsert.Parameters["@UsesBilling"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LastMail", SqlDbType.SmallDateTime, 24, "LastMail"));
			this.sqlInsert.Parameters["@LastMail"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@IsMail", SqlDbType.Bit, 1, "IsMail"));
			this.sqlInsert.Parameters["@IsMail"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DepartmentID", SqlDbType.Int, 10, "DepartmentID"));
			this.sqlInsert.Parameters["@DepartmentID"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsLrmOffice", SqlDbType.Bit, 1, "islrmOffice"));
            this.sqlInsert.Parameters["@islrmOffice"].SourceVersion = DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@GSTNumber", SqlDbType.NVarChar, 50, "GSTNumber"));
			this.sqlInsert.Parameters["@GSTNumber"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			//this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			//this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@UploadsDisb", SqlDbType.Bit, 1, "UploadsDisb"));
            this.sqlInsert.Parameters["@UploadsDisb"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeFriendlyNameEng", SqlDbType.NVarChar, 20, "OfficeFriendlyNameEng"));
			this.sqlInsert.Parameters["@OfficeFriendlyNameEng"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeFriendlyNameFre", SqlDbType.NVarChar, 20, "OfficeFriendlyNameFre"));
			this.sqlInsert.Parameters["@OfficeFriendlyNameFre"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsBranch", SqlDbType.Bit, 1, "IsBranch"));
            this.sqlInsert.Parameters["@IsBranch"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BranchID", SqlDbType.Int, 10, "BranchID"));
            this.sqlInsert.Parameters["@BranchID"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IsClientOffice", SqlDbType.Bit, 1, "IsClientOffice"));
            this.sqlInsert.Parameters["@IsClientOffice"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DefaultTaxRate", SqlDbType.Int, 4, "DefaultTaxRate"));
            this.sqlInsert.Parameters["@DefaultTaxRate"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[OfficeUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 10, "OfficeId"));
			this.sqlUpdate.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeFileId", SqlDbType.Int, 10, "OfficeFileId"));
			this.sqlUpdate.Parameters["@OfficeFileId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ParentOfficeId", SqlDbType.Int, 10, "ParentOfficeId"));
			this.sqlUpdate.Parameters["@ParentOfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AddressId", SqlDbType.Int, 10, "AddressId"));
			this.sqlUpdate.Parameters["@AddressId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeCode", SqlDbType.NVarChar, 6, "OfficeCode"));
			this.sqlUpdate.Parameters["@OfficeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DARSOfficeCode", SqlDbType.NVarChar, 50, "DARSOfficeCode"));
			this.sqlUpdate.Parameters["@DARSOfficeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeName", SqlDbType.NVarChar, 255, "OfficeName"));
			this.sqlUpdate.Parameters["@OfficeName"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeNameFre", SqlDbType.NVarChar, 255, "OfficeNameFre"));
			this.sqlUpdate.Parameters["@OfficeNameFre"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Retainer", SqlDbType.Bit, 1, "Retainer"));
			this.sqlUpdate.Parameters["@Retainer"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LetterSignatory", SqlDbType.NVarChar, 50, "LetterSignatory"));
			this.sqlUpdate.Parameters["@LetterSignatory"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AttentionAdministrator", SqlDbType.NVarChar, 50, "AttentionAdministrator"));
			this.sqlUpdate.Parameters["@AttentionAdministrator"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AttentionBilling", SqlDbType.NVarChar, 50, "AttentionBilling"));
			this.sqlUpdate.Parameters["@AttentionBilling"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeTypeCode", SqlDbType.NVarChar, 4, "OfficeTypeCode"));
			this.sqlUpdate.Parameters["@OfficeTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ReappointedDate", SqlDbType.SmallDateTime, 24, "ReappointedDate"));
			this.sqlUpdate.Parameters["@ReappointedDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AppointmentTypeCode", SqlDbType.NVarChar, 4, "AppointmentTypeCode"));
			this.sqlUpdate.Parameters["@AppointmentTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@HourlyRate", SqlDbType.Money, 19, "HourlyRate"));
			this.sqlUpdate.Parameters["@HourlyRate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CurrencyCode", SqlDbType.NVarChar, 2, "CurrencyCode"));
			this.sqlUpdate.Parameters["@CurrencyCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Active", SqlDbType.Bit, 1, "Active"));
			this.sqlUpdate.Parameters["@Active"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Even", SqlDbType.Bit, 1, "Even"));
			this.sqlUpdate.Parameters["@Even"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DefaultGroup", SqlDbType.Int, 10, "DefaultGroup"));
			this.sqlUpdate.Parameters["@DefaultGroup"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IsOnLine", SqlDbType.Bit, 1, "IsOnLine"));
			this.sqlUpdate.Parameters["@IsOnLine"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@UsesBilling", SqlDbType.Bit, 1, "UsesBilling"));
			this.sqlUpdate.Parameters["@UsesBilling"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LastMail", SqlDbType.SmallDateTime, 24, "LastMail"));
			this.sqlUpdate.Parameters["@LastMail"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IsMail", SqlDbType.Bit, 1, "IsMail"));
			this.sqlUpdate.Parameters["@IsMail"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DepartmentID", SqlDbType.Int, 10, "DepartmentID"));
			this.sqlUpdate.Parameters["@DepartmentID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IsLrmOffice", SqlDbType.Bit, 1, "IsLrmOffice"));
			this.sqlUpdate.Parameters["@IsLrmOffice"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@GSTNumber", SqlDbType.NVarChar, 50, "GSTNumber"));
			this.sqlUpdate.Parameters["@GSTNumber"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@UploadsDisb", SqlDbType.Bit, 1, "UploadsDisb"));
            this.sqlUpdate.Parameters["@UploadsDisb"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeFriendlyNameEng", SqlDbType.NVarChar, 20, "OfficeFriendlyNameEng"));
            this.sqlUpdate.Parameters["@OfficeFriendlyNameEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeFriendlyNameFre", SqlDbType.NVarChar, 20, "OfficeFriendlyNameFre"));
            this.sqlUpdate.Parameters["@OfficeFriendlyNameFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsBranch", SqlDbType.Bit, 1, "IsBranch"));
            this.sqlUpdate.Parameters["@IsBranch"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BranchID", SqlDbType.Int, 10, "BranchID"));
            this.sqlUpdate.Parameters["@BranchID"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IsClientOffice", SqlDbType.Bit, 1, "IsClientOffice"));
            this.sqlUpdate.Parameters["@IsClientOffice"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DefaultTaxRate", SqlDbType.Int, 4, "DefaultTaxRate"));
            this.sqlUpdate.Parameters["@DefaultTaxRate"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[OfficeDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeId", System.Data.SqlDbType.Int, 4, "OfficeId"));
		    this.sqlDelete.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public officeDB.OfficeDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            officeDB.OfficeDataTable dt=new officeDB.OfficeDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public officeDB.OfficeDataTable Load(int OfficeId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[OfficeSelectByOfficeId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@OfficeId"].Value=OfficeId;

            officeDB.OfficeDataTable dt=new officeDB.OfficeDataTable();
			Fill(dt);
            return dt;
		}


		public officeDB.OfficeDataTable LoadByAddressId(int AddressId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[OfficeSelectByAddressId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@AddressId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@AddressId"].Value=AddressId;

            officeDB.OfficeDataTable dt=new officeDB.OfficeDataTable();
			Fill(dt);
            return dt;
		}



		public officeDB.OfficeDataTable LoadByDepartmentID(int DepartmentID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[OfficeSelectByDepartmentID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DepartmentID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@DepartmentID"].Value=DepartmentID;

            officeDB.OfficeDataTable dt=new officeDB.OfficeDataTable();
			Fill(dt);
            return dt;
		}



		public officeDB.OfficeDataTable LoadByOfficeFileId(int OfficeFileId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[OfficeSelectByOfficeFileId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeFileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficeFileId"].Value=OfficeFileId;

            officeDB.OfficeDataTable dt=new officeDB.OfficeDataTable();
			Fill(dt);
            return dt;
		}



		public officeDB.OfficeDataTable LoadByParentOfficeId(int ParentOfficeId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[OfficeSelectByParentOfficeId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ParentOfficeId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@ParentOfficeId"].Value=ParentOfficeId;

            officeDB.OfficeDataTable dt=new officeDB.OfficeDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
