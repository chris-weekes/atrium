using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on Batch table 
	/// in lawmate database
	/// on 2006/06/16
	/// </summary>
	public partial class BatchDAL:atDAL.ObjectDAL
	{

    	internal BatchDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Batch", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("BatchID", "BatchID"),
		  new System.Data.Common.DataColumnMapping("OfficerID", "OfficerID"),
		  new System.Data.Common.DataColumnMapping("OfficeCode", "OfficeCode"),
		  new System.Data.Common.DataColumnMapping("UserName", "UserName"),
		  new System.Data.Common.DataColumnMapping("Password", "Password"),
		  new System.Data.Common.DataColumnMapping("BatchDate", "BatchDate"),
		  new System.Data.Common.DataColumnMapping("Priority", "Priority"),
		  new System.Data.Common.DataColumnMapping("RunAfterDate", "RunAfterDate"),
		  new System.Data.Common.DataColumnMapping("JobName", "JobName"),
		  new System.Data.Common.DataColumnMapping("Parameters", "Parameters"),
		  new System.Data.Common.DataColumnMapping("StartRunDate", "StartRunDate"),
		  new System.Data.Common.DataColumnMapping("EndRunDate", "EndRunDate"),
		  new System.Data.Common.DataColumnMapping("Completed", "Completed"),
		  new System.Data.Common.DataColumnMapping("Status", "Status"),
		  new System.Data.Common.DataColumnMapping("Message", "Message"),
		  new System.Data.Common.DataColumnMapping("OutputFile", "OutputFile"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[BatchSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[BatchInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@BatchID", SqlDbType.Int, 4, "BatchID"));
			this.sqlInsert.Parameters["@BatchID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficerID", SqlDbType.Int, 4, "OfficerID"));
			this.sqlInsert.Parameters["@OfficerID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeCode", SqlDbType.NVarChar, 6, "OfficeCode"));
			this.sqlInsert.Parameters["@OfficeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@UserName", SqlDbType.NVarChar, 50, "UserName"));
			this.sqlInsert.Parameters["@UserName"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Password", SqlDbType.NVarChar, 50, "Password"));
			this.sqlInsert.Parameters["@Password"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BatchDate", SqlDbType.SmallDateTime, 24, "BatchDate"));
			this.sqlInsert.Parameters["@BatchDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Priority", SqlDbType.TinyInt, 50, "Priority"));
			this.sqlInsert.Parameters["@Priority"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RunAfterDate", SqlDbType.SmallDateTime, 24, "RunAfterDate"));
			this.sqlInsert.Parameters["@RunAfterDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@JobName", SqlDbType.NVarChar, 50, "JobName"));
			this.sqlInsert.Parameters["@JobName"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Parameters", SqlDbType.NVarChar, 2147483647, "Parameters"));
			this.sqlInsert.Parameters["@Parameters"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@StartRunDate", SqlDbType.SmallDateTime, 24, "StartRunDate"));
			this.sqlInsert.Parameters["@StartRunDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EndRunDate", SqlDbType.SmallDateTime, 24, "EndRunDate"));
			this.sqlInsert.Parameters["@EndRunDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Completed", SqlDbType.Bit, 1, "Completed"));
			this.sqlInsert.Parameters["@Completed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Status", SqlDbType.NVarChar, 1, "Status"));
			this.sqlInsert.Parameters["@Status"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Message", SqlDbType.NVarChar, 255, "Message"));
			this.sqlInsert.Parameters["@Message"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OutputFile", SqlDbType.NVarChar, 255, "OutputFile"));
			this.sqlInsert.Parameters["@OutputFile"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			//this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			//this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[BatchUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BatchID", SqlDbType.Int, 4, "BatchID"));
			this.sqlUpdate.Parameters["@BatchID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficerID", SqlDbType.Int, 4, "OfficerID"));
			this.sqlUpdate.Parameters["@OfficerID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeCode", SqlDbType.NVarChar, 6, "OfficeCode"));
			this.sqlUpdate.Parameters["@OfficeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@UserName", SqlDbType.NVarChar, 50, "UserName"));
			this.sqlUpdate.Parameters["@UserName"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Password", SqlDbType.NVarChar, 50, "Password"));
			this.sqlUpdate.Parameters["@Password"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BatchDate", SqlDbType.SmallDateTime, 24, "BatchDate"));
			this.sqlUpdate.Parameters["@BatchDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Priority", SqlDbType.TinyInt, 50, "Priority"));
			this.sqlUpdate.Parameters["@Priority"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@RunAfterDate", SqlDbType.SmallDateTime, 24, "RunAfterDate"));
			this.sqlUpdate.Parameters["@RunAfterDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@JobName", SqlDbType.NVarChar, 50, "JobName"));
			this.sqlUpdate.Parameters["@JobName"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Parameters", SqlDbType.NVarChar, 2147483647, "Parameters"));
			this.sqlUpdate.Parameters["@Parameters"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@StartRunDate", SqlDbType.SmallDateTime, 24, "StartRunDate"));
			this.sqlUpdate.Parameters["@StartRunDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EndRunDate", SqlDbType.SmallDateTime, 24, "EndRunDate"));
			this.sqlUpdate.Parameters["@EndRunDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Completed", SqlDbType.Bit, 1, "Completed"));
			this.sqlUpdate.Parameters["@Completed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Status", SqlDbType.NVarChar, 1, "Status"));
			this.sqlUpdate.Parameters["@Status"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Message", SqlDbType.NVarChar, 255, "Message"));
			this.sqlUpdate.Parameters["@Message"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OutputFile", SqlDbType.NVarChar, 255, "OutputFile"));
			this.sqlUpdate.Parameters["@OutputFile"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[BatchDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BatchID", System.Data.SqlDbType.Int, 4, "BatchID"));
		    this.sqlDelete.Parameters["@BatchID"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

        public appDB.BatchDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            appDB.BatchDataTable dt = new appDB.BatchDataTable();
			Fill(dt);
            return dt;
        }



        public appDB.BatchDataTable Load(int BatchID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[BatchSelectByBatchID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@BatchID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@BatchID"].Value=BatchID;

            appDB.BatchDataTable dt = new appDB.BatchDataTable();
			Fill(dt);
            return dt;
		}


        public appDB.BatchDataTable LoadByOfficeCode(string OfficeCode)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[BatchSelectByOfficeCode]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeCode", System.Data.SqlDbType.NVarChar, 6, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficeCode"].Value=OfficeCode;

            appDB.BatchDataTable dt = new appDB.BatchDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
