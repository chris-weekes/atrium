using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on SSTCaseMatter table 
	/// in lawmatedev database
	/// on 09/24/2012
	/// </summary>
	public partial class SSTCaseMatterDAL:atDAL.ObjectDAL
	{

    	internal SSTCaseMatterDAL(atriumDALManager pDALManager) :base(pDALManager)
		{
	        Init();
		}

        private void Init()
        {
            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {

                new System.Data.Common.DataTableMapping("Table", "SSTCaseMatter", new System.Data.Common.DataColumnMapping[] {
		  
                    new System.Data.Common.DataColumnMapping("SSTCaseMatterId", "SSTCaseMatterId"),
                    new System.Data.Common.DataColumnMapping("SSTCaseId", "SSTCaseId"),
                    new System.Data.Common.DataColumnMapping("FileId", "FileId"),
                    new System.Data.Common.DataColumnMapping("ProgramId", "ProgramId"),
                    new System.Data.Common.DataColumnMapping("AccountId", "AccountId"),
                    new System.Data.Common.DataColumnMapping("IssueId", "IssueId"),
                    new System.Data.Common.DataColumnMapping("LegislationId", "LegislationId"),
                    new System.Data.Common.DataColumnMapping("Description", "Description"),
                    new System.Data.Common.DataColumnMapping("OutcomeId", "OutcomeId"),
                    new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
                    new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
                    new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
                    new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
                    new System.Data.Common.DataColumnMapping("ts", "ts"),
                    new System.Data.Common.DataColumnMapping("ConfirmedByMemberId", "ConfirmedByMemberId"), 
                    new System.Data.Common.DataColumnMapping("AcceptIssue", "AcceptIssue"),

			    })
            });

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[SSTCaseMatterSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[SSTCaseMatterInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;

            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@SSTCaseMatterId", SqlDbType.Int, 10, "SSTCaseMatterId"));
            this.sqlInsert.Parameters["@SSTCaseMatterId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SSTCaseId", SqlDbType.Int, 10, "SSTCaseId"));
            this.sqlInsert.Parameters["@SSTCaseId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlInsert.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ProgramId", SqlDbType.Int, 10, "ProgramId"));
            this.sqlInsert.Parameters["@ProgramId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AccountId", SqlDbType.Int, 10, "AccountId"));
            this.sqlInsert.Parameters["@AccountId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IssueId", SqlDbType.Int, 10, "IssueId"));
            this.sqlInsert.Parameters["@IssueId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LegislationId", SqlDbType.Int, 10, "LegislationId"));
            this.sqlInsert.Parameters["@LegislationId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Description", SqlDbType.NVarChar, 1000, "Description"));
            this.sqlInsert.Parameters["@Description"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OutcomeId", SqlDbType.Int, 10, "OutcomeId"));
            this.sqlInsert.Parameters["@OutcomeId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ConfirmedByMemberId", SqlDbType.Int, 10, "ConfirmedByMemberId"));
            this.sqlInsert.Parameters["@ConfirmedByMemberId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AcceptIssue", SqlDbType.Bit, 1, "AcceptIssue"));
            this.sqlInsert.Parameters["@AcceptIssue"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[SSTCaseMatterUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;

            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@SSTCaseMatterId", SqlDbType.Int, 10, "SSTCaseMatterId"));
            this.sqlUpdate.Parameters["@SSTCaseMatterId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SSTCaseId", SqlDbType.Int, 10, "SSTCaseId"));
            this.sqlUpdate.Parameters["@SSTCaseId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlUpdate.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ProgramId", SqlDbType.Int, 10, "ProgramId"));
            this.sqlUpdate.Parameters["@ProgramId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AccountId", SqlDbType.Int, 10, "AccountId"));
            this.sqlUpdate.Parameters["@AccountId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IssueId", SqlDbType.Int, 10, "IssueId"));
            this.sqlUpdate.Parameters["@IssueId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LegislationId", SqlDbType.Int, 10, "LegislationId"));
            this.sqlUpdate.Parameters["@LegislationId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Description", SqlDbType.NVarChar, 1000, "Description"));
            this.sqlUpdate.Parameters["@Description"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OutcomeId", SqlDbType.Int, 10, "OutcomeId"));
            this.sqlUpdate.Parameters["@OutcomeId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ConfirmedByMemberId", SqlDbType.Int, 10, "ConfirmedByMemberId"));
            this.sqlUpdate.Parameters["@ConfirmedByMemberId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AcceptIssue", SqlDbType.Bit, 1, "AcceptIssue"));
            this.sqlUpdate.Parameters["@AcceptIssue"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[SSTCaseMatterDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;

            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTCaseMatterId", System.Data.SqlDbType.Int, 4, "SSTCaseMatterId"));
            this.sqlDelete.Parameters["@SSTCaseMatterId"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;

        }
        
		public SST.SSTCaseMatterDataTable Load()
		{
			this.sqlDa.SelectCommand = sqlSelectAll;

            SST.SSTCaseMatterDataTable dt = new SST.SSTCaseMatterDataTable();
			Fill(dt);
            return dt;
        }

		public SST.SSTCaseMatterDataTable Load(int SSTCaseMatterId)
		{
			this.sqlDa.SelectCommand = sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTCaseMatterSelectBySSTCaseMatterId]";

			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTCaseMatterId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters["@SSTCaseMatterId"].Value = SSTCaseMatterId;

            SST.SSTCaseMatterDataTable dt = new SST.SSTCaseMatterDataTable();
			Fill(dt);
            return dt;
		}

        public SST.SSTCaseMatterDataTable LoadBySSTCaseId(int SSTCaseId)
		{
			this.sqlDa.SelectCommand = sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[SSTCaseMatterSelectBySSTCaseId]";

			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTCaseId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@SSTCaseId"].Value=SSTCaseId;

            SST.SSTCaseMatterDataTable dt = new SST.SSTCaseMatterDataTable();
			Fill(dt);
            return dt;
		}

    }

}
