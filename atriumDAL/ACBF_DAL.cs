using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
    /// <summary>
    /// Class generated by sgen 
    /// based on ACBF table 
    /// in lawmate database
    /// on 2/6/2007
    /// </summary>
    public partial class ACBFDAL:atDAL.ObjectDAL
    {

        internal ACBFDAL(atriumDALManager pDALManager) :base(pDALManager)
        {
            Init();
        }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
          new System.Data.Common.DataTableMapping("Table", "ACBF", new System.Data.Common.DataColumnMapping[] {
          
          new System.Data.Common.DataColumnMapping("ACBFId", "ACBFId"),
          new System.Data.Common.DataColumnMapping("BFCode", "BFCode"),
          new System.Data.Common.DataColumnMapping("BFDate", "BFDate"),
          new System.Data.Common.DataColumnMapping("BFDescriptionEng", "BFDescriptionEng"),
          new System.Data.Common.DataColumnMapping("BFDescriptionFre", "BFDescriptionFre"),
          new System.Data.Common.DataColumnMapping("DefaultBFOfficer", "DefaultBFOfficer"),
          new System.Data.Common.DataColumnMapping("DefaultForOffice", "DefaultForOffice"),
          new System.Data.Common.DataColumnMapping("RoleCode", "RoleCode"),
          new System.Data.Common.DataColumnMapping("MonitorIncomplete", "MonitorIncomplete"),
          new System.Data.Common.DataColumnMapping("BFType", "BFType"),
          new System.Data.Common.DataColumnMapping("isMail", "isMail"),
          new System.Data.Common.DataColumnMapping("ReadOnly", "ReadOnly"),
          new System.Data.Common.DataColumnMapping("Obsolete", "Obsolete"),
          new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
          new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
          new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
          new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
          new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("AllowManualComplete", "AllowManualComplete"),
          new System.Data.Common.DataColumnMapping("RoleCodeLead", "RoleCodeLead"),
            })});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection=myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[ACBFSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection=myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[ACBFInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@ACBFId", SqlDbType.Int, 10, "ACBFId"));
            this.sqlInsert.Parameters["@ACBFId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BFCode", SqlDbType.NVarChar, 4, "BFCode"));
            this.sqlInsert.Parameters["@BFCode"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BFDate", SqlDbType.NVarChar, 50, "BFDate"));
            this.sqlInsert.Parameters["@BFDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BFDescriptionEng", SqlDbType.NVarChar, 200, "BFDescriptionEng"));
            this.sqlInsert.Parameters["@BFDescriptionEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BFDescriptionFre", SqlDbType.NVarChar, 200, "BFDescriptionFre"));
            this.sqlInsert.Parameters["@BFDescriptionFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DefaultBFOfficer", SqlDbType.NVarChar, 10, "DefaultBFOfficer"));
            this.sqlInsert.Parameters["@DefaultBFOfficer"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DefaultForOffice", SqlDbType.NVarChar, 10, "DefaultForOffice"));
            this.sqlInsert.Parameters["@DefaultForOffice"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@MonitorIncomplete", SqlDbType.Bit, 1, "MonitorIncomplete"));
            this.sqlInsert.Parameters["@MonitorIncomplete"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RoleCode", SqlDbType.NVarChar, 4, "RoleCode"));
            this.sqlInsert.Parameters["@RoleCode"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@BFType", SqlDbType.Int, 10, "BFType"));
            this.sqlInsert.Parameters["@BFType"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@isMail", SqlDbType.Bit, 1, "isMail"));
            this.sqlInsert.Parameters["@isMail"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
            this.sqlInsert.Parameters["@ReadOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
            this.sqlInsert.Parameters["@Obsolete"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AllowManualComplete", SqlDbType.Bit, 1, "AllowManualComplete"));
            this.sqlInsert.Parameters["@AllowManualComplete"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RoleCodeLead", SqlDbType.NVarChar, 4, "RoleCodeLead"));
            this.sqlInsert.Parameters["@RoleCodeLead"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[ACBFUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@ACBFId", SqlDbType.Int, 10, "ACBFId"));
            this.sqlUpdate.Parameters["@ACBFId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BFCode", SqlDbType.NVarChar, 4, "BFCode"));
            this.sqlUpdate.Parameters["@BFCode"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BFDate", SqlDbType.NVarChar, 50, "BFDate"));
            this.sqlUpdate.Parameters["@BFDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BFDescriptionEng", SqlDbType.NVarChar, 200, "BFDescriptionEng"));
            this.sqlUpdate.Parameters["@BFDescriptionEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BFDescriptionFre", SqlDbType.NVarChar, 200, "BFDescriptionFre"));
            this.sqlUpdate.Parameters["@BFDescriptionFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DefaultBFOfficer", SqlDbType.NVarChar, 10, "DefaultBFOfficer"));
            this.sqlUpdate.Parameters["@DefaultBFOfficer"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DefaultForOffice", SqlDbType.NVarChar, 10, "DefaultForOffice"));
            this.sqlUpdate.Parameters["@DefaultForOffice"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RoleCode", SqlDbType.NVarChar, 4, "RoleCode"));
            this.sqlUpdate.Parameters["@RoleCode"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@MonitorIncomplete", SqlDbType.Bit, 1, "MonitorIncomplete"));
            this.sqlUpdate.Parameters["@MonitorIncomplete"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@BFType", SqlDbType.Int, 10, "BFType"));
            this.sqlUpdate.Parameters["@BFType"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@isMail", SqlDbType.Bit, 1, "isMail"));
            this.sqlUpdate.Parameters["@isMail"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
            this.sqlUpdate.Parameters["@ReadOnly"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
            this.sqlUpdate.Parameters["@Obsolete"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AllowManualComplete", SqlDbType.Bit, 1, "AllowManualComplete"));
            this.sqlUpdate.Parameters["@AllowManualComplete"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RoleCodeLead", SqlDbType.NVarChar, 4, "RoleCodeLead"));
            this.sqlUpdate.Parameters["@RoleCodeLead"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[ACBFDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACBFId", System.Data.SqlDbType.Int, 4, "ACBFId"));
            this.sqlDelete.Parameters["@ACBFId"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }

        public ActivityConfig.ACBFDataTable Load()
        {
            this.sqlDa.SelectCommand = sqlSelectAll;

            ActivityConfig.ACBFDataTable dt = new ActivityConfig.ACBFDataTable();
            Fill(dt);
            return dt;
        }



        public ActivityConfig.ACBFDataTable Load(int ACBFId)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[ACBFSelectByACBFId]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ACBFId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlSelect.Parameters["@ACBFId"].Value = ACBFId;

            ActivityConfig.ACBFDataTable dt = new ActivityConfig.ACBFDataTable();
            Fill(dt);
            return dt;
        }


        public ActivityConfig.ACBFDataTable LoadByRoleCode(string RoleCode)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[ACBFSelectByRoleCode]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RoleCode", System.Data.SqlDbType.NVarChar, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters["@RoleCode"].Value = RoleCode;

            ActivityConfig.ACBFDataTable dt = new ActivityConfig.ACBFDataTable();
            Fill(dt);
            return dt;
        }




    }


}
