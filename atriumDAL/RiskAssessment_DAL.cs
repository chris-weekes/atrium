using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on RiskAssessment table 
	/// in lawmate database
	/// on 3/16/2007
	/// </summary>
	public partial class RiskAssessmentDAL:atDAL.ObjectDAL
	{

    	internal RiskAssessmentDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "RiskAssessment", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("RiskAssessId", "RiskAssessId"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("AssessmentDate", "AssessmentDate"),
		  new System.Data.Common.DataColumnMapping("AssessedById", "AssessedById"),
		  new System.Data.Common.DataColumnMapping("ContingentLiability", "ContingentLiability"),
		  new System.Data.Common.DataColumnMapping("Complexity", "Complexity"),
		  new System.Data.Common.DataColumnMapping("Status", "Status"),
		  new System.Data.Common.DataColumnMapping("PossibilityOfSettlement", "PossibilityOfSettlement"),
		  new System.Data.Common.DataColumnMapping("SettlementEst", "SettlementEst"),
		  new System.Data.Common.DataColumnMapping("AmountClaimed", "AmountClaimed"),
		  new System.Data.Common.DataColumnMapping("Likelihood", "Likelihood"),
		  new System.Data.Common.DataColumnMapping("Impact", "Impact"),
		  new System.Data.Common.DataColumnMapping("RiskLevel", "RiskLevel"),
		  new System.Data.Common.DataColumnMapping("BackgroundDetail", "BackgroundDetail"),
		  new System.Data.Common.DataColumnMapping("AssessmentDetail", "AssessmentDetail"),
		  new System.Data.Common.DataColumnMapping("PreDecImpactPlan", "PreDecImpactPlan"),
		  new System.Data.Common.DataColumnMapping("PostFavorableDec", "PostFavorableDec"),
		  new System.Data.Common.DataColumnMapping("PostAdverseDec", "PostAdverseDec"),
		  new System.Data.Common.DataColumnMapping("CourtName", "CourtName"),
		  new System.Data.Common.DataColumnMapping("HearingDate", "HearingDate"),
		  new System.Data.Common.DataColumnMapping("DecisionDate", "DecisionDate"),
		  new System.Data.Common.DataColumnMapping("StatusComment", "StatusComment"),
		  new System.Data.Common.DataColumnMapping("AmountClaimedND", "AmountClaimedND"),
		  new System.Data.Common.DataColumnMapping("AmountClaimedComment", "AmountClaimedComment"),
		  new System.Data.Common.DataColumnMapping("ContigentLiabilityND", "ContigentLiabilityND"),
		  new System.Data.Common.DataColumnMapping("ContigentLiabilityComment", "ContigentLiabilityComment"),
		  new System.Data.Common.DataColumnMapping("ReferredToCommittee", "ReferredToCommittee"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("ContingentGain", "ContingentGain"),
          new System.Data.Common.DataColumnMapping("SubjectToContingentLiability", "SubjectToContingentLiability"),
          new System.Data.Common.DataColumnMapping("CourtFileNumber", "CourtFileNumber"),
          new System.Data.Common.DataColumnMapping("StatementOfClaimDate", "StatementOfClaimDate"),
          new System.Data.Common.DataColumnMapping("CLRStartDate", "CLRStartDate"),
          new System.Data.Common.DataColumnMapping("CLREndDate", "CLREndDate"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[RiskAssessmentSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[RiskAssessmentInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@RiskAssessId", SqlDbType.Int, 10, "RiskAssessId"));
			this.sqlInsert.Parameters["@RiskAssessId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlInsert.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AssessmentDate", SqlDbType.SmallDateTime, 24, "AssessmentDate"));
			this.sqlInsert.Parameters["@AssessmentDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AssessedById", SqlDbType.Int, 10, "AssessedById"));
			this.sqlInsert.Parameters["@AssessedById"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ContingentLiability", SqlDbType.Money, 19, "ContingentLiability"));
			this.sqlInsert.Parameters["@ContingentLiability"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Complexity", SqlDbType.TinyInt, 50, "Complexity"));
			this.sqlInsert.Parameters["@Complexity"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Status", SqlDbType.NVarChar, 2, "Status"));
			this.sqlInsert.Parameters["@Status"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PossibilityOfSettlement", SqlDbType.TinyInt, 50, "PossibilityOfSettlement"));
			this.sqlInsert.Parameters["@PossibilityOfSettlement"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@SettlementEst", SqlDbType.Money, 19, "SettlementEst"));
			this.sqlInsert.Parameters["@SettlementEst"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AmountClaimed", SqlDbType.Money, 19, "AmountClaimed"));
			this.sqlInsert.Parameters["@AmountClaimed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Likelihood", SqlDbType.TinyInt, 50, "Likelihood"));
			this.sqlInsert.Parameters["@Likelihood"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Impact", SqlDbType.TinyInt, 50, "Impact"));
			this.sqlInsert.Parameters["@Impact"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RiskLevel", SqlDbType.TinyInt, 50, "RiskLevel"));
			this.sqlInsert.Parameters["@RiskLevel"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BackgroundDetail", SqlDbType.NVarChar, 2147483647, "BackgroundDetail"));
			this.sqlInsert.Parameters["@BackgroundDetail"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AssessmentDetail", SqlDbType.NVarChar, 2147483647, "AssessmentDetail"));
			this.sqlInsert.Parameters["@AssessmentDetail"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PreDecImpactPlan", SqlDbType.NVarChar, 2147483647, "PreDecImpactPlan"));
			this.sqlInsert.Parameters["@PreDecImpactPlan"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PostFavorableDec", SqlDbType.NVarChar, 2147483647, "PostFavorableDec"));
			this.sqlInsert.Parameters["@PostFavorableDec"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PostAdverseDec", SqlDbType.NVarChar, 2147483647, "PostAdverseDec"));
			this.sqlInsert.Parameters["@PostAdverseDec"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CourtName", SqlDbType.NVarChar, 255, "CourtName"));
			this.sqlInsert.Parameters["@CourtName"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@HearingDate", SqlDbType.SmallDateTime, 24, "HearingDate"));
			this.sqlInsert.Parameters["@HearingDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DecisionDate", SqlDbType.SmallDateTime, 24, "DecisionDate"));
			this.sqlInsert.Parameters["@DecisionDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@StatusComment", SqlDbType.NVarChar, 255, "StatusComment"));
			this.sqlInsert.Parameters["@StatusComment"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AmountClaimedND", SqlDbType.Bit, 1, "AmountClaimedND"));
			this.sqlInsert.Parameters["@AmountClaimedND"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AmountClaimedComment", SqlDbType.NVarChar, 255, "AmountClaimedComment"));
			this.sqlInsert.Parameters["@AmountClaimedComment"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ContigentLiabilityND", SqlDbType.Bit, 1, "ContigentLiabilityND"));
			this.sqlInsert.Parameters["@ContigentLiabilityND"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ContigentLiabilityComment", SqlDbType.NVarChar, 255, "ContigentLiabilityComment"));
			this.sqlInsert.Parameters["@ContigentLiabilityComment"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ReferredToCommittee", SqlDbType.Bit, 1, "ReferredToCommittee"));
			this.sqlInsert.Parameters["@ReferredToCommittee"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ContingentGain", SqlDbType.Money, 19, "ContingentGain"));
            this.sqlInsert.Parameters["@ContingentGain"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SubjectToContingentLiability", SqlDbType.Bit, 1, "SubjectToContingentLiability"));
            this.sqlInsert.Parameters["@SubjectToContingentLiability"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CourtFileNumber", SqlDbType.NVarChar, 50, "CourtFileNumber"));
            this.sqlInsert.Parameters["@CourtFileNumber"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@StatementOfClaimDate", SqlDbType.SmallDateTime, 24, "StatementOfClaimDate"));
            this.sqlInsert.Parameters["@StatementOfClaimDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CLRStartDate", SqlDbType.SmallDateTime, 24, "CLRStartDate"));
            this.sqlInsert.Parameters["@CLRStartDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@CLREndDate", SqlDbType.SmallDateTime, 24, "CLREndDate"));
            this.sqlInsert.Parameters["@CLREndDate"].SourceVersion = DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[RiskAssessmentUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@RiskAssessId", SqlDbType.Int, 10, "RiskAssessId"));
			this.sqlUpdate.Parameters["@RiskAssessId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
			this.sqlUpdate.Parameters["@FileId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AssessmentDate", SqlDbType.SmallDateTime, 24, "AssessmentDate"));
			this.sqlUpdate.Parameters["@AssessmentDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AssessedById", SqlDbType.Int, 10, "AssessedById"));
			this.sqlUpdate.Parameters["@AssessedById"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ContingentLiability", SqlDbType.Money, 19, "ContingentLiability"));
			this.sqlUpdate.Parameters["@ContingentLiability"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Complexity", SqlDbType.TinyInt, 50, "Complexity"));
			this.sqlUpdate.Parameters["@Complexity"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Status", SqlDbType.NVarChar, 2, "Status"));
			this.sqlUpdate.Parameters["@Status"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PossibilityOfSettlement", SqlDbType.TinyInt, 50, "PossibilityOfSettlement"));
			this.sqlUpdate.Parameters["@PossibilityOfSettlement"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SettlementEst", SqlDbType.Money, 19, "SettlementEst"));
			this.sqlUpdate.Parameters["@SettlementEst"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AmountClaimed", SqlDbType.Money, 19, "AmountClaimed"));
			this.sqlUpdate.Parameters["@AmountClaimed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Likelihood", SqlDbType.TinyInt, 50, "Likelihood"));
			this.sqlUpdate.Parameters["@Likelihood"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Impact", SqlDbType.TinyInt, 50, "Impact"));
			this.sqlUpdate.Parameters["@Impact"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@RiskLevel", SqlDbType.TinyInt, 50, "RiskLevel"));
			this.sqlUpdate.Parameters["@RiskLevel"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BackgroundDetail", SqlDbType.NVarChar, 2147483647, "BackgroundDetail"));
			this.sqlUpdate.Parameters["@BackgroundDetail"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AssessmentDetail", SqlDbType.NVarChar, 2147483647, "AssessmentDetail"));
			this.sqlUpdate.Parameters["@AssessmentDetail"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PreDecImpactPlan", SqlDbType.NVarChar, 2147483647, "PreDecImpactPlan"));
			this.sqlUpdate.Parameters["@PreDecImpactPlan"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PostFavorableDec", SqlDbType.NVarChar, 2147483647, "PostFavorableDec"));
			this.sqlUpdate.Parameters["@PostFavorableDec"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PostAdverseDec", SqlDbType.NVarChar, 2147483647, "PostAdverseDec"));
			this.sqlUpdate.Parameters["@PostAdverseDec"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CourtName", SqlDbType.NVarChar, 255, "CourtName"));
			this.sqlUpdate.Parameters["@CourtName"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@HearingDate", SqlDbType.SmallDateTime, 24, "HearingDate"));
			this.sqlUpdate.Parameters["@HearingDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DecisionDate", SqlDbType.SmallDateTime, 24, "DecisionDate"));
			this.sqlUpdate.Parameters["@DecisionDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@StatusComment", SqlDbType.NVarChar, 255, "StatusComment"));
			this.sqlUpdate.Parameters["@StatusComment"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AmountClaimedND", SqlDbType.Bit, 1, "AmountClaimedND"));
			this.sqlUpdate.Parameters["@AmountClaimedND"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AmountClaimedComment", SqlDbType.NVarChar, 255, "AmountClaimedComment"));
			this.sqlUpdate.Parameters["@AmountClaimedComment"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ContigentLiabilityND", SqlDbType.Bit, 1, "ContigentLiabilityND"));
			this.sqlUpdate.Parameters["@ContigentLiabilityND"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ContigentLiabilityComment", SqlDbType.NVarChar, 255, "ContigentLiabilityComment"));
			this.sqlUpdate.Parameters["@ContigentLiabilityComment"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ReferredToCommittee", SqlDbType.Bit, 1, "ReferredToCommittee"));
			this.sqlUpdate.Parameters["@ReferredToCommittee"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ContingentGain", SqlDbType.Money, 19, "ContingentGain"));
            this.sqlUpdate.Parameters["@ContingentGain"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SubjectToContingentLiability", SqlDbType.Bit, 1, "SubjectToContingentLiability"));
            this.sqlUpdate.Parameters["@SubjectToContingentLiability"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CourtFileNumber", SqlDbType.NVarChar, 50, "CourtFileNumber"));
            this.sqlUpdate.Parameters["@CourtFileNumber"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@StatementOfClaimDate", SqlDbType.SmallDateTime, 24, "StatementOfClaimDate"));
            this.sqlUpdate.Parameters["@StatementOfClaimDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CLRStartDate", SqlDbType.SmallDateTime, 24, "CLRStartDate"));
            this.sqlUpdate.Parameters["@CLRStartDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@CLREndDate", SqlDbType.SmallDateTime, 24, "CLREndDate"));
            this.sqlUpdate.Parameters["@CLREndDate"].SourceVersion = DataRowVersion.Current;
            
			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[RiskAssessmentDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RiskAssessId", System.Data.SqlDbType.Int, 4, "RiskAssessId"));
		    this.sqlDelete.Parameters["@RiskAssessId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public atriumDB.RiskAssessmentDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            atriumDB.RiskAssessmentDataTable dt = new atriumDB.RiskAssessmentDataTable();
			Fill(dt);
            return dt;
        }



        public atriumDB.RiskAssessmentDataTable Load(int RiskAssessId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[RiskAssessmentSelectByRiskAssessId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RiskAssessId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@RiskAssessId"].Value=RiskAssessId;

            atriumDB.RiskAssessmentDataTable dt = new atriumDB.RiskAssessmentDataTable();
			Fill(dt);
            return dt;
		}



	}
	

}
