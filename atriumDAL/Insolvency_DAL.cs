using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on Insolvency table 
	/// in lawmate database
	/// on 2006/06/16
	/// </summary>
	public partial class InsolvencyDAL:atDAL.ObjectDAL
	{

    	internal InsolvencyDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Insolvency", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("InsolvencyID", "InsolvencyID"),
		  new System.Data.Common.DataColumnMapping("FileID", "FileID"),
		  new System.Data.Common.DataColumnMapping("OfficeID", "OfficeID"),
		  new System.Data.Common.DataColumnMapping("InsolvencyType", "InsolvencyType"),
		  new System.Data.Common.DataColumnMapping("PreviousInsolvencyDate", "PreviousInsolvencyDate"),
		  new System.Data.Common.DataColumnMapping("StayOfProceeding", "StayOfProceeding"),
		  new System.Data.Common.DataColumnMapping("InsolvencyFiledDate", "InsolvencyFiledDate"),
		  new System.Data.Common.DataColumnMapping("AcceptanceDate", "AcceptanceDate"),
		  new System.Data.Common.DataColumnMapping("InsolvencyFulfilledDate", "InsolvencyFulfilledDate"),
		  new System.Data.Common.DataColumnMapping("ProvenClaimAmount", "ProvenClaimAmount"),
		  new System.Data.Common.DataColumnMapping("DefaultDate", "DefaultDate"),
		  new System.Data.Common.DataColumnMapping("CSLEligibleForDischargeDate", "CSLEligibleForDischargeDate"),
		  new System.Data.Common.DataColumnMapping("DateofTrusteeDischarge", "DateofTrusteeDischarge"),
		  new System.Data.Common.DataColumnMapping("DebtorDischargeNonCSLDebtDate", "DebtorDischargeNonCSLDebtDate"),
		  new System.Data.Common.DataColumnMapping("CSLNonDischargeable", "CSLNonDischargeable"),
		  new System.Data.Common.DataColumnMapping("ProofOfClaimFiledDate", "ProofOfClaimFiledDate"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("InsolvencyPeriod", "InsolvencyPeriod"),
            })});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[InsolvencySelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[InsolvencyInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@InsolvencyID", SqlDbType.Int, 4, "InsolvencyID"));
			this.sqlInsert.Parameters["@InsolvencyID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileID", SqlDbType.Int, 4, "FileID"));
			this.sqlInsert.Parameters["@FileID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeID", SqlDbType.Int, 4, "OfficeID"));
			this.sqlInsert.Parameters["@OfficeID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@InsolvencyType", SqlDbType.NVarChar, 1, "InsolvencyType"));
			this.sqlInsert.Parameters["@InsolvencyType"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@PreviousInsolvencyDate", SqlDbType.SmallDateTime, 24, "PreviousInsolvencyDate"));
			this.sqlInsert.Parameters["@PreviousInsolvencyDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@StayOfProceeding", SqlDbType.Bit, 1, "StayOfProceeding"));
			this.sqlInsert.Parameters["@StayOfProceeding"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@InsolvencyFiledDate", SqlDbType.SmallDateTime, 24, "InsolvencyFiledDate"));
			this.sqlInsert.Parameters["@InsolvencyFiledDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AcceptanceDate", SqlDbType.SmallDateTime, 24, "AcceptanceDate"));
			this.sqlInsert.Parameters["@AcceptanceDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@InsolvencyFulfilledDate", SqlDbType.SmallDateTime, 24, "InsolvencyFulfilledDate"));
			this.sqlInsert.Parameters["@InsolvencyFulfilledDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ProvenClaimAmount", SqlDbType.Money, 19, "ProvenClaimAmount"));
			this.sqlInsert.Parameters["@ProvenClaimAmount"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DefaultDate", SqlDbType.SmallDateTime, 24, "DefaultDate"));
			this.sqlInsert.Parameters["@DefaultDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CSLEligibleForDischargeDate", SqlDbType.SmallDateTime, 24, "CSLEligibleForDischargeDate"));
			this.sqlInsert.Parameters["@CSLEligibleForDischargeDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DateofTrusteeDischarge", SqlDbType.SmallDateTime, 24, "DateofTrusteeDischarge"));
			this.sqlInsert.Parameters["@DateofTrusteeDischarge"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DebtorDischargeNonCSLDebtDate", SqlDbType.SmallDateTime, 24, "DebtorDischargeNonCSLDebtDate"));
			this.sqlInsert.Parameters["@DebtorDischargeNonCSLDebtDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CSLNonDischargeable", SqlDbType.Bit, 1, "CSLNonDischargeable"));
			this.sqlInsert.Parameters["@CSLNonDischargeable"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ProofOfClaimFiledDate", SqlDbType.SmallDateTime, 24, "ProofOfClaimFiledDate"));
			this.sqlInsert.Parameters["@ProofOfClaimFiledDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@InsolvencyPeriod", SqlDbType.Int, 4, "InsolvencyPeriod"));
            this.sqlInsert.Parameters["@InsolvencyPeriod"].SourceVersion = DataRowVersion.Current;
            //this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            //this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[InsolvencyUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@InsolvencyID", SqlDbType.Int, 4, "InsolvencyID"));
			this.sqlUpdate.Parameters["@InsolvencyID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileID", SqlDbType.Int, 4, "FileID"));
			this.sqlUpdate.Parameters["@FileID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeID", SqlDbType.Int, 4, "OfficeID"));
			this.sqlUpdate.Parameters["@OfficeID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@InsolvencyType", SqlDbType.NVarChar, 1, "InsolvencyType"));
			this.sqlUpdate.Parameters["@InsolvencyType"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@PreviousInsolvencyDate", SqlDbType.SmallDateTime, 24, "PreviousInsolvencyDate"));
			this.sqlUpdate.Parameters["@PreviousInsolvencyDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@StayOfProceeding", SqlDbType.Bit, 1, "StayOfProceeding"));
			this.sqlUpdate.Parameters["@StayOfProceeding"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@InsolvencyFiledDate", SqlDbType.SmallDateTime, 24, "InsolvencyFiledDate"));
			this.sqlUpdate.Parameters["@InsolvencyFiledDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AcceptanceDate", SqlDbType.SmallDateTime, 24, "AcceptanceDate"));
			this.sqlUpdate.Parameters["@AcceptanceDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@InsolvencyFulfilledDate", SqlDbType.SmallDateTime, 24, "InsolvencyFulfilledDate"));
			this.sqlUpdate.Parameters["@InsolvencyFulfilledDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ProvenClaimAmount", SqlDbType.Money, 19, "ProvenClaimAmount"));
			this.sqlUpdate.Parameters["@ProvenClaimAmount"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DefaultDate", SqlDbType.SmallDateTime, 24, "DefaultDate"));
			this.sqlUpdate.Parameters["@DefaultDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CSLEligibleForDischargeDate", SqlDbType.SmallDateTime, 24, "CSLEligibleForDischargeDate"));
			this.sqlUpdate.Parameters["@CSLEligibleForDischargeDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DateofTrusteeDischarge", SqlDbType.SmallDateTime, 24, "DateofTrusteeDischarge"));
			this.sqlUpdate.Parameters["@DateofTrusteeDischarge"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DebtorDischargeNonCSLDebtDate", SqlDbType.SmallDateTime, 24, "DebtorDischargeNonCSLDebtDate"));
			this.sqlUpdate.Parameters["@DebtorDischargeNonCSLDebtDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CSLNonDischargeable", SqlDbType.Bit, 1, "CSLNonDischargeable"));
			this.sqlUpdate.Parameters["@CSLNonDischargeable"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ProofOfClaimFiledDate", SqlDbType.SmallDateTime, 24, "ProofOfClaimFiledDate"));
			this.sqlUpdate.Parameters["@ProofOfClaimFiledDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@InsolvencyPeriod", SqlDbType.Int, 4, "InsolvencyPeriod"));
            this.sqlUpdate.Parameters["@InsolvencyPeriod"].SourceVersion = DataRowVersion.Current;
            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[InsolvencyDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InsolvencyID", System.Data.SqlDbType.Int, 4, "InsolvencyID"));
		    this.sqlDelete.Parameters["@InsolvencyID"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		public CLAS.InsolvencyDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            CLAS.InsolvencyDataTable dt=new CLAS.InsolvencyDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public CLAS.InsolvencyDataTable Load(int InsolvencyID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[InsolvencySelectByInsolvencyID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@InsolvencyID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@InsolvencyID"].Value=InsolvencyID;

            CLAS.InsolvencyDataTable dt=new CLAS.InsolvencyDataTable();
			Fill(dt);
            return dt;
		}


		public CLAS.InsolvencyDataTable LoadByFileID(int FileID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[InsolvencySelectByFileID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileID"].Value=FileID;

            CLAS.InsolvencyDataTable dt=new CLAS.InsolvencyDataTable();
			Fill(dt);
            return dt;
		}



		public CLAS.InsolvencyDataTable LoadByOfficeID(int OfficeID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[InsolvencySelectByOfficeID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficeID"].Value=OfficeID;

            CLAS.InsolvencyDataTable dt=new CLAS.InsolvencyDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
