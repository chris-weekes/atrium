using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on Disbursement table 
	/// in lawmate database
	/// on 2006/06/16
	/// </summary>
	public partial class DisbursementDAL:atDAL.ObjectDAL
	{

    	internal DisbursementDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Disbursement", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("DisbId", "DisbId"),
		  new System.Data.Common.DataColumnMapping("ActivityID", "ActivityID"),
		  new System.Data.Common.DataColumnMapping("FileID", "FileID"),
		  new System.Data.Common.DataColumnMapping("IRPId", "IRPId"),
		  new System.Data.Common.DataColumnMapping("OfficeId", "OfficeId"),
		  new System.Data.Common.DataColumnMapping("DisbDate", "DisbDate"),
		  new System.Data.Common.DataColumnMapping("DisbTaxExempt", "DisbTaxExempt"),
		  new System.Data.Common.DataColumnMapping("DisbTaxable", "DisbTaxable"),
		  new System.Data.Common.DataColumnMapping("DisbTax", "DisbTax"),
		  new System.Data.Common.DataColumnMapping("Taxed", "Taxed"),
		  new System.Data.Common.DataColumnMapping("Final", "Final"),
		  new System.Data.Common.DataColumnMapping("Posted", "Posted"),
		  new System.Data.Common.DataColumnMapping("Comment", "Comment"),
		  new System.Data.Common.DataColumnMapping("DisbType", "DisbType"),
		  new System.Data.Common.DataColumnMapping("SRPDate", "SRPDate"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
          new System.Data.Common.DataColumnMapping("TaxRateId", "TaxRateId"),
            })});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[DisbursementSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[DisbursementInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbId", SqlDbType.Int, 4, "DisbId"));
			this.sqlInsert.Parameters["@DisbId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ActivityID", SqlDbType.Int, 4, "ActivityID"));
			this.sqlInsert.Parameters["@ActivityID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FileID", SqlDbType.Int, 4, "FileID"));
			this.sqlInsert.Parameters["@FileID"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@IRPId", SqlDbType.Int, 4, "IRPId"));
			this.sqlInsert.Parameters["@IRPId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 4, "OfficeId"));
			this.sqlInsert.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbDate", SqlDbType.SmallDateTime, 24, "DisbDate"));
			this.sqlInsert.Parameters["@DisbDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbTaxExempt", SqlDbType.Money, 10, "DisbTaxExempt"));
			this.sqlInsert.Parameters["@DisbTaxExempt"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbTaxable", SqlDbType.Money, 10, "DisbTaxable"));
			this.sqlInsert.Parameters["@DisbTaxable"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbTax", SqlDbType.Money, 10, "DisbTax"));
			this.sqlInsert.Parameters["@DisbTax"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Taxed", SqlDbType.Bit, 1, "Taxed"));
			this.sqlInsert.Parameters["@Taxed"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Final", SqlDbType.Bit, 1, "Final"));
			this.sqlInsert.Parameters["@Final"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Posted", SqlDbType.Bit, 1, "Posted"));
			this.sqlInsert.Parameters["@Posted"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Comment", SqlDbType.NVarChar, 255, "Comment"));
			this.sqlInsert.Parameters["@Comment"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@DisbType", SqlDbType.NVarChar, 2, "DisbType"));
			this.sqlInsert.Parameters["@DisbType"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@SRPDate", SqlDbType.SmallDateTime, 24, "SRPDate"));
			this.sqlInsert.Parameters["@SRPDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@TaxRateId", SqlDbType.Int, 4, "TaxRateId"));
            this.sqlInsert.Parameters["@TaxRateId"].SourceVersion = DataRowVersion.Current;
            //this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            //this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[DisbursementUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbId", SqlDbType.Int, 4, "DisbId"));
			this.sqlUpdate.Parameters["@DisbId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ActivityID", SqlDbType.Int, 4, "ActivityID"));
			this.sqlUpdate.Parameters["@ActivityID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FileID", SqlDbType.Int, 4, "FileID"));
			this.sqlUpdate.Parameters["@FileID"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IRPId", SqlDbType.Int, 4, "IRPId"));
			this.sqlUpdate.Parameters["@IRPId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 4, "OfficeId"));
			this.sqlUpdate.Parameters["@OfficeId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbDate", SqlDbType.SmallDateTime, 24, "DisbDate"));
			this.sqlUpdate.Parameters["@DisbDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbTaxExempt", SqlDbType.Money, 10, "DisbTaxExempt"));
			this.sqlUpdate.Parameters["@DisbTaxExempt"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbTaxable", SqlDbType.Money, 10, "DisbTaxable"));
			this.sqlUpdate.Parameters["@DisbTaxable"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbTax", SqlDbType.Money, 10, "DisbTax"));
			this.sqlUpdate.Parameters["@DisbTax"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Taxed", SqlDbType.Bit, 1, "Taxed"));
			this.sqlUpdate.Parameters["@Taxed"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Final", SqlDbType.Bit, 1, "Final"));
			this.sqlUpdate.Parameters["@Final"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Posted", SqlDbType.Bit, 1, "Posted"));
			this.sqlUpdate.Parameters["@Posted"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Comment", SqlDbType.NVarChar, 255, "Comment"));
			this.sqlUpdate.Parameters["@Comment"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@DisbType", SqlDbType.NVarChar, 2, "DisbType"));
			this.sqlUpdate.Parameters["@DisbType"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@SRPDate", SqlDbType.SmallDateTime, 24, "SRPDate"));
			this.sqlUpdate.Parameters["@SRPDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@TaxRateId", SqlDbType.Int, 4, "TaxRateId"));
            this.sqlUpdate.Parameters["@TaxRateId"].SourceVersion = DataRowVersion.Current;
            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[DisbursementDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DisbId", System.Data.SqlDbType.Int, 4, "DisbId"));
		    this.sqlDelete.Parameters["@DisbId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		public atriumDB.DisbursementDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            atriumDB.DisbursementDataTable dt=new atriumDB.DisbursementDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public atriumDB.DisbursementDataTable Load(int DisbId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[DisbursementSelectByDisbId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DisbId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@DisbId"].Value=DisbId;

            atriumDB.DisbursementDataTable dt=new atriumDB.DisbursementDataTable();
			Fill(dt);
            return dt;
		}


		public atriumDB.DisbursementDataTable LoadByActivityID(int ActivityID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[DisbursementSelectByActivityID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ActivityID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@ActivityID"].Value=ActivityID;

            atriumDB.DisbursementDataTable dt=new atriumDB.DisbursementDataTable();
			Fill(dt);
            return dt;
		}



		public atriumDB.DisbursementDataTable LoadByDisbType(string DisbType)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[DisbursementSelectByDisbType]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@DisbType", System.Data.SqlDbType.NVarChar, 2, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@DisbType"].Value=DisbType;

            atriumDB.DisbursementDataTable dt=new atriumDB.DisbursementDataTable();
			Fill(dt);
            return dt;
		}



		public atriumDB.DisbursementDataTable LoadByFileID(int FileID)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[DisbursementSelectByFileID]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileID", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileID"].Value=FileID;

            atriumDB.DisbursementDataTable dt=new atriumDB.DisbursementDataTable();
			Fill(dt);
            return dt;
		}



		public atriumDB.DisbursementDataTable LoadByIRPId(int IRPId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[DisbursementSelectByIRPId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IRPId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@IRPId"].Value=IRPId;

            atriumDB.DisbursementDataTable dt=new atriumDB.DisbursementDataTable();
			Fill(dt);
            return dt;
		}



		public atriumDB.DisbursementDataTable LoadByOfficeId(int OfficeId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[DisbursementSelectByOfficeId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@OfficeId"].Value=OfficeId;

            atriumDB.DisbursementDataTable dt=new atriumDB.DisbursementDataTable();
			Fill(dt);
            return dt;
		}




	}
	

}
