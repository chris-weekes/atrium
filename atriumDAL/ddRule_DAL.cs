using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on ddRule table 
	/// in lawmate_dev database
	/// on 2015-06-04
	/// </summary>
	public partial class ddRuleDAL:atDAL.ObjectDAL
	{

    	internal ddRuleDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "ddRule", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("RuleId", "RuleId"),
		  new System.Data.Common.DataColumnMapping("TableId", "TableId"),
		  new System.Data.Common.DataColumnMapping("FieldId", "FieldId"),
		  new System.Data.Common.DataColumnMapping("RuleTypeId", "RuleTypeId"),
		  new System.Data.Common.DataColumnMapping("Enabled", "Enabled"),
		  new System.Data.Common.DataColumnMapping("RuleName", "RuleName"),
		  new System.Data.Common.DataColumnMapping("Operator1", "Operator1"),
		  new System.Data.Common.DataColumnMapping("Val1", "Val1"),
		  new System.Data.Common.DataColumnMapping("Val2", "Val2"),
		  new System.Data.Common.DataColumnMapping("Operator2", "Operator2"),
		  new System.Data.Common.DataColumnMapping("MsgId", "MsgId"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("EventId", "EventId"),
		  new System.Data.Common.DataColumnMapping("ACSeriesId", "ACSeriesId"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[ddRuleSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[ddRuleInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@RuleId", SqlDbType.Int, 10, "RuleId"));
			this.sqlInsert.Parameters["@RuleId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@TableId", SqlDbType.Int, 10, "TableId"));
			this.sqlInsert.Parameters["@TableId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@FieldId", SqlDbType.Int, 10, "FieldId"));
			this.sqlInsert.Parameters["@FieldId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RuleTypeId", SqlDbType.Int, 10, "RuleTypeId"));
			this.sqlInsert.Parameters["@RuleTypeId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Enabled", SqlDbType.Bit, 1, "Enabled"));
			this.sqlInsert.Parameters["@Enabled"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RuleName", SqlDbType.NVarChar, 50, "RuleName"));
			this.sqlInsert.Parameters["@RuleName"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Operator1", SqlDbType.NVarChar, 50, "Operator1"));
			this.sqlInsert.Parameters["@Operator1"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Val1", SqlDbType.NVarChar, 255, "Val1"));
			this.sqlInsert.Parameters["@Val1"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Val2", SqlDbType.NVarChar, 255, "Val2"));
			this.sqlInsert.Parameters["@Val2"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Operator2", SqlDbType.NVarChar, 50, "Operator2"));
			this.sqlInsert.Parameters["@Operator2"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@MsgId", SqlDbType.Int, 10, "MsgId"));
			this.sqlInsert.Parameters["@MsgId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EventId", SqlDbType.Int, 10, "EventId"));
			this.sqlInsert.Parameters["@EventId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
			this.sqlInsert.Parameters["@ACSeriesId"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[ddRuleUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@RuleId", SqlDbType.Int, 10, "RuleId"));
			this.sqlUpdate.Parameters["@RuleId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@TableId", SqlDbType.Int, 10, "TableId"));
			this.sqlUpdate.Parameters["@TableId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@FieldId", SqlDbType.Int, 10, "FieldId"));
			this.sqlUpdate.Parameters["@FieldId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@RuleTypeId", SqlDbType.Int, 10, "RuleTypeId"));
			this.sqlUpdate.Parameters["@RuleTypeId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Enabled", SqlDbType.Bit, 1, "Enabled"));
			this.sqlUpdate.Parameters["@Enabled"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@RuleName", SqlDbType.NVarChar, 50, "RuleName"));
			this.sqlUpdate.Parameters["@RuleName"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Operator1", SqlDbType.NVarChar, 50, "Operator1"));
			this.sqlUpdate.Parameters["@Operator1"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Val1", SqlDbType.NVarChar, 255, "Val1"));
			this.sqlUpdate.Parameters["@Val1"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Val2", SqlDbType.NVarChar, 255, "Val2"));
			this.sqlUpdate.Parameters["@Val2"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Operator2", SqlDbType.NVarChar, 50, "Operator2"));
			this.sqlUpdate.Parameters["@Operator2"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@MsgId", SqlDbType.Int, 10, "MsgId"));
			this.sqlUpdate.Parameters["@MsgId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EventId", SqlDbType.Int, 10, "EventId"));
			this.sqlUpdate.Parameters["@EventId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ACSeriesId", SqlDbType.Int, 10, "ACSeriesId"));
			this.sqlUpdate.Parameters["@ACSeriesId"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[ddRuleDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RuleId", System.Data.SqlDbType.Int, 4, "RuleId"));
		    this.sqlDelete.Parameters["@RuleId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public appDB.ddRuleDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            appDB.ddRuleDataTable dt=new appDB.ddRuleDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public appDB.ddRuleDataTable Load(int RuleId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ddRuleSelectByRuleId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RuleId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@RuleId"].Value=RuleId;

            appDB.ddRuleDataTable dt=new appDB.ddRuleDataTable();
			Fill(dt);
            return dt;
		}



	}
	

}
