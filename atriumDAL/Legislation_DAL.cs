using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on Legislation table 
	/// in atrium database
	/// on 12/06/2012
	/// </summary>
	public partial class LegislationDAL:atDAL.ObjectDAL
	{

    	internal LegislationDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Legislation", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("LegislationId", "LegislationId"),
		  new System.Data.Common.DataColumnMapping("LegislationNameEng", "LegislationNameEng"),
		  new System.Data.Common.DataColumnMapping("LegislationNameFre", "LegislationNameFre"),
		  new System.Data.Common.DataColumnMapping("LegislationDescEng", "LegislationDescEng"),
		  new System.Data.Common.DataColumnMapping("LegislationDescFre", "LegislationDescFre"),
		  new System.Data.Common.DataColumnMapping("URLEng", "URLEng"),
		  new System.Data.Common.DataColumnMapping("URLFre", "URLFre"),
		  new System.Data.Common.DataColumnMapping("EffectiveDate", "EffectiveDate"),
		  new System.Data.Common.DataColumnMapping("IsRegulation", "IsRegulation"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[LegislationSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[LegislationInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@LegislationId", SqlDbType.Int, 10, "LegislationId"));
			this.sqlInsert.Parameters["@LegislationId"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LegislationNameEng", SqlDbType.NVarChar, 255, "LegislationNameEng"));
			this.sqlInsert.Parameters["@LegislationNameEng"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LegislationNameFre", SqlDbType.NVarChar, 255, "LegislationNameFre"));
			this.sqlInsert.Parameters["@LegislationNameFre"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LegislationDescEng", SqlDbType.NVarChar, 1000, "LegislationDescEng"));
			this.sqlInsert.Parameters["@LegislationDescEng"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@LegislationDescFre", SqlDbType.NVarChar, 1000, "LegislationDescFre"));
			this.sqlInsert.Parameters["@LegislationDescFre"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@URLEng", SqlDbType.NVarChar, 1000, "URLEng"));
			this.sqlInsert.Parameters["@URLEng"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@URLFre", SqlDbType.NVarChar, 1000, "URLFre"));
			this.sqlInsert.Parameters["@URLFre"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EffectiveDate", SqlDbType.DateTime, 24, "EffectiveDate"));
			this.sqlInsert.Parameters["@EffectiveDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@IsRegulation", SqlDbType.Bit, 1, "IsRegulation"));
			this.sqlInsert.Parameters["@IsRegulation"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlInsert.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlInsert.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlInsert.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlInsert.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[LegislationUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LegislationId", SqlDbType.Int, 10, "LegislationId"));
			this.sqlUpdate.Parameters["@LegislationId"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LegislationNameEng", SqlDbType.NVarChar, 255, "LegislationNameEng"));
			this.sqlUpdate.Parameters["@LegislationNameEng"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LegislationNameFre", SqlDbType.NVarChar, 255, "LegislationNameFre"));
			this.sqlUpdate.Parameters["@LegislationNameFre"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LegislationDescEng", SqlDbType.NVarChar, 1000, "LegislationDescEng"));
			this.sqlUpdate.Parameters["@LegislationDescEng"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@LegislationDescFre", SqlDbType.NVarChar, 1000, "LegislationDescFre"));
			this.sqlUpdate.Parameters["@LegislationDescFre"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@URLEng", SqlDbType.NVarChar, 1000, "URLEng"));
			this.sqlUpdate.Parameters["@URLEng"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@URLFre", SqlDbType.NVarChar, 1000, "URLFre"));
			this.sqlUpdate.Parameters["@URLFre"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EffectiveDate", SqlDbType.DateTime, 24, "EffectiveDate"));
			this.sqlUpdate.Parameters["@EffectiveDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@IsRegulation", SqlDbType.Bit, 1, "IsRegulation"));
			this.sqlUpdate.Parameters["@IsRegulation"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
			this.sqlUpdate.Parameters["@entryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
			this.sqlUpdate.Parameters["@entryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
			this.sqlUpdate.Parameters["@updateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
			this.sqlUpdate.Parameters["@updateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[LegislationDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LegislationId", System.Data.SqlDbType.Int, 4, "LegislationId"));
		    this.sqlDelete.Parameters["@LegislationId"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public appDB.LegislationDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            appDB.LegislationDataTable dt=new appDB.LegislationDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public appDB.LegislationDataTable Load(int LegislationId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[LegislationSelectByLegislationId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LegislationId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@LegislationId"].Value=LegislationId;

            appDB.LegislationDataTable dt=new appDB.LegislationDataTable();
			Fill(dt);
            return dt;
		}



	}
	

}
