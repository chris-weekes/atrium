using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on ADMSEAppeal table 
	/// in atrium database
	/// on 11/26/2012
	/// </summary>
	public partial class ADMSEAppealDAL:atDAL.ObjectDAL
	{

    	internal ADMSEAppealDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "ADMSEAppeal", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("SSTFileNumber", "SSTFileNumber"),
		  new System.Data.Common.DataColumnMapping("AppealSeqId", "AppealSeqId"),
		  new System.Data.Common.DataColumnMapping("SourceCode", "SourceCode"),
		  new System.Data.Common.DataColumnMapping("OfficeId", "OfficeId"),
		  new System.Data.Common.DataColumnMapping("RepsSentToSSTDate", "RepsSentToSSTDate"),
		  new System.Data.Common.DataColumnMapping("RepsRecvdFromSSTDate", "RepsRecvdFromSSTDate"),
		  new System.Data.Common.DataColumnMapping("AtriumUser", "AtriumUser"),
		  new System.Data.Common.DataColumnMapping("AppealLevel", "AppealLevel"),
		  new System.Data.Common.DataColumnMapping("TransferStatus", "TransferStatus"),
		  new System.Data.Common.DataColumnMapping("ActionStatus", "ActionStatus"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("AppealDate", "AppealDate"),
		  new System.Data.Common.DataColumnMapping("Id", "Id"),
		  new System.Data.Common.DataColumnMapping("DateAdditionalInfoReceived", "DateAdditionalInfoReceived"),
		  new System.Data.Common.DataColumnMapping("OriginalSSTFileNumber", "OriginalSSTFileNumber"),
		  new System.Data.Common.DataColumnMapping("LeaveToAppealRecDate", "LeaveToAppealRecDate"),
		  new System.Data.Common.DataColumnMapping("RepsSentToGDDate", "RepsSentToGDDate"),
		  new System.Data.Common.DataColumnMapping("NoRepsReqSentDate", "NoRepsReqSentDate"),
			})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[ADMSEAppealSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[ADMSEAppealInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@SSTFileNumber", SqlDbType.NVarChar, 12, "SSTFileNumber"));
            this.sqlInsert.Parameters["@SSTFileNumber"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AppealSeqId", SqlDbType.Int, 10, "AppealSeqId"));
            this.sqlInsert.Parameters["@AppealSeqId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SourceCode", SqlDbType.NVarChar, 1, "SourceCode"));
            this.sqlInsert.Parameters["@SourceCode"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 10, "OfficeId"));
            this.sqlInsert.Parameters["@OfficeId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RepsSentToSSTDate", SqlDbType.DateTime, 24, "RepsSentToSSTDate"));
            this.sqlInsert.Parameters["@RepsSentToSSTDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RepsRecvdFromSSTDate", SqlDbType.DateTime, 24, "RepsRecvdFromSSTDate"));
            this.sqlInsert.Parameters["@RepsRecvdFromSSTDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AtriumUser", SqlDbType.NVarChar, 80, "AtriumUser"));
            this.sqlInsert.Parameters["@AtriumUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AppealLevel", SqlDbType.NVarChar, 2, "AppealLevel"));
            this.sqlInsert.Parameters["@AppealLevel"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@TransferStatus", SqlDbType.NVarChar, 30, "TransferStatus"));
            this.sqlInsert.Parameters["@TransferStatus"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ActionStatus", SqlDbType.NVarChar, 100, "ActionStatus"));
            this.sqlInsert.Parameters["@ActionStatus"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AppealDate", SqlDbType.DateTime, 24, "AppealDate"));
            this.sqlInsert.Parameters["@AppealDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@Id", SqlDbType.Int, 10, "Id"));
            this.sqlInsert.Parameters["@Id"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@DateAdditionalInfoReceived", SqlDbType.DateTime, 24, "DateAdditionalInfoReceived"));
            this.sqlInsert.Parameters["@DateAdditionalInfoReceived"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@OriginalSSTFileNumber", SqlDbType.NVarChar, 12, "OriginalSSTFileNumber"));
            this.sqlInsert.Parameters["@OriginalSSTFileNumber"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LeaveToAppealRecDate", SqlDbType.DateTime, 24, "LeaveToAppealRecDate"));
            this.sqlInsert.Parameters["@LeaveToAppealRecDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RepsSentToGDDate", SqlDbType.DateTime, 24, "RepsSentToGDDate"));
            this.sqlInsert.Parameters["@RepsSentToGDDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@NoRepsReqSentDate", SqlDbType.DateTime, 24, "NoRepsReqSentDate"));
            this.sqlInsert.Parameters["@NoRepsReqSentDate"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[ADMSEAppealUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@SSTFileNumber", SqlDbType.NVarChar, 12, "SSTFileNumber"));
            this.sqlUpdate.Parameters["@SSTFileNumber"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AppealSeqId", SqlDbType.Int, 10, "AppealSeqId"));
            this.sqlUpdate.Parameters["@AppealSeqId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SourceCode", SqlDbType.NVarChar, 1, "SourceCode"));
            this.sqlUpdate.Parameters["@SourceCode"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeId", SqlDbType.Int, 10, "OfficeId"));
            this.sqlUpdate.Parameters["@OfficeId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RepsSentToSSTDate", SqlDbType.DateTime, 24, "RepsSentToSSTDate"));
            this.sqlUpdate.Parameters["@RepsSentToSSTDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RepsRecvdFromSSTDate", SqlDbType.DateTime, 24, "RepsRecvdFromSSTDate"));
            this.sqlUpdate.Parameters["@RepsRecvdFromSSTDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AtriumUser", SqlDbType.NVarChar, 80, "AtriumUser"));
            this.sqlUpdate.Parameters["@AtriumUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AppealLevel", SqlDbType.NVarChar, 2, "AppealLevel"));
            this.sqlUpdate.Parameters["@AppealLevel"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@TransferStatus", SqlDbType.NVarChar, 30, "TransferStatus"));
            this.sqlUpdate.Parameters["@TransferStatus"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ActionStatus", SqlDbType.NVarChar, 100, "ActionStatus"));
            this.sqlUpdate.Parameters["@ActionStatus"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AppealDate", SqlDbType.DateTime, 24, "AppealDate"));
            this.sqlUpdate.Parameters["@AppealDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@Id", SqlDbType.Int, 10, "Id"));
            this.sqlUpdate.Parameters["@Id"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@DateAdditionalInfoReceived", SqlDbType.DateTime, 24, "DateAdditionalInfoReceived"));
            this.sqlUpdate.Parameters["@DateAdditionalInfoReceived"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@OriginalSSTFileNumber", SqlDbType.NVarChar, 12, "OriginalSSTFileNumber"));
            this.sqlUpdate.Parameters["@OriginalSSTFileNumber"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LeaveToAppealRecDate", SqlDbType.DateTime, 24, "LeaveToAppealRecDate"));
            this.sqlUpdate.Parameters["@LeaveToAppealRecDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RepsSentToGDDate", SqlDbType.DateTime, 24, "RepsSentToGDDate"));
            this.sqlUpdate.Parameters["@RepsSentToGDDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@NoRepsReqSentDate", SqlDbType.DateTime, 24, "NoRepsReqSentDate"));
            this.sqlUpdate.Parameters["@NoRepsReqSentDate"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[ADMSEAppealDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Id", System.Data.SqlDbType.Int, 4, "Id"));
            this.sqlDelete.Parameters["@Id"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }


		 public SST.ADMSEAppealDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            SST.ADMSEAppealDataTable dt=new SST.ADMSEAppealDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public SST.ADMSEAppealDataTable Load(int Id)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[ADMSEAppealSelectById]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@Id"].Value=Id;

            SST.ADMSEAppealDataTable dt=new SST.ADMSEAppealDataTable();
			Fill(dt);
            return dt;
		}

        public SST.ADMSEAppealDataTable LoadByFileNumber(string SSTFileNumber)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[ADMSEAppealSelectBySSTFileNumber]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@SSTFileNumber", System.Data.SqlDbType.NVarChar, 12));

            this.sqlSelect.Parameters["@SSTFileNumber"].Value = SSTFileNumber;

            SST.ADMSEAppealDataTable dt = new SST.ADMSEAppealDataTable();
            Fill(dt);
            return dt;
        }

	}
	

}
