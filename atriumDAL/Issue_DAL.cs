using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on Issue table 
	/// in atrium database
	/// on 3/14/2007
	/// </summary>
	public partial class IssueDAL:atDAL.ObjectDAL
	{

    	internal IssueDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
        {


            this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "Issue", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("IssueId", "IssueId"),
		  new System.Data.Common.DataColumnMapping("ParentIssueId", "ParentIssueId"),
		  new System.Data.Common.DataColumnMapping("FileId", "FileId"),
		  new System.Data.Common.DataColumnMapping("IssueNameEng", "IssueNameEng"),
		  new System.Data.Common.DataColumnMapping("IssueNameFre", "IssueNameFre"),
		  new System.Data.Common.DataColumnMapping("IssueDescEng", "IssueDescEng"),
		  new System.Data.Common.DataColumnMapping("IssueDescFre", "IssueDescFre"),
		  new System.Data.Common.DataColumnMapping("ClientOfficeId", "ClientOfficeId"),
		  new System.Data.Common.DataColumnMapping("entryUser", "entryUser"),
		  new System.Data.Common.DataColumnMapping("entryDate", "entryDate"),
		  new System.Data.Common.DataColumnMapping("updateUser", "updateUser"),
		  new System.Data.Common.DataColumnMapping("updateDate", "updateDate"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
		  new System.Data.Common.DataColumnMapping("SortByFileNumber", "SortByFileNumber"),
		  new System.Data.Common.DataColumnMapping("LegProvisionId", "LegProvisionId"),
		  new System.Data.Common.DataColumnMapping("RegProvisionId", "RegProvisionId"),
		  new System.Data.Common.DataColumnMapping("AnalysisTextEng", "AnalysisTextEng"),
		  new System.Data.Common.DataColumnMapping("AnalysisTextFre", "AnalysisTextFre"),
			})});

            // 
            // sqlSelect
            // 
            this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelect.Connection = myDALManager.SqlCon;

            this.sqlSelectAll.CommandText = "[IssueSelect]";
            this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlSelectAll.Connection = myDALManager.SqlCon;
            this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            // 
            // sqlInsert
            // 
            this.sqlInsert.CommandText = "[IssueInsert]";
            this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlInsert.Connection = myDALManager.SqlCon;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlInsert.Parameters.Add(new SqlParameter("@IssueId", SqlDbType.Int, 10, "IssueId"));
            this.sqlInsert.Parameters["@IssueId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ParentIssueId", SqlDbType.Int, 10, "ParentIssueId"));
            this.sqlInsert.Parameters["@ParentIssueId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlInsert.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IssueNameEng", SqlDbType.NVarChar, 255, "IssueNameEng"));
            this.sqlInsert.Parameters["@IssueNameEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IssueNameFre", SqlDbType.NVarChar, 255, "IssueNameFre"));
            this.sqlInsert.Parameters["@IssueNameFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IssueDescEng", SqlDbType.NVarChar, 1000, "IssueDescEng"));
            this.sqlInsert.Parameters["@IssueDescEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@IssueDescFre", SqlDbType.NVarChar, 1000, "IssueDescFre"));
            this.sqlInsert.Parameters["@IssueDescFre"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ClientOfficeId", SqlDbType.Int, 10, "ClientOfficeId"));
            this.sqlInsert.Parameters["@ClientOfficeId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlInsert.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlInsert.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlInsert.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlInsert.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlInsert.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@SortByFileNumber", SqlDbType.Bit, 1, "SortByFileNumber"));
            this.sqlInsert.Parameters["@SortByFileNumber"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@LegProvisionId", SqlDbType.Int, 10, "LegProvisionId"));
            this.sqlInsert.Parameters["@LegProvisionId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@RegProvisionId", SqlDbType.Int, 10, "RegProvisionId"));
            this.sqlInsert.Parameters["@RegProvisionId"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AnalysisTextEng", SqlDbType.NVarChar, -1, "AnalysisTextEng"));
            this.sqlInsert.Parameters["@AnalysisTextEng"].SourceVersion = DataRowVersion.Current;
            this.sqlInsert.Parameters.Add(new SqlParameter("@AnalysisTextFre", SqlDbType.NVarChar, -1, "AnalysisTextFre"));
            this.sqlInsert.Parameters["@AnalysisTextFre"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlUpdate
            // 
            this.sqlUpdate.CommandText = "[IssueUpdate]";
            this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlUpdate.Connection = myDALManager.SqlCon;
            this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

            this.sqlUpdate.Parameters.Add(new SqlParameter("@IssueId", SqlDbType.Int, 10, "IssueId"));
            this.sqlUpdate.Parameters["@IssueId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ParentIssueId", SqlDbType.Int, 10, "ParentIssueId"));
            this.sqlUpdate.Parameters["@ParentIssueId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@FileId", SqlDbType.Int, 10, "FileId"));
            this.sqlUpdate.Parameters["@FileId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IssueNameEng", SqlDbType.NVarChar, 255, "IssueNameEng"));
            this.sqlUpdate.Parameters["@IssueNameEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IssueNameFre", SqlDbType.NVarChar, 255, "IssueNameFre"));
            this.sqlUpdate.Parameters["@IssueNameFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IssueDescEng", SqlDbType.NVarChar, 1000, "IssueDescEng"));
            this.sqlUpdate.Parameters["@IssueDescEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@IssueDescFre", SqlDbType.NVarChar, 1000, "IssueDescFre"));
            this.sqlUpdate.Parameters["@IssueDescFre"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ClientOfficeId", SqlDbType.Int, 10, "ClientOfficeId"));
            this.sqlUpdate.Parameters["@ClientOfficeId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryUser", SqlDbType.NVarChar, 20, "entryUser"));
            this.sqlUpdate.Parameters["@entryUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@entryDate", SqlDbType.SmallDateTime, 24, "entryDate"));
            this.sqlUpdate.Parameters["@entryDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateUser", SqlDbType.NVarChar, 20, "updateUser"));
            this.sqlUpdate.Parameters["@updateUser"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@updateDate", SqlDbType.SmallDateTime, 24, "updateDate"));
            this.sqlUpdate.Parameters["@updateDate"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            this.sqlUpdate.Parameters["@ts"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@SortByFileNumber", SqlDbType.Bit, 1, "SortByFileNumber"));
            this.sqlUpdate.Parameters["@SortByFileNumber"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@LegProvisionId", SqlDbType.Int, 10, "LegProvisionId"));
            this.sqlUpdate.Parameters["@LegProvisionId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@RegProvisionId", SqlDbType.Int, 10, "RegProvisionId"));
            this.sqlUpdate.Parameters["@RegProvisionId"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AnalysisTextEng", SqlDbType.NVarChar, -1, "AnalysisTextEng"));
            this.sqlUpdate.Parameters["@AnalysisTextEng"].SourceVersion = DataRowVersion.Current;
            this.sqlUpdate.Parameters.Add(new SqlParameter("@AnalysisTextFre", SqlDbType.NVarChar, -1, "AnalysisTextFre"));
            this.sqlUpdate.Parameters["@AnalysisTextFre"].SourceVersion = DataRowVersion.Current;

            // 
            // sqlDelete
            // 
            this.sqlDelete.CommandText = "[IssueDelete]";
            this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
            this.sqlDelete.Connection = myDALManager.SqlCon;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IssueId", System.Data.SqlDbType.Int, 4, "IssueId"));
            this.sqlDelete.Parameters["@IssueId"].SourceVersion = DataRowVersion.Original;
            this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
            this.sqlDelete.Parameters["@ts"].SourceVersion = DataRowVersion.Original;



        }

		 public appDB.IssueDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            appDB.IssueDataTable dt=new appDB.IssueDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public appDB.IssueDataTable Load(int IssueId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[IssueSelectByIssueId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IssueId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@IssueId"].Value=IssueId;

            appDB.IssueDataTable dt=new appDB.IssueDataTable();
			Fill(dt);
            return dt;
		}


		public appDB.IssueDataTable LoadByFileId(int FileId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[IssueSelectByFileId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@FileId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@FileId"].Value=FileId;

            appDB.IssueDataTable dt=new appDB.IssueDataTable();
			Fill(dt);
            return dt;
		}



		public appDB.IssueDataTable LoadByParentIssueId(int ParentIssueId)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[IssueSelectByParentIssueId]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ParentIssueId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters["@ParentIssueId"].Value=ParentIssueId;

            appDB.IssueDataTable dt=new appDB.IssueDataTable();
			Fill(dt);
            return dt;
		}

        public appDB.IssueDataTable LoadByLegProvisionId(int LegProvisionId)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[IssueSelectByLegProvisionId]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@LegProvisionId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters["@LegProvisionId"].Value = LegProvisionId;

            appDB.IssueDataTable dt = new appDB.IssueDataTable();
            Fill(dt);
            return dt;
        }



        public appDB.IssueDataTable LoadByRegProvisionId(int RegProvisionId)
        {
            this.sqlDa.SelectCommand = sqlSelect;
            this.sqlSelect.Parameters.Clear();
            this.sqlSelect.CommandText = "[IssueSelectByRegProvisionId]";
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RegProvisionId", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
            this.sqlSelect.Parameters["@RegProvisionId"].Value = RegProvisionId;

            appDB.IssueDataTable dt = new appDB.IssueDataTable();
            Fill(dt);
            return dt;
        }




	}
	

}
