using System;
using System.Data;
using System.Data.SqlClient;
using lmDatasets;


namespace atriumDAL
{
	/// <summary>
	/// Class generated by sgen 
	/// based on OfficeType table 
	/// in lawmate database
	/// on 3/12/2007
	/// </summary>
	public partial class OfficeTypeDAL:atDAL.ObjectDAL
	{

    	internal OfficeTypeDAL(atriumDALManager pDALManager) :base(pDALManager)
		  {
			  Init();
		  }

        private void Init()
		{


			this.sqlDa.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
		  new System.Data.Common.DataTableMapping("Table", "OfficeType", new System.Data.Common.DataColumnMapping[] {
		  
		  new System.Data.Common.DataColumnMapping("OfficeTypeCode", "OfficeTypeCode"),
		  new System.Data.Common.DataColumnMapping("OfficeTypeDescEng", "OfficeTypeDescEng"),
		  new System.Data.Common.DataColumnMapping("OfficeTypeDescFre", "OfficeTypeDescFre"),
		  new System.Data.Common.DataColumnMapping("OfficerBF", "OfficerBF"),
		  new System.Data.Common.DataColumnMapping("OfficerMail", "OfficerMail"),
		  new System.Data.Common.DataColumnMapping("Billing", "Billing"),
		  new System.Data.Common.DataColumnMapping("Batch", "Batch"),
		  new System.Data.Common.DataColumnMapping("AllDebtors", "AllDebtors"),
		  new System.Data.Common.DataColumnMapping("AllAgents", "AllAgents"),
		  new System.Data.Common.DataColumnMapping("BFList", "BFList"),
		  new System.Data.Common.DataColumnMapping("Mail", "Mail"),
		  new System.Data.Common.DataColumnMapping("CA", "CA"),
		  new System.Data.Common.DataColumnMapping("CB", "CB"),
		  new System.Data.Common.DataColumnMapping("Documents", "Documents"),
		  new System.Data.Common.DataColumnMapping("EntryUser", "EntryUser"),
		  new System.Data.Common.DataColumnMapping("EntryDate", "EntryDate"),
		  new System.Data.Common.DataColumnMapping("UpdateUser", "UpdateUser"),
		  new System.Data.Common.DataColumnMapping("UpdateDate", "UpdateDate"),
		  new System.Data.Common.DataColumnMapping("ReadOnly", "ReadOnly"),
		  new System.Data.Common.DataColumnMapping("Obsolete", "Obsolete"),
		  new System.Data.Common.DataColumnMapping("ts", "ts"),
			})});
			
			// 
			// sqlSelect
			// 
			this.sqlSelect.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelect.Connection=myDALManager.SqlCon;

			this.sqlSelectAll.CommandText = "[OfficeTypeSelect]";
			this.sqlSelectAll.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlSelectAll.Connection=myDALManager.SqlCon;
			this.sqlSelectAll.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4,	System.Data.ParameterDirection.ReturnValue,	false, ((System.Byte)(10)),	((System.Byte)(0)),	"",	System.Data.DataRowVersion.Current,	null));

			// 
			// sqlInsert
			// 
			this.sqlInsert.CommandText = "[OfficeTypeInsert]";
			this.sqlInsert.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlInsert.Connection=myDALManager.SqlCon;
			this.sqlInsert.Parameters.Add(new SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeTypeCode", SqlDbType.NVarChar, 4, "OfficeTypeCode"));
			this.sqlInsert.Parameters["@OfficeTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeTypeDescEng", SqlDbType.NVarChar, 50, "OfficeTypeDescEng"));
			this.sqlInsert.Parameters["@OfficeTypeDescEng"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficeTypeDescFre", SqlDbType.NVarChar, 50, "OfficeTypeDescFre"));
			this.sqlInsert.Parameters["@OfficeTypeDescFre"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficerBF", SqlDbType.Bit, 1, "OfficerBF"));
			this.sqlInsert.Parameters["@OfficerBF"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@OfficerMail", SqlDbType.Bit, 1, "OfficerMail"));
			this.sqlInsert.Parameters["@OfficerMail"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Billing", SqlDbType.Bit, 1, "Billing"));
			this.sqlInsert.Parameters["@Billing"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Batch", SqlDbType.Bit, 1, "Batch"));
			this.sqlInsert.Parameters["@Batch"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AllDebtors", SqlDbType.Bit, 1, "AllDebtors"));
			this.sqlInsert.Parameters["@AllDebtors"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@AllAgents", SqlDbType.Bit, 1, "AllAgents"));
			this.sqlInsert.Parameters["@AllAgents"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@BFList", SqlDbType.Bit, 1, "BFList"));
			this.sqlInsert.Parameters["@BFList"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Mail", SqlDbType.Bit, 1, "Mail"));
			this.sqlInsert.Parameters["@Mail"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CA", SqlDbType.Bit, 1, "CA"));
			this.sqlInsert.Parameters["@CA"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@CB", SqlDbType.Bit, 1, "CB"));
			this.sqlInsert.Parameters["@CB"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Documents", SqlDbType.Bit, 1, "Documents"));
			this.sqlInsert.Parameters["@Documents"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EntryUser", SqlDbType.NVarChar, 20, "EntryUser"));
			this.sqlInsert.Parameters["@EntryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@EntryDate", SqlDbType.SmallDateTime, 24, "EntryDate"));
			this.sqlInsert.Parameters["@EntryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@UpdateUser", SqlDbType.NVarChar, 20, "UpdateUser"));
			this.sqlInsert.Parameters["@UpdateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@UpdateDate", SqlDbType.SmallDateTime, 24, "UpdateDate"));
			this.sqlInsert.Parameters["@UpdateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
			this.sqlInsert.Parameters["@ReadOnly"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
			this.sqlInsert.Parameters["@Obsolete"].SourceVersion=DataRowVersion.Current;
			this.sqlInsert.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
			this.sqlInsert.Parameters["@ts"].SourceVersion=DataRowVersion.Current;

			// 
			// sqlUpdate
			// 
			this.sqlUpdate.CommandText = "[OfficeTypeUpdate]";
			this.sqlUpdate.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlUpdate.Connection=myDALManager.SqlCon;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeTypeCode", SqlDbType.NVarChar, 4, "OfficeTypeCode"));
			this.sqlUpdate.Parameters["@OfficeTypeCode"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeTypeDescEng", SqlDbType.NVarChar, 50, "OfficeTypeDescEng"));
			this.sqlUpdate.Parameters["@OfficeTypeDescEng"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficeTypeDescFre", SqlDbType.NVarChar, 50, "OfficeTypeDescFre"));
			this.sqlUpdate.Parameters["@OfficeTypeDescFre"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficerBF", SqlDbType.Bit, 1, "OfficerBF"));
			this.sqlUpdate.Parameters["@OfficerBF"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@OfficerMail", SqlDbType.Bit, 1, "OfficerMail"));
			this.sqlUpdate.Parameters["@OfficerMail"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Billing", SqlDbType.Bit, 1, "Billing"));
			this.sqlUpdate.Parameters["@Billing"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Batch", SqlDbType.Bit, 1, "Batch"));
			this.sqlUpdate.Parameters["@Batch"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AllDebtors", SqlDbType.Bit, 1, "AllDebtors"));
			this.sqlUpdate.Parameters["@AllDebtors"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@AllAgents", SqlDbType.Bit, 1, "AllAgents"));
			this.sqlUpdate.Parameters["@AllAgents"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@BFList", SqlDbType.Bit, 1, "BFList"));
			this.sqlUpdate.Parameters["@BFList"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Mail", SqlDbType.Bit, 1, "Mail"));
			this.sqlUpdate.Parameters["@Mail"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CA", SqlDbType.Bit, 1, "CA"));
			this.sqlUpdate.Parameters["@CA"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@CB", SqlDbType.Bit, 1, "CB"));
			this.sqlUpdate.Parameters["@CB"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Documents", SqlDbType.Bit, 1, "Documents"));
			this.sqlUpdate.Parameters["@Documents"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EntryUser", SqlDbType.NVarChar, 20, "EntryUser"));
			this.sqlUpdate.Parameters["@EntryUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@EntryDate", SqlDbType.SmallDateTime, 24, "EntryDate"));
			this.sqlUpdate.Parameters["@EntryDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@UpdateUser", SqlDbType.NVarChar, 20, "UpdateUser"));
			this.sqlUpdate.Parameters["@UpdateUser"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@UpdateDate", SqlDbType.SmallDateTime, 24, "UpdateDate"));
			this.sqlUpdate.Parameters["@UpdateDate"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@ReadOnly", SqlDbType.Bit, 1, "ReadOnly"));
			this.sqlUpdate.Parameters["@ReadOnly"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new SqlParameter("@Obsolete", SqlDbType.Bit, 1, "Obsolete"));
			this.sqlUpdate.Parameters["@Obsolete"].SourceVersion=DataRowVersion.Current;
            //this.sqlUpdate.Parameters.Add(new SqlParameter("@ts", SqlDbType.Timestamp, 50, "ts"));
            //this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Current;
			this.sqlUpdate.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlUpdate.Parameters["@ts"].SourceVersion=DataRowVersion.Original;

			// 
			// sqlDelete
			// 
			this.sqlDelete.CommandText = "[OfficeTypeDelete]";
			this.sqlDelete.CommandType = System.Data.CommandType.StoredProcedure;
			this.sqlDelete.Connection=myDALManager.SqlCon;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeTypeCode", System.Data.SqlDbType.NVarChar, 4, "OfficeTypeCode"));
		    this.sqlDelete.Parameters["@OfficeTypeCode"].SourceVersion=DataRowVersion.Original;
			this.sqlDelete.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ts", System.Data.SqlDbType.Timestamp, 50, "ts"));
		    this.sqlDelete.Parameters["@ts"].SourceVersion=DataRowVersion.Original;



		}

		 public CodesDB.OfficeTypeDataTable Load()
		{
			this.sqlDa.SelectCommand=sqlSelectAll;

            CodesDB.OfficeTypeDataTable dt=new CodesDB.OfficeTypeDataTable();
			Fill(dt);
            return dt;
        }

	
		
		public CodesDB.OfficeTypeDataTable Load(string OfficeTypeCode)
		{
			this.sqlDa.SelectCommand=sqlSelect;
			this.sqlSelect.Parameters.Clear();
			this.sqlSelect.CommandText = "[OfficeTypeSelectByOfficeTypeCode]";
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));
			this.sqlSelect.Parameters.Add(new System.Data.SqlClient.SqlParameter("@OfficeTypeCode", System.Data.SqlDbType.NVarChar, 4, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "", System.Data.DataRowVersion.Current, null));

			this.sqlSelect.Parameters["@OfficeTypeCode"].Value=OfficeTypeCode;

            CodesDB.OfficeTypeDataTable dt=new CodesDB.OfficeTypeDataTable();
			Fill(dt);
            return dt;
		}



	}
	

}
