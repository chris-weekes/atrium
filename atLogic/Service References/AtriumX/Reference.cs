//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace atLogic.AtriumX {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AtriumXCon", Namespace="http://schemas.datacontract.org/2004/07/lmras")]
    [System.SerializableAttribute()]
    public partial class AtriumXCon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connect {
            get {
                return this.ConnectField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectField, value) != true)) {
                    this.ConnectField = value;
                    this.RaisePropertyChanged("Connect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pwd {
            get {
                return this.PwdField;
            }
            set {
                if ((object.ReferenceEquals(this.PwdField, value) != true)) {
                    this.PwdField = value;
                    this.RaisePropertyChanged("Pwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AtriumX.IAtriumX")]
    public interface IAtriumX {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerPrefsLoad", ReplyAction="http://tempuri.org/IAtriumX/OfficerPrefsLoadResponse")]
        lmDatasets.officeDB.OfficerPrefsDataTable OfficerPrefsLoad(int id, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerRoleLoad", ReplyAction="http://tempuri.org/IAtriumX/OfficerRoleLoadResponse")]
        lmDatasets.officeDB.OfficerRoleDataTable OfficerRoleLoad(int officerid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ServiceCentreLoad", ReplyAction="http://tempuri.org/IAtriumX/ServiceCentreLoadResponse")]
        lmDatasets.officeDB.ServiceCentreDataTable ServiceCentreLoad(int officeid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/secMembershipLoadByUserId", ReplyAction="http://tempuri.org/IAtriumX/secMembershipLoadByUserIdResponse")]
        lmDatasets.SecurityDB.secMembershipDataTable secMembershipLoadByUserId(int userId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/secUserLoadByUserid", ReplyAction="http://tempuri.org/IAtriumX/secUserLoadByUseridResponse")]
        lmDatasets.SecurityDB.secUserDataTable secUserLoadByUserid(int userId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/secUserLoadByUserName", ReplyAction="http://tempuri.org/IAtriumX/secUserLoadByUserNameResponse")]
        lmDatasets.SecurityDB.secUserDataTable secUserLoadByUserName(string userName, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/DocContentAuditDelete", ReplyAction="http://tempuri.org/IAtriumX/DocContentAuditDeleteResponse")]
        int DocContentAuditDelete(int docId, string version, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/DocContentIsLatest", ReplyAction="http://tempuri.org/IAtriumX/DocContentIsLatestResponse")]
        bool DocContentIsLatest(int docId, byte[] timeStamp, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/DocContentLoad", ReplyAction="http://tempuri.org/IAtriumX/DocContentLoadResponse")]
        byte[] DocContentLoad(int docid, string version, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/DocContentLoadVersionHistory", ReplyAction="http://tempuri.org/IAtriumX/DocContentLoadVersionHistoryResponse")]
        lmDatasets.docDB.VersionHistoryListDataTable DocContentLoadVersionHistory(int DocId, int Fileid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/DocXrefLoad", ReplyAction="http://tempuri.org/IAtriumX/DocXrefLoadResponse")]
        lmDatasets.docDB.DocXRefDataTable DocXrefLoad(int Id, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityBFLoadBF", ReplyAction="http://tempuri.org/IAtriumX/ActivityBFLoadBFResponse")]
        byte[] ActivityBFLoadBF(int officeId, int officerId, System.DateTime date, bool officerBF, long tmpLastEdit, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ContactLoadByte", ReplyAction="http://tempuri.org/IAtriumX/ContactLoadByteResponse")]
        byte[] ContactLoadByte(int contactid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileSearch", ReplyAction="http://tempuri.org/IAtriumX/FileSearchResponse")]
        byte[] FileSearch(string search, string keyword, int officeId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/DocShortcuts", ReplyAction="http://tempuri.org/IAtriumX/DocShortcutsResponse")]
        byte[] DocShortcuts(int fileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ContactSearch", ReplyAction="http://tempuri.org/IAtriumX/ContactSearchResponse")]
        lmDatasets.appDB.ContactSearchDataTable ContactSearch(string where, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/PartySearch", ReplyAction="http://tempuri.org/IAtriumX/PartySearchResponse")]
        lmDatasets.appDB.ContactSearchDataTable PartySearch(string where, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileSearchDates", ReplyAction="http://tempuri.org/IAtriumX/FileSearchDatesResponse")]
        byte[] FileSearchDates(string userName, System.DateTime dateStart, System.DateTime dateEnd, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileSearchSimple", ReplyAction="http://tempuri.org/IAtriumX/FileSearchSimpleResponse")]
        byte[] FileSearchSimple(string where, bool includeXrefs, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileSearchAdvanced", ReplyAction="http://tempuri.org/IAtriumX/FileSearchAdvancedResponse")]
        byte[] FileSearchAdvanced(string where, string whereContact, string whereCaseStatus, bool includeXrefs, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileSearchByThread", ReplyAction="http://tempuri.org/IAtriumX/FileSearchByThreadResponse")]
        byte[] FileSearchByThread(string keyword, int officeId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/HitHilite", ReplyAction="http://tempuri.org/IAtriumX/HitHiliteResponse")]
        string HitHilite(int docRefId, string searchTerm, bool summaryResults, string VersionNumber, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/SearchByContact", ReplyAction="http://tempuri.org/IAtriumX/SearchByContactResponse")]
        lmDatasets.appDB.EFileSearchDataTable SearchByContact(int contactId, string contactType, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/Search", ReplyAction="http://tempuri.org/IAtriumX/SearchResponse")]
        byte[] Search(string filter, bool includeXrefs, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/SearchQuick", ReplyAction="http://tempuri.org/IAtriumX/SearchQuickResponse")]
        byte[] SearchQuick(string filter, bool opinionsOnly, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/AddressLoad", ReplyAction="http://tempuri.org/IAtriumX/AddressLoadResponse")]
        lmDatasets.atriumDB.AddressDataTable AddressLoad(int AddressId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/AddressLoadByContactId", ReplyAction="http://tempuri.org/IAtriumX/AddressLoadByContactIdResponse")]
        lmDatasets.atriumDB.AddressDataTable AddressLoadByContactId(int ContactId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/hlpImageLoad", ReplyAction="http://tempuri.org/IAtriumX/hlpImageLoadResponse")]
        lmDatasets.HelpDB.hlpImageDataTable hlpImageLoad(string FileName, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/hlpPageLoad", ReplyAction="http://tempuri.org/IAtriumX/hlpPageLoadResponse")]
        lmDatasets.HelpDB.hlpPageDataTable hlpPageLoad(string FileName, string lang, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/hlpXmlLoad", ReplyAction="http://tempuri.org/IAtriumX/hlpXmlLoadResponse")]
        lmDatasets.HelpDB.hlpXmlDataTable hlpXmlLoad(string FileName, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/CashBlotterLoad", ReplyAction="http://tempuri.org/IAtriumX/CashBlotterLoadResponse")]
        lmDatasets.CLAS.CashBlotterDataTable CashBlotterLoad(int CashBlotterID, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/CashBlotterLoadbyOfficeId", ReplyAction="http://tempuri.org/IAtriumX/CashBlotterLoadbyOfficeIdResponse")]
        lmDatasets.CLAS.CashBlotterDataTable CashBlotterLoadbyOfficeId(int OfficeId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/CBDetailLoadByCashBlotterId", ReplyAction="http://tempuri.org/IAtriumX/CBDetailLoadByCashBlotterIdResponse")]
        lmDatasets.CLAS.CBDetailDataTable CBDetailLoadByCashBlotterId(int cashBlotterId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/DebtorLoad", ReplyAction="http://tempuri.org/IAtriumX/DebtorLoadResponse")]
        lmDatasets.CLAS.DebtorDataTable DebtorLoad(int DebtorId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficeAccountLoadByFileId", ReplyAction="http://tempuri.org/IAtriumX/OfficeAccountLoadByFileIdResponse")]
        lmDatasets.CLAS.OfficeAccountDataTable OfficeAccountLoadByFileId(int fileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/TaxingLoadByOfficeId", ReplyAction="http://tempuri.org/IAtriumX/TaxingLoadByOfficeIdResponse")]
        byte[] TaxingLoadByOfficeId(int OfficeId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/TaxingLoadBySrpID", ReplyAction="http://tempuri.org/IAtriumX/TaxingLoadBySrpIDResponse")]
        byte[] TaxingLoadBySrpID(int SrpID, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/DisbursementLoadByActivityId", ReplyAction="http://tempuri.org/IAtriumX/DisbursementLoadByActivityIdResponse")]
        lmDatasets.atriumDB.DisbursementDataTable DisbursementLoadByActivityId(int activityId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/Activity_Load", ReplyAction="http://tempuri.org/IAtriumX/Activity_LoadResponse")]
        lmDatasets.atriumDB.ActivityDataTable Activity_Load(int ActivityId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityLoadByProcessId", ReplyAction="http://tempuri.org/IAtriumX/ActivityLoadByProcessIdResponse")]
        lmDatasets.atriumDB.ActivityDataTable ActivityLoadByProcessId(int processId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityBFLoadCompleted", ReplyAction="http://tempuri.org/IAtriumX/ActivityBFLoadCompletedResponse")]
        lmDatasets.atriumDB.ActivityBFDataTable ActivityBFLoadCompleted(int officerId, System.DateTime fromDtate, System.DateTime toDate, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityBFLoad", ReplyAction="http://tempuri.org/IAtriumX/ActivityBFLoadResponse")]
        lmDatasets.atriumDB.ActivityBFDataTable ActivityBFLoad(int ActivityBFId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityBFLoadByActivityId", ReplyAction="http://tempuri.org/IAtriumX/ActivityBFLoadByActivityIdResponse")]
        lmDatasets.atriumDB.ActivityBFDataTable ActivityBFLoadByActivityId(int ActivityId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityTimeLoad", ReplyAction="http://tempuri.org/IAtriumX/ActivityTimeLoadResponse")]
        lmDatasets.atriumDB.ActivityTimeDataTable ActivityTimeLoad(int ActivityTimeId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityTimeLoadByActivityId", ReplyAction="http://tempuri.org/IAtriumX/ActivityTimeLoadByActivityIdResponse")]
        lmDatasets.atriumDB.ActivityTimeDataTable ActivityTimeLoadByActivityId(int ActivityId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityTimeLoadSRPClientByOfficerId", ReplyAction="http://tempuri.org/IAtriumX/ActivityTimeLoadSRPClientByOfficerIdResponse")]
        lmDatasets.appDB.SRPClientDataTable ActivityTimeLoadSRPClientByOfficerId(int SRPID, int OfficerId, System.DateTime StartDate, System.DateTime EndDate, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityTimeLoadSRPClientBySRPID", ReplyAction="http://tempuri.org/IAtriumX/ActivityTimeLoadSRPClientBySRPIDResponse")]
        lmDatasets.appDB.SRPClientDataTable ActivityTimeLoadSRPClientBySRPID(int SRPID, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityTimeLoadByOfficerId", ReplyAction="http://tempuri.org/IAtriumX/ActivityTimeLoadByOfficerIdResponse")]
        lmDatasets.appDB.TimeSlipDataTable ActivityTimeLoadByOfficerId(int OfficerId, System.DateTime StartDate, System.DateTime EndDate, int shortcutsForId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityTimeLoadBySRPID", ReplyAction="http://tempuri.org/IAtriumX/ActivityTimeLoadBySRPIDResponse")]
        lmDatasets.appDB.TimeSlipDataTable ActivityTimeLoadBySRPID(int SRPID, int shortcutsForId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityTimeLoadBranchByOfficerId", ReplyAction="http://tempuri.org/IAtriumX/ActivityTimeLoadBranchByOfficerIdResponse")]
        lmDatasets.appDB.TimeSlipBranchDataTable ActivityTimeLoadBranchByOfficerId(int OfficerId, System.DateTime StartDate, System.DateTime EndDate, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityTimeLoadBranchBySRPID", ReplyAction="http://tempuri.org/IAtriumX/ActivityTimeLoadBranchBySRPIDResponse")]
        lmDatasets.appDB.TimeSlipBranchDataTable ActivityTimeLoadBranchBySRPID(int SRPID, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ActivityXRefLoad", ReplyAction="http://tempuri.org/IAtriumX/ActivityXRefLoadResponse")]
        lmDatasets.atriumDB.ActivityXRefDataTable ActivityXRefLoad(int Id, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/AppointmentLoad", ReplyAction="http://tempuri.org/IAtriumX/AppointmentLoadResponse")]
        lmDatasets.atriumDB.AppointmentDataTable AppointmentLoad(int ApptId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/AppointmentLoadByContactId", ReplyAction="http://tempuri.org/IAtriumX/AppointmentLoadByContactIdResponse")]
        byte[] AppointmentLoadByContactId(int ContactId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/AppointmentLoadByContactIdDates", ReplyAction="http://tempuri.org/IAtriumX/AppointmentLoadByContactIdDatesResponse")]
        lmDatasets.atriumDB.TimeLineDataTable AppointmentLoadByContactIdDates(int ContactId, System.DateTime startDate, System.DateTime endDate, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ApptRecurrenceLoad", ReplyAction="http://tempuri.org/IAtriumX/ApptRecurrenceLoadResponse")]
        lmDatasets.atriumDB.ApptRecurrenceDataTable ApptRecurrenceLoad(int ApptRecurrenceId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ArchiveBatchLoad", ReplyAction="http://tempuri.org/IAtriumX/ArchiveBatchLoadResponse")]
        lmDatasets.atriumDB.ArchiveBatchDataTable ArchiveBatchLoad(int ArchiveId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/AttendeeLoadByApptId", ReplyAction="http://tempuri.org/IAtriumX/AttendeeLoadByApptIdResponse")]
        lmDatasets.atriumDB.AttendeeDataTable AttendeeLoadByApptId(int ApptId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ddEntityLoad", ReplyAction="http://tempuri.org/IAtriumX/ddEntityLoadResponse")]
        lmDatasets.atriumDB.ddEntityDataTable ddEntityLoad(int Id, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileAccessLoadByFileId", ReplyAction="http://tempuri.org/IAtriumX/FileAccessLoadByFileIdResponse")]
        lmDatasets.atriumDB.FileAccessDataTable FileAccessLoadByFileId(int FileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileContactLoadByFileId", ReplyAction="http://tempuri.org/IAtriumX/FileContactLoadByFileIdResponse")]
        lmDatasets.atriumDB.FileContactDataTable FileContactLoadByFileId(int fileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileXRefLoad", ReplyAction="http://tempuri.org/IAtriumX/FileXRefLoadResponse")]
        lmDatasets.atriumDB.FileXRefDataTable FileXRefLoad(int Id, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileXRefLoadByFileId", ReplyAction="http://tempuri.org/IAtriumX/FileXRefLoadByFileIdResponse")]
        lmDatasets.atriumDB.FileXRefDataTable FileXRefLoadByFileId(int FileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/FileXRefLoadByOtherFileId", ReplyAction="http://tempuri.org/IAtriumX/FileXRefLoadByOtherFileIdResponse")]
        lmDatasets.atriumDB.FileXRefDataTable FileXRefLoadByOtherFileId(int OtherFileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/IRPLoadBySRPId", ReplyAction="http://tempuri.org/IAtriumX/IRPLoadBySRPIdResponse")]
        byte[] IRPLoadBySRPId(int srpId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/PersonLoadBySIN", ReplyAction="http://tempuri.org/IAtriumX/PersonLoadBySINResponse")]
        lmDatasets.atriumDB.ContactDataTable PersonLoadBySIN(string SIN, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ProcessLoad", ReplyAction="http://tempuri.org/IAtriumX/ProcessLoadResponse")]
        lmDatasets.atriumDB.ProcessDataTable ProcessLoad(int ProcessId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/secFileRuleLoadByFileId", ReplyAction="http://tempuri.org/IAtriumX/secFileRuleLoadByFileIdResponse")]
        lmDatasets.atriumDB.secFileRuleDataTable secFileRuleLoadByFileId(int FileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/SRPLoad", ReplyAction="http://tempuri.org/IAtriumX/SRPLoadResponse")]
        lmDatasets.atriumDB.SRPDataTable SRPLoad(int SRPID, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/SRPLoadByFileId", ReplyAction="http://tempuri.org/IAtriumX/SRPLoadByFileIdResponse")]
        byte[] SRPLoadByFileId(int FileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/SubmitSRP", ReplyAction="http://tempuri.org/IAtriumX/SubmitSRPResponse")]
        lmDatasets.atriumDB.SRPDataTable SubmitSRP(byte[] dt, int srpId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/EFileLoad", ReplyAction="http://tempuri.org/IAtriumX/EFileLoadResponse")]
        lmDatasets.atriumDB.EFileDataTable EFileLoad(int FileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/EFileLoadByFullFileNumber", ReplyAction="http://tempuri.org/IAtriumX/EFileLoadByFullFileNumberResponse")]
        lmDatasets.atriumDB.EFileDataTable EFileLoadByFullFileNumber(string FileNumber, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/Alert", ReplyAction="http://tempuri.org/IAtriumX/AlertResponse")]
        string Alert(atLogic.AtriumX.AtriumXCon ax, string lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/GetDataTable", ReplyAction="http://tempuri.org/IAtriumX/GetDataTableResponse")]
        System.Data.DataTable GetDataTable(string query, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/GetDataTableByte", ReplyAction="http://tempuri.org/IAtriumX/GetDataTableByteResponse")]
        byte[] GetDataTableByte(string query, System.Data.SerializationFormat sf, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/PKIDGet", ReplyAction="http://tempuri.org/IAtriumX/PKIDGetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Data.SerializationFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(atLogic.AtriumX.AtriumXCon))]
        object PKIDGet(string objectName, int increment, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/PKIDSet", ReplyAction="http://tempuri.org/IAtriumX/PKIDSetResponse")]
        void PKIDSet(string objectName, int initial, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ExecuteSP", ReplyAction="http://tempuri.org/IAtriumX/ExecuteSPResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Data.SerializationFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(atLogic.AtriumX.AtriumXCon))]
        void ExecuteSP(atLogic.AtriumX.AtriumXCon ax, string spName, object[] parameterValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ExecuteNonQuery", ReplyAction="http://tempuri.org/IAtriumX/ExecuteNonQueryResponse")]
        void ExecuteNonQuery(atLogic.AtriumX.AtriumXCon ax, string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ExecuteDatasetByte", ReplyAction="http://tempuri.org/IAtriumX/ExecuteDatasetByteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Data.SerializationFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(atLogic.AtriumX.AtriumXCon))]
        byte[] ExecuteDatasetByte(atLogic.AtriumX.AtriumXCon ax, string spName, object[] parameterValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ExecuteDatasetSQL", ReplyAction="http://tempuri.org/IAtriumX/ExecuteDatasetSQLResponse")]
        System.Data.DataSet ExecuteDatasetSQL(atLogic.AtriumX.AtriumXCon ax, string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ExecuteScalar", ReplyAction="http://tempuri.org/IAtriumX/ExecuteScalarResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Data.SerializationFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(atLogic.AtriumX.AtriumXCon))]
        object ExecuteScalar(atLogic.AtriumX.AtriumXCon ax, string spName, object[] parameterValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ExecuteScalarSQL", ReplyAction="http://tempuri.org/IAtriumX/ExecuteScalarSQLResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Data.SerializationFormat))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(atLogic.AtriumX.AtriumXCon))]
        object ExecuteScalarSQL(atLogic.AtriumX.AtriumXCon ax, string sql);
        
        // CODEGEN: Generating message contract since the wrapper name (UpdateMsg) of message UpdateMsg does not match the default value (Update)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/Update", ReplyAction="http://tempuri.org/IAtriumX/UpdateResponse")]
        atLogic.AtriumX.ResponseMsg Update(atLogic.AtriumX.UpdateMsg request);
        
        // CODEGEN: Generating message contract since the wrapper name (UpdateMsgComp) of message UpdateMsgComp does not match the default value (UpdateComp)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/UpdateComp", ReplyAction="http://tempuri.org/IAtriumX/UpdateCompResponse")]
        atLogic.AtriumX.ResponseMsgComp UpdateComp(atLogic.AtriumX.UpdateMsgComp request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LoadFile", ReplyAction="http://tempuri.org/IAtriumX/LoadFileResponse")]
        byte[] LoadFile(int fileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LoadCLAS", ReplyAction="http://tempuri.org/IAtriumX/LoadCLASResponse")]
        byte[] LoadCLAS(int fileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LoadSST", ReplyAction="http://tempuri.org/IAtriumX/LoadSSTResponse")]
        byte[] LoadSST(int fileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LoadActivity", ReplyAction="http://tempuri.org/IAtriumX/LoadActivityResponse")]
        byte[] LoadActivity(int fileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LoadDoc", ReplyAction="http://tempuri.org/IAtriumX/LoadDocResponse")]
        byte[] LoadDoc(int fileId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LoadDocbyDocId", ReplyAction="http://tempuri.org/IAtriumX/LoadDocbyDocIdResponse")]
        byte[] LoadDocbyDocId(int docid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/Load", ReplyAction="http://tempuri.org/IAtriumX/LoadResponse")]
        byte[] Load(string objectName, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LoadACInfo", ReplyAction="http://tempuri.org/IAtriumX/LoadACInfoResponse")]
        byte[] LoadACInfo(atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LoadDDInfo", ReplyAction="http://tempuri.org/IAtriumX/LoadDDInfoResponse")]
        byte[] LoadDDInfo(atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/LogEvent", ReplyAction="http://tempuri.org/IAtriumX/LogEventResponse")]
        void LogEvent(string eventType, string windowsUser, string lmUser, string workAs, string exType, string exSource, string exMessage, string exStack, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerLoadByUserName", ReplyAction="http://tempuri.org/IAtriumX/OfficerLoadByUserNameResponse")]
        lmDatasets.officeDB.OfficerDataTable OfficerLoadByUserName(string userName, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerLoad", ReplyAction="http://tempuri.org/IAtriumX/OfficerLoadResponse")]
        byte[] OfficerLoad(int officerId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerLoadByRoleCode", ReplyAction="http://tempuri.org/IAtriumX/OfficerLoadByRoleCodeResponse")]
        lmDatasets.officeDB.OfficerDataTable OfficerLoadByRoleCode(string roleCode, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerLoadByEmail", ReplyAction="http://tempuri.org/IAtriumX/OfficerLoadByEmailResponse")]
        lmDatasets.officeDB.OfficerDataTable OfficerLoadByEmail(string email, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerLoadByOfficerCode", ReplyAction="http://tempuri.org/IAtriumX/OfficerLoadByOfficerCodeResponse")]
        lmDatasets.officeDB.OfficerDataTable OfficerLoadByOfficerCode(string officerCode, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerLoadByMyFileId", ReplyAction="http://tempuri.org/IAtriumX/OfficerLoadByMyFileIdResponse")]
        lmDatasets.officeDB.OfficerDataTable OfficerLoadByMyFileId(int fileid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerLoadByOfficeId", ReplyAction="http://tempuri.org/IAtriumX/OfficerLoadByOfficeIdResponse")]
        byte[] OfficerLoadByOfficeId(int officeId, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OpinionLoadByFileId", ReplyAction="http://tempuri.org/IAtriumX/OpinionLoadByFileIdResponse")]
        lmDatasets.Advisory.OpinionDataTable OpinionLoadByFileId(int fileid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ContactEmailLoadByContactId", ReplyAction="http://tempuri.org/IAtriumX/ContactEmailLoadByContactIdResponse")]
        lmDatasets.officeDB.ContactEmailDataTable ContactEmailLoadByContactId(int contactid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/ContactEmailLoadByEmail", ReplyAction="http://tempuri.org/IAtriumX/ContactEmailLoadByEmailResponse")]
        lmDatasets.officeDB.ContactEmailDataTable ContactEmailLoadByEmail(string email, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficeLoad", ReplyAction="http://tempuri.org/IAtriumX/OfficeLoadResponse")]
        byte[] OfficeLoad(int officeid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficeLoadByOfficeFileId", ReplyAction="http://tempuri.org/IAtriumX/OfficeLoadByOfficeFileIdResponse")]
        lmDatasets.officeDB.OfficeDataTable OfficeLoadByOfficeFileId(int fileid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficeLoadbyOfficeCode", ReplyAction="http://tempuri.org/IAtriumX/OfficeLoadbyOfficeCodeResponse")]
        lmDatasets.officeDB.OfficeDataTable OfficeLoadbyOfficeCode(string officeCode, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerDelegateLoadByOfficerId", ReplyAction="http://tempuri.org/IAtriumX/OfficerDelegateLoadByOfficerIdResponse")]
        lmDatasets.officeDB.OfficerDelegateDataTable OfficerDelegateLoadByOfficerId(int officerid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/OfficerDelegateLoadByDelegateId", ReplyAction="http://tempuri.org/IAtriumX/OfficerDelegateLoadByDelegateIdResponse")]
        lmDatasets.officeDB.OfficerDelegateDataTable OfficerDelegateLoadByDelegateId(int delegateid, atLogic.AtriumX.AtriumXCon ax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAtriumX/MemberProfileLoad", ReplyAction="http://tempuri.org/IAtriumX/MemberProfileLoadResponse")]
        lmDatasets.officeDB.MemberProfileDataTable MemberProfileLoad(int id, atLogic.AtriumX.AtriumXCon ax);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMsg", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateMsg {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Connect;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Pwd;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string User;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string[] dtList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet upDS;
        
        public UpdateMsg() {
        }
        
        public UpdateMsg(string Connect, string Pwd, string User, string[] dtList, System.Data.DataSet upDS) {
            this.Connect = Connect;
            this.Pwd = Pwd;
            this.User = User;
            this.dtList = dtList;
            this.upDS = upDS;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResponseMsg", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ResponseMsg {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet downDS;
        
        public ResponseMsg() {
        }
        
        public ResponseMsg(System.Data.DataSet downDS) {
            this.downDS = downDS;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMsgComp", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateMsgComp {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Connect;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Pwd;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string User;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string[] dtList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] upByte;
        
        public UpdateMsgComp() {
        }
        
        public UpdateMsgComp(string Connect, string Pwd, string User, string[] dtList, byte[] upByte) {
            this.Connect = Connect;
            this.Pwd = Pwd;
            this.User = User;
            this.dtList = dtList;
            this.upByte = upByte;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResponseMsgComp", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ResponseMsgComp {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] downByte;
        
        public ResponseMsgComp() {
        }
        
        public ResponseMsgComp(byte[] downByte) {
            this.downByte = downByte;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAtriumXChannel : atLogic.AtriumX.IAtriumX, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AtriumXClient : System.ServiceModel.ClientBase<atLogic.AtriumX.IAtriumX>, atLogic.AtriumX.IAtriumX {
        
        public AtriumXClient() {
        }
        
        public AtriumXClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AtriumXClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AtriumXClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AtriumXClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public lmDatasets.officeDB.OfficerPrefsDataTable OfficerPrefsLoad(int id, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerPrefsLoad(id, ax);
        }
        
        public lmDatasets.officeDB.OfficerRoleDataTable OfficerRoleLoad(int officerid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerRoleLoad(officerid, ax);
        }
        
        public lmDatasets.officeDB.ServiceCentreDataTable ServiceCentreLoad(int officeid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ServiceCentreLoad(officeid, ax);
        }
        
        public lmDatasets.SecurityDB.secMembershipDataTable secMembershipLoadByUserId(int userId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.secMembershipLoadByUserId(userId, ax);
        }
        
        public lmDatasets.SecurityDB.secUserDataTable secUserLoadByUserid(int userId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.secUserLoadByUserid(userId, ax);
        }
        
        public lmDatasets.SecurityDB.secUserDataTable secUserLoadByUserName(string userName, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.secUserLoadByUserName(userName, ax);
        }
        
        public int DocContentAuditDelete(int docId, string version, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.DocContentAuditDelete(docId, version, ax);
        }
        
        public bool DocContentIsLatest(int docId, byte[] timeStamp, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.DocContentIsLatest(docId, timeStamp, ax);
        }
        
        public byte[] DocContentLoad(int docid, string version, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.DocContentLoad(docid, version, ax);
        }
        
        public lmDatasets.docDB.VersionHistoryListDataTable DocContentLoadVersionHistory(int DocId, int Fileid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.DocContentLoadVersionHistory(DocId, Fileid, ax);
        }
        
        public lmDatasets.docDB.DocXRefDataTable DocXrefLoad(int Id, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.DocXrefLoad(Id, ax);
        }
        
        public byte[] ActivityBFLoadBF(int officeId, int officerId, System.DateTime date, bool officerBF, long tmpLastEdit, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityBFLoadBF(officeId, officerId, date, officerBF, tmpLastEdit, ax);
        }
        
        public byte[] ContactLoadByte(int contactid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ContactLoadByte(contactid, ax);
        }
        
        public byte[] FileSearch(string search, string keyword, int officeId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileSearch(search, keyword, officeId, ax);
        }
        
        public byte[] DocShortcuts(int fileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.DocShortcuts(fileId, ax);
        }
        
        public lmDatasets.appDB.ContactSearchDataTable ContactSearch(string where, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ContactSearch(where, ax);
        }
        
        public lmDatasets.appDB.ContactSearchDataTable PartySearch(string where, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.PartySearch(where, ax);
        }
        
        public byte[] FileSearchDates(string userName, System.DateTime dateStart, System.DateTime dateEnd, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileSearchDates(userName, dateStart, dateEnd, ax);
        }
        
        public byte[] FileSearchSimple(string where, bool includeXrefs, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileSearchSimple(where, includeXrefs, ax);
        }
        
        public byte[] FileSearchAdvanced(string where, string whereContact, string whereCaseStatus, bool includeXrefs, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileSearchAdvanced(where, whereContact, whereCaseStatus, includeXrefs, ax);
        }
        
        public byte[] FileSearchByThread(string keyword, int officeId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileSearchByThread(keyword, officeId, ax);
        }
        
        public string HitHilite(int docRefId, string searchTerm, bool summaryResults, string VersionNumber, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.HitHilite(docRefId, searchTerm, summaryResults, VersionNumber, ax);
        }
        
        public lmDatasets.appDB.EFileSearchDataTable SearchByContact(int contactId, string contactType, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.SearchByContact(contactId, contactType, ax);
        }
        
        public byte[] Search(string filter, bool includeXrefs, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.Search(filter, includeXrefs, ax);
        }
        
        public byte[] SearchQuick(string filter, bool opinionsOnly, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.SearchQuick(filter, opinionsOnly, ax);
        }
        
        public lmDatasets.atriumDB.AddressDataTable AddressLoad(int AddressId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.AddressLoad(AddressId, ax);
        }
        
        public lmDatasets.atriumDB.AddressDataTable AddressLoadByContactId(int ContactId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.AddressLoadByContactId(ContactId, ax);
        }
        
        public lmDatasets.HelpDB.hlpImageDataTable hlpImageLoad(string FileName, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.hlpImageLoad(FileName, ax);
        }
        
        public lmDatasets.HelpDB.hlpPageDataTable hlpPageLoad(string FileName, string lang, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.hlpPageLoad(FileName, lang, ax);
        }
        
        public lmDatasets.HelpDB.hlpXmlDataTable hlpXmlLoad(string FileName, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.hlpXmlLoad(FileName, ax);
        }
        
        public lmDatasets.CLAS.CashBlotterDataTable CashBlotterLoad(int CashBlotterID, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.CashBlotterLoad(CashBlotterID, ax);
        }
        
        public lmDatasets.CLAS.CashBlotterDataTable CashBlotterLoadbyOfficeId(int OfficeId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.CashBlotterLoadbyOfficeId(OfficeId, ax);
        }
        
        public lmDatasets.CLAS.CBDetailDataTable CBDetailLoadByCashBlotterId(int cashBlotterId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.CBDetailLoadByCashBlotterId(cashBlotterId, ax);
        }
        
        public lmDatasets.CLAS.DebtorDataTable DebtorLoad(int DebtorId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.DebtorLoad(DebtorId, ax);
        }
        
        public lmDatasets.CLAS.OfficeAccountDataTable OfficeAccountLoadByFileId(int fileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficeAccountLoadByFileId(fileId, ax);
        }
        
        public byte[] TaxingLoadByOfficeId(int OfficeId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.TaxingLoadByOfficeId(OfficeId, ax);
        }
        
        public byte[] TaxingLoadBySrpID(int SrpID, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.TaxingLoadBySrpID(SrpID, ax);
        }
        
        public lmDatasets.atriumDB.DisbursementDataTable DisbursementLoadByActivityId(int activityId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.DisbursementLoadByActivityId(activityId, ax);
        }
        
        public lmDatasets.atriumDB.ActivityDataTable Activity_Load(int ActivityId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.Activity_Load(ActivityId, ax);
        }
        
        public lmDatasets.atriumDB.ActivityDataTable ActivityLoadByProcessId(int processId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityLoadByProcessId(processId, ax);
        }
        
        public lmDatasets.atriumDB.ActivityBFDataTable ActivityBFLoadCompleted(int officerId, System.DateTime fromDtate, System.DateTime toDate, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityBFLoadCompleted(officerId, fromDtate, toDate, ax);
        }
        
        public lmDatasets.atriumDB.ActivityBFDataTable ActivityBFLoad(int ActivityBFId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityBFLoad(ActivityBFId, ax);
        }
        
        public lmDatasets.atriumDB.ActivityBFDataTable ActivityBFLoadByActivityId(int ActivityId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityBFLoadByActivityId(ActivityId, ax);
        }
        
        public lmDatasets.atriumDB.ActivityTimeDataTable ActivityTimeLoad(int ActivityTimeId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityTimeLoad(ActivityTimeId, ax);
        }
        
        public lmDatasets.atriumDB.ActivityTimeDataTable ActivityTimeLoadByActivityId(int ActivityId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityTimeLoadByActivityId(ActivityId, ax);
        }
        
        public lmDatasets.appDB.SRPClientDataTable ActivityTimeLoadSRPClientByOfficerId(int SRPID, int OfficerId, System.DateTime StartDate, System.DateTime EndDate, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityTimeLoadSRPClientByOfficerId(SRPID, OfficerId, StartDate, EndDate, ax);
        }
        
        public lmDatasets.appDB.SRPClientDataTable ActivityTimeLoadSRPClientBySRPID(int SRPID, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityTimeLoadSRPClientBySRPID(SRPID, ax);
        }
        
        public lmDatasets.appDB.TimeSlipDataTable ActivityTimeLoadByOfficerId(int OfficerId, System.DateTime StartDate, System.DateTime EndDate, int shortcutsForId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityTimeLoadByOfficerId(OfficerId, StartDate, EndDate, shortcutsForId, ax);
        }
        
        public lmDatasets.appDB.TimeSlipDataTable ActivityTimeLoadBySRPID(int SRPID, int shortcutsForId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityTimeLoadBySRPID(SRPID, shortcutsForId, ax);
        }
        
        public lmDatasets.appDB.TimeSlipBranchDataTable ActivityTimeLoadBranchByOfficerId(int OfficerId, System.DateTime StartDate, System.DateTime EndDate, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityTimeLoadBranchByOfficerId(OfficerId, StartDate, EndDate, ax);
        }
        
        public lmDatasets.appDB.TimeSlipBranchDataTable ActivityTimeLoadBranchBySRPID(int SRPID, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityTimeLoadBranchBySRPID(SRPID, ax);
        }
        
        public lmDatasets.atriumDB.ActivityXRefDataTable ActivityXRefLoad(int Id, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ActivityXRefLoad(Id, ax);
        }
        
        public lmDatasets.atriumDB.AppointmentDataTable AppointmentLoad(int ApptId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.AppointmentLoad(ApptId, ax);
        }
        
        public byte[] AppointmentLoadByContactId(int ContactId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.AppointmentLoadByContactId(ContactId, ax);
        }
        
        public lmDatasets.atriumDB.TimeLineDataTable AppointmentLoadByContactIdDates(int ContactId, System.DateTime startDate, System.DateTime endDate, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.AppointmentLoadByContactIdDates(ContactId, startDate, endDate, ax);
        }
        
        public lmDatasets.atriumDB.ApptRecurrenceDataTable ApptRecurrenceLoad(int ApptRecurrenceId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ApptRecurrenceLoad(ApptRecurrenceId, ax);
        }
        
        public lmDatasets.atriumDB.ArchiveBatchDataTable ArchiveBatchLoad(int ArchiveId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ArchiveBatchLoad(ArchiveId, ax);
        }
        
        public lmDatasets.atriumDB.AttendeeDataTable AttendeeLoadByApptId(int ApptId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.AttendeeLoadByApptId(ApptId, ax);
        }
        
        public lmDatasets.atriumDB.ddEntityDataTable ddEntityLoad(int Id, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ddEntityLoad(Id, ax);
        }
        
        public lmDatasets.atriumDB.FileAccessDataTable FileAccessLoadByFileId(int FileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileAccessLoadByFileId(FileId, ax);
        }
        
        public lmDatasets.atriumDB.FileContactDataTable FileContactLoadByFileId(int fileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileContactLoadByFileId(fileId, ax);
        }
        
        public lmDatasets.atriumDB.FileXRefDataTable FileXRefLoad(int Id, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileXRefLoad(Id, ax);
        }
        
        public lmDatasets.atriumDB.FileXRefDataTable FileXRefLoadByFileId(int FileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileXRefLoadByFileId(FileId, ax);
        }
        
        public lmDatasets.atriumDB.FileXRefDataTable FileXRefLoadByOtherFileId(int OtherFileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.FileXRefLoadByOtherFileId(OtherFileId, ax);
        }
        
        public byte[] IRPLoadBySRPId(int srpId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.IRPLoadBySRPId(srpId, ax);
        }
        
        public lmDatasets.atriumDB.ContactDataTable PersonLoadBySIN(string SIN, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.PersonLoadBySIN(SIN, ax);
        }
        
        public lmDatasets.atriumDB.ProcessDataTable ProcessLoad(int ProcessId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ProcessLoad(ProcessId, ax);
        }
        
        public lmDatasets.atriumDB.secFileRuleDataTable secFileRuleLoadByFileId(int FileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.secFileRuleLoadByFileId(FileId, ax);
        }
        
        public lmDatasets.atriumDB.SRPDataTable SRPLoad(int SRPID, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.SRPLoad(SRPID, ax);
        }
        
        public byte[] SRPLoadByFileId(int FileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.SRPLoadByFileId(FileId, ax);
        }
        
        public lmDatasets.atriumDB.SRPDataTable SubmitSRP(byte[] dt, int srpId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.SubmitSRP(dt, srpId, ax);
        }
        
        public lmDatasets.atriumDB.EFileDataTable EFileLoad(int FileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.EFileLoad(FileId, ax);
        }
        
        public lmDatasets.atriumDB.EFileDataTable EFileLoadByFullFileNumber(string FileNumber, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.EFileLoadByFullFileNumber(FileNumber, ax);
        }
        
        public string Alert(atLogic.AtriumX.AtriumXCon ax, string lang) {
            return base.Channel.Alert(ax, lang);
        }
        
        public System.Data.DataTable GetDataTable(string query, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.GetDataTable(query, ax);
        }
        
        public byte[] GetDataTableByte(string query, System.Data.SerializationFormat sf, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.GetDataTableByte(query, sf, ax);
        }
        
        public object PKIDGet(string objectName, int increment, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.PKIDGet(objectName, increment, ax);
        }
        
        public void PKIDSet(string objectName, int initial, atLogic.AtriumX.AtriumXCon ax) {
            base.Channel.PKIDSet(objectName, initial, ax);
        }
        
        public void ExecuteSP(atLogic.AtriumX.AtriumXCon ax, string spName, object[] parameterValues) {
            base.Channel.ExecuteSP(ax, spName, parameterValues);
        }
        
        public void ExecuteNonQuery(atLogic.AtriumX.AtriumXCon ax, string sql) {
            base.Channel.ExecuteNonQuery(ax, sql);
        }
        
        public byte[] ExecuteDatasetByte(atLogic.AtriumX.AtriumXCon ax, string spName, object[] parameterValues) {
            return base.Channel.ExecuteDatasetByte(ax, spName, parameterValues);
        }
        
        public System.Data.DataSet ExecuteDatasetSQL(atLogic.AtriumX.AtriumXCon ax, string sql) {
            return base.Channel.ExecuteDatasetSQL(ax, sql);
        }
        
        public object ExecuteScalar(atLogic.AtriumX.AtriumXCon ax, string spName, object[] parameterValues) {
            return base.Channel.ExecuteScalar(ax, spName, parameterValues);
        }
        
        public object ExecuteScalarSQL(atLogic.AtriumX.AtriumXCon ax, string sql) {
            return base.Channel.ExecuteScalarSQL(ax, sql);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        atLogic.AtriumX.ResponseMsg atLogic.AtriumX.IAtriumX.Update(atLogic.AtriumX.UpdateMsg request) {
            return base.Channel.Update(request);
        }
        
        public System.Data.DataSet Update(string Connect, string Pwd, string User, string[] dtList, System.Data.DataSet upDS) {
            atLogic.AtriumX.UpdateMsg inValue = new atLogic.AtriumX.UpdateMsg();
            inValue.Connect = Connect;
            inValue.Pwd = Pwd;
            inValue.User = User;
            inValue.dtList = dtList;
            inValue.upDS = upDS;
            atLogic.AtriumX.ResponseMsg retVal = ((atLogic.AtriumX.IAtriumX)(this)).Update(inValue);
            return retVal.downDS;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        atLogic.AtriumX.ResponseMsgComp atLogic.AtriumX.IAtriumX.UpdateComp(atLogic.AtriumX.UpdateMsgComp request) {
            return base.Channel.UpdateComp(request);
        }
        
        public byte[] UpdateComp(string Connect, string Pwd, string User, string[] dtList, byte[] upByte) {
            atLogic.AtriumX.UpdateMsgComp inValue = new atLogic.AtriumX.UpdateMsgComp();
            inValue.Connect = Connect;
            inValue.Pwd = Pwd;
            inValue.User = User;
            inValue.dtList = dtList;
            inValue.upByte = upByte;
            atLogic.AtriumX.ResponseMsgComp retVal = ((atLogic.AtriumX.IAtriumX)(this)).UpdateComp(inValue);
            return retVal.downByte;
        }
        
        public byte[] LoadFile(int fileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.LoadFile(fileId, ax);
        }
        
        public byte[] LoadCLAS(int fileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.LoadCLAS(fileId, ax);
        }
        
        public byte[] LoadSST(int fileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.LoadSST(fileId, ax);
        }
        
        public byte[] LoadActivity(int fileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.LoadActivity(fileId, ax);
        }
        
        public byte[] LoadDoc(int fileId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.LoadDoc(fileId, ax);
        }
        
        public byte[] LoadDocbyDocId(int docid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.LoadDocbyDocId(docid, ax);
        }
        
        public byte[] Load(string objectName, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.Load(objectName, ax);
        }
        
        public byte[] LoadACInfo(atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.LoadACInfo(ax);
        }
        
        public byte[] LoadDDInfo(atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.LoadDDInfo(ax);
        }
        
        public void LogEvent(string eventType, string windowsUser, string lmUser, string workAs, string exType, string exSource, string exMessage, string exStack, atLogic.AtriumX.AtriumXCon ax) {
            base.Channel.LogEvent(eventType, windowsUser, lmUser, workAs, exType, exSource, exMessage, exStack, ax);
        }
        
        public lmDatasets.officeDB.OfficerDataTable OfficerLoadByUserName(string userName, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerLoadByUserName(userName, ax);
        }
        
        public byte[] OfficerLoad(int officerId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerLoad(officerId, ax);
        }
        
        public lmDatasets.officeDB.OfficerDataTable OfficerLoadByRoleCode(string roleCode, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerLoadByRoleCode(roleCode, ax);
        }
        
        public lmDatasets.officeDB.OfficerDataTable OfficerLoadByEmail(string email, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerLoadByEmail(email, ax);
        }
        
        public lmDatasets.officeDB.OfficerDataTable OfficerLoadByOfficerCode(string officerCode, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerLoadByOfficerCode(officerCode, ax);
        }
        
        public lmDatasets.officeDB.OfficerDataTable OfficerLoadByMyFileId(int fileid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerLoadByMyFileId(fileid, ax);
        }
        
        public byte[] OfficerLoadByOfficeId(int officeId, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerLoadByOfficeId(officeId, ax);
        }
        
        public lmDatasets.Advisory.OpinionDataTable OpinionLoadByFileId(int fileid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OpinionLoadByFileId(fileid, ax);
        }
        
        public lmDatasets.officeDB.ContactEmailDataTable ContactEmailLoadByContactId(int contactid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ContactEmailLoadByContactId(contactid, ax);
        }
        
        public lmDatasets.officeDB.ContactEmailDataTable ContactEmailLoadByEmail(string email, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.ContactEmailLoadByEmail(email, ax);
        }
        
        public byte[] OfficeLoad(int officeid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficeLoad(officeid, ax);
        }
        
        public lmDatasets.officeDB.OfficeDataTable OfficeLoadByOfficeFileId(int fileid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficeLoadByOfficeFileId(fileid, ax);
        }
        
        public lmDatasets.officeDB.OfficeDataTable OfficeLoadbyOfficeCode(string officeCode, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficeLoadbyOfficeCode(officeCode, ax);
        }
        
        public lmDatasets.officeDB.OfficerDelegateDataTable OfficerDelegateLoadByOfficerId(int officerid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerDelegateLoadByOfficerId(officerid, ax);
        }
        
        public lmDatasets.officeDB.OfficerDelegateDataTable OfficerDelegateLoadByDelegateId(int delegateid, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.OfficerDelegateLoadByDelegateId(delegateid, ax);
        }
        
        public lmDatasets.officeDB.MemberProfileDataTable MemberProfileLoad(int id, atLogic.AtriumX.AtriumXCon ax) {
            return base.Channel.MemberProfileLoad(id, ax);
        }
    }
}
